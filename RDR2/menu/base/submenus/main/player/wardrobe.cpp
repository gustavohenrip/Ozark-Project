#include "wardrobe.hpp"
#include "menu/base/submenu_handler.hpp"
#include "appearance.hpp"
#include "menu/base/util/notify.hpp"
#include "utils/va.hpp"
#include "src/menu/base/util/fiber_pool.hpp"
#include "src/menu/base/util/fiber_manager.hpp"
#include "menu/base/util/control_manager.hpp"
#include "menu/base/util/timers.hpp"

using namespace wardrobeMenuVars;

namespace wardrobeMenuVars {
	vars_ vars;

	uint32_t hatsMale[] = {
	0x146C035C,
	0x17C59C8F,
	0x208B8617,
	0x23582134,
	0x267E3453,
	0x27B3E0A,
	0x313F92C9,
	0x5B32F9D2,
	0x67078CF1,
	0x6FBFFFFA,
	0x767CD7C4,
	0x78542A3D,
	0x7FE8742A,
	0x91726EF9,
	0x99A14CE2,
	0x9A3DA99D,
	0x38262B2E,
	0xAF9354E3,
	0xB255788E,
	0xB523B63A,
	0xB70C089B,
	0xFA406299,
	0x33CED5BD,
	0x415B70D6,
	0xB35F54D8,
	0xD07A0F0D,
	0xDECAABAE,
	0xEC2EC676,
	0x17111C42,
	0x89FDD91B,
	0x26DF92D0,
	0x9C407DA0,
	0x389F364F,
	0x4510CF32,
	0xC166C7EC,
	0x6FBCA499,
	0x10106532,
	0x8A771D62,
	0xFB427EF7,
	0x9E59C41,
	0x42060C7D,
	0xAE05E47F,
	0x503FA8F0,
	0x6779D764,
	0x75BC73E9,
	0x95536996,
	0xA7220D33,
	0x4BD6D68E,
	0x5E0FFB00,
	0xC9A0522F,
	0x60CB0086,
	0x728EA40D,
	0x82944418,
	0x2D625B41,
	0x98ABB1D2,
	0x42E28641,
	0xAE76DD68,
	0x51C8240C,
	0x67714F5E,
	0xC1A6F167,
	0x8B655559,
	0xA1118045,
	0x57D66E3C,
	0xBF01BC91,
	0x66060A9B,
	0xCCEB5864,
	0xD2E36454,
	0x9FD5D3CB,
	0xA09E5520,
	0x3C728D02,
	0x4E3FB09C,
	0xB1AB7776,
	0xCEF131C5,
	0x6F22202,
	0x841B9C1B,
	0x3408B80E,
	0x46C65D89,
	0xB16BB2D6,
	0x59F583EB,
	0x6BB02760,
	0xD1F6A30,
	0xF81A511F,
	0x9FF620D8,
	0x3FD4E097,
	0x6F68BFBE,
	0xDC9C9A24,
	0x7D0E5B09,
	0xEAF5B6D6,
	0x16628DAF,
	0x1B8C8FD9,
	0x2542A345,
	0xFDABD410,
	0x36A34606,
	0x56B60627,
	0x707839AB,
	0x7DC55449,
	0xEC0930CB,
	0xCB371D5,
	0xCB4BE5DA,
	0xCE47D1B8,
	0x8D07DE72,
	0xFEBAC1D6,
	0x9CBE7DDF,
	0xA13D06DC,
	0xAEF8A253,
	0x65F31049,
	0xCB665B2E,
	0x7D613F25,
	0xF345D0ED,
	0xF44AD2FB,
	0x2CD04405,
	0xA9723D4B,
	0x4CF7400,
	0x6987796,
	0xCFAE09C2,
	0xE184AD6F,
	0x2DD9D1BF,
	0x93284B51,
	0x985A55D1,
	0x2E5E01BE,
	0x3F90A423,
	0xA9A0785D,
	0x462C3176,
	0x6C0C7D1A,
	0x6F4F83BC,
	0x9A758103,
	0x3434B473,
	0xAD43269E,
	0xBFD04BB8,
	0xD176EF05,
	0xDB7002F7,
	0x7705AF7,
	0xED29A66A,
	0x2490B32C,
	0xFBC3E193,
	0x38B3DB72,
	0xA8C3BB8C,
	0x4601F60E,
	0x6F2F4864,
	0x7D6964D8,
	0xE97ABD01,
	0x8F0DC2A9,
	0x299477B4,
	0xA09665BA,
	0xBB959BC0,
	0xCD553F3F,
	0x72700976,
	0x7F1922C8,
	0x1751D32F,
	0x9EE27673,
	0xB9282AFE,
	0xCAE6CE7B,
	0x67508750,
	0xD59BE3E5,
	0x72A31DCD,
	0xE0717968,
	0x7BEE3063,
	0xF8F47E03,
	0x9D734702,
	0x40B9435,
	0xAF686AEC,
	0xCAE621E7,
	0xE8A1DD5E,
	0x7FCE8BB9,
	0x16B5B989,
	0x25D3CBF6,
	0x43F98841,
	0xB76B6F23,
	0x5BD8B7FF,
	0x68B551B8,
	0x12F02AD,
	0x7E6B7D24,
	0x17812F51,
	0x88DBDDAF,
	0x99157E22,
	0xA4D11595,
	0xBEAEC950,
	0x5BE383BB,
	0x6B7F22F6,
	0xD0C86D83,
	0x6C6824C4,
	0x8A661245,
	0x262CC9D4,
	0x362F69D9,
	0xA1303FD9,
	0x41A080BB,
	0x575EAC37,
	0x6EC45B02,
	0x7ECAFB0F,
	0xE0F00E11,
	0xE89B2FC1,
	0xEC0F0091,
	0x1D5FD02D,
	0x8D192FA6,
	0xA3D9DD27,
	0xA8A2E6B9,
	0xCF7AB468,
	0x7673025A,
	0xFA8BC22A,
	0x1F6837C9,
	0xF63C6576,
	0x92E89ED0,
	0xA0B03A5F,
	0xAF5657AB,
	0xC9E90CCC,
	0x69B2CC65,
	0x10A61A45,
	0xF17A42FC,
	0x89787356,
	0x9E2E9CC2,
	0xABFC385D,
	0xC2BD65DF,
	0x6542AAEB,
	0xDE831D0E,
	0x7B03D66D,
	0x9376514E,
	0xA4D1F405,
	0xB25D8F20,
	0xCC1FC2A0,
	0x709A8B97,
	0xDE096673,
	0xE0B96BD7,
	0x825B2F18,
	0x3C8FEDE2,
	0xA5A0977,
	0xAF56D372,
	0x52A99A19,
	0x620038C6,
	0x65AB401C,
	0x180B24D9,
	0x859B7FFC,
	0xF698ED2B,
	0x9C40D626,
	0x39CA4E4,
	0xA350644D,
	0xA701EBA8,
	0x5EBF5B2C,
	0x748886BE,
	0x77B70D13,
	0x828522AF,
	0xF811D3CC,
	0x92E1096C,
	0x2934B619,
	0xAF00C1AB,
	0x565C1063,
	0xC4C6ED37,
	0xE049A43C,
	0x137A8AA5,
	0x3AACDC80,
	0x56F71514,
	0x574415AA,
	0x73B84E96,
	0x104B07BD,
	0x8171EA09,
	0xF205DC98,
	0x8DB293F3,
	0x28654956,
	0x9EF7367C,
	0x3677F5B,
	0x3A80ED8D,
	0xC3F8007D,
	0xD5FAA482,
	0x08EDC1C92,
	0x0280CCEF5,
	0x0A2C1445C,
	0x05930B13C,
	0x06DBEDA58,
	0x07C967807,
	0x065BCB477,
	0x019161203,
	0x08E671A4,
	0x02C563883,
	0x02C563883,
	0x04FDD7F91,
	0x0D22A842D,
	0x0737D46D0,
	0x0859A6B0A,
	0x0FD08890E,
	0x0342B7753,
	0x045829A05,
	0x048CFA09F,
	0x0B127F14E,
	0x05AFE44FC,
	0x06B62E5C5,
	0x07CBA0873,
	0x0282B1C8A,
	0x0FCEAC606,
	0x0A4EE160E,
	0x0C0E0CDF3,
	0x05DBA07B3,
	0x06BEEA41C,
	0x0D29BF169,
	0x0EE07A840,
	0x0F53C8E84,
	0x023EF6BE9,
	0x056D1D1AD,
	0x0BEA9215E,
	0x068DE75C6,
	0x078EB328,
	0x011D847BB,
	0x0EC597CBE,
	0x01E55488E,
	0x0F8A4FD2A,
	0x031F0EFC5,
	0x03C79373,
	0x0CA64A0AA,
	0x0158C36FC,
	0x0FCAE6D5F,
	0x09B28AA55,
	0x03DD66FC6,
	0x04581FF09,
	0x0CE7410EB,
	0x0E02FB462,
	0x0ED09CE16,
	0x01779A2F9,
	0x08A1B44C3,
	0x08D1D4AEF,
	0x09DF6ECA2,
	0x0A447791B,
	0x05F4FEF2D,
	0x06EB58DF8,
	0x07355175F,
	0x07ABCA606,
	0x087491A53,
	0x0992FBE20,
	0x0A3E7D390,
	0x03E5D887D,
	0x0510A2DD6,
	0x0BED00964,
	0x075B9A7A,
	0x0ECFF65C2,
	0x0198A0445,
	0x0F1F13514,
	0x02D052B3B,
	0x0AF03AF3E,
	0x0D095F262,
	0x0E04491BB,
	0x0DAAB87E9,
	0x03E8135EB,
	0x0F2224909,
	0x03B49DB5F,
	0x0A4CA2E5A,
	0x0B77ED3C3,
	0x0566571,
	0x0CE1880F6,
	0x0E9D7B874,
	0x0170E12E8,
	0x08C0D927,
	0x0FAFE3DA2,
	0x0304BA83C,
	0x09ED2054B,
	0x0AD27A1F6,
	0x04682D4AA,
	0x0548E70C1,
	0x0E5FF13A4,
	0x01AF21AF,
	0x0F73E0CCD,
	0x02DDE7A0D,
	0x040191E8A,
	0x0C0349EBB,
	0x0CA5FB311,
	0x0DCC957E4,
	0x0E4FB6848,
	0x01FE651E5,
	0x09C324A7F,
	0x09EF84FF3,
	0x0A95964CD,
	0x0AC52EAA8,
	0x051AB3572,
	0x066B65F88,
	0x078068228,
	0x05C3F95E7,
	0x0F25D7E55,
	0x01EB9570C,
	0x023E9E17,
	0x02432E1FF,
	0x0A35E605C,
	0x0D02B39F,
	0x070ABFAF0,
	0x0E095DAC6,
	0x01AFDD7DC,
	0x028487271,
	0x0FE831EE7,
	0x0364D0E72,
	0x041DB258E,
	0x052C8C769,
	0x0608E62F4,
	0x0D94BD0A,
	0x0F47E0596,
	0x08B7D339A,
	0x09488C5B1,
	0x0B7DD8C5A,
	0x0B7DD8C5A,
	0x05D5B574F,
	0x0DD94D7C8,
	0x0EB73A08,
	0x0F1453778,
	0x09A6489AC,
	0x0353BBF58,
	0x0A7A1A426,
	0x0CC3D6D5D,
	0x06EF4B2CD,
	0x0E3861BFA,
	0x08385DBEF,
	0x08AF8F85,
	0x0FAF67413,
	0x094372696,
	0x0A1FCC221,
	0x0BDC57966,
	0x0CFD61DD3,
	0x0DD6CB900,
	0x016DC2BDE,
	0x0F482ACA0,
	0x0F7353251,
	0x095206DD9,
	0x0AFDB239E,
	0x0C86D54C2,
	0x0DABB795E,
	0x0E4E40DAF,
	0x0822147DB,
	0x01D55D130,
	0x021C75A0F,
	0x0289867B1,
	0x0341BFEBC,
	0x0B72204C6,
	0x0C4ECA05B,
	0x06926E8D5,
	0x0EF13467,
	0x08AB9FAFD,
	0x08DDF0143,
	0x031AE48E7,
	0x04378EC7C,
	0x05C6E1E66,
	0x0C4986EB5,
	0x0D8D1172E,
	0x0E2832A92,
	0x0887A3B02,
	0x02D8B0519,
	0x03B59A0B6,
	0x0AA737EF4,
	0x04F51C8A6,
	0x05D24E44C,
	0x0D62BD664,
	0x078709AEF,
	0x0F254CC1C,
	0x08E7B846B,
	0x0FD35E1DE,
	0x0A9C5BAFF,
	0x057BC16E5,
	0x0C61673A0,
	0x0D12C89C8,
	0x0E08B2889,
	0x0246622E1,
	0x0FD979C8,
	0x03AB64F81,
	0x04914EC3E,
	0x01632867A,
	0x0190DD37,
	0x0F7C36546,
	0x034505E5F,
	0x040B8772F,
	0x0C0D5F768,
	0x067774490,
	0x0E3043BC8,
	0x0E69AC2F5,
	0x0152C2017,
	0x08FE0B9C4,
	0x036198637,
	0x0A672EEB,
	0x0445D22BE,
	0x0B1ADFD5E,
	0x068D0EBA5,
	0x0EB60F0C3,
	0x081921D27,
	0x01C5E2855,
	0x0FF20EDDB,
	0x031FC5391,
	0x047EA7F6D,
	0x0C591FAC2,
	0x0DB432620,
	0x0E866C067,
	0x0E978CC8,
	0x094AED923,
	0x0FEAFAD27,
	0x033D11769,
	0x044C13949,
	0x05709DDDA,
	0x0698502CC,
	0x01053D06F,
	0x07BD8A773,
	0x0F4E1BA7E,
	0x09D5D8B77,
	0x0B8D64268,
	0x0CB1BE6F3,
	0x0E48319C1,
	0x012457545,
	0x0FD4FB7E3,
	0x02E879A52,
	0x02F831CC5,
	0x05D58F870,
	0x060C27EC7,
	0x0CB15D370,
	0x0E0A3FE8C,
	0x01796EC71,
	0x01B2C1945,
	0x08B05791E,
	0x02D78BDDE,
	0x09F4C21AB,
	0x03696D01A,
	0x048DC74A5,
	0x052D1087E,
	0x059081524,
	0x08982F489,
	0x026342E05,
	0x0943609EF,
	0x0C29E66BF,
	0x06F173FB2,
	0x078D15326,
	0x0375C8356,
	0x0A401DCA3,
	0x0B4077CAE,
	0x05225B8E8,
	0x06D99EFD0,
	0x07E3C1118,
	0x0936A25BE,
	0x036AD6C42,
	0x04A8413F3,
	0x05C5AB7A0,
	0x06DFEDAE8,
	0x07114E114,
	0x0F31698D0,
	0x0F86CA37C,
	0x0320F96C5,
	0x03F8231AA,
	0x04BD8CA57,
	0x0CE7A4F98,
	0x0730018A1,
	0x014E5DC6E,
	0x0280C88BE,
	0x09928EAF5,
	0x03596A3D2,
	0x04AAFCE04,
	0x05481E1A8,
	0x011FBAE5,
	0x0E752874B,
	0x07F31B707,
	0x08FA1ADE1,
	0x0F28D5EBD,
	0x08CDB135A,
	0x0FCC27327,
	0x035FB6598,
	0x09F18B7D5,
	0x0A94FCC43,
	0x0B396E0D1,
	0x0E01AB9D8,
	0x0FC19AE63,
	0x0A42AFE7F,
	0x0A56E0109,
	0x050F2D814,
	0x0D3C65DB9,
	0x07F9C623,
	0x0166462F8,
	0x0EE77931F,
	0x04998BFBE,
	0x0B3ADF5,
	0x0B5F69870,
	0x0C9703F63,
	0x0CA1940B5,
	0x0DBEBE45A,
	0x012BD5208,
	0x0EE68095E,
	0x0EFF15752,
	0x08A418BF0,
	0x0FFD8F71D,
	0x09AA72CBB,
	0x0A4D1410F,
	0x0B4C9E100,
	0x0E2CBBD03,
	0x0EDBA52E0,
	0x04FD50D1F,
	0x0B49F56B6,
	0x05E0FA994,
	0x0C7E07D38,
	0x06BB5C4E0,
	0x07AFD636F,
	};

	uint32_t hatsFemale[] = {
		0x015AE34D2,
		0x019E100C6,
		0x01B3D65E7,
		0x01FA04DDE,
		0x026AE2699,
		0x02722B913,
		0x0295788CF,
		0x02BBAA479,
		0x02DAB63A0,
		0x02DD1EA41,
		0x02F77CC70,
		0x036E19E71,
		0x03940E002,
		0x039924141,
		0x039F3C28,
		0x03A865DF7,
		0x03C0F3E38,
		0x0409EB1EB,
		0x0456D57DE,
		0x0476CDCF1,
		0x04A143236,
		0x04BC5C367,
		0x04C18341F,
		0x056775CAB,
		0x058F39F73,
		0x05C5109E9,
		0x05E915909,
		0x063B85A4F,
		0x065495DB0,
		0x06D5DD69E,
		0x06F557B7C,
		0x070DEFDA4,
		0x071ADEA6C,
		0x071E65113,
		0x071F6349E,
		0x072E07D9F,
		0x075CC8BA,
		0x07C56042,
		0x07F4D389D,
		0x081615F5E,
		0x08563A9D6,
		0x08C0274A0,
		0x08C9469DA,
		0x093C9C6A2,
		0x095E215A,
		0x098246C74,
		0x09CF88930,
		0x09F547E50,
		0x0A0112B2,
		0x0A02C2D9E,
		0x0A0EA5E96,
		0x0A1084A38,
		0x0A3A23486,
		0x0AAE27223,
		0x023523A95,
		0x0B3B22FD4,
		0x0B58C75C,
		0x0B866400B,
		0x0B8881065,
		0x0BAA17EB8,
		0x09684B67F,
		0x0A42F51D4,
		0x0484219F7,
		0x04D7B2469,
		0x05EDBC72A,
		0x06D126397,
		0x02F37E7E3,
		0x0F1446BFD,
		0x0BDDD920A,
		0x092E078E,
		0x03AB6EAA7,
		0x09F23337E,
		0x0CEC0F12,
		0x0D40A9D4C,
		0x0D7E8A508,
		0x02899C66D,
		0x0EFE254FB,
		0x03455F7EC,
		0x0B2967473,
		0x0BCB308A8,
		0x0CA012344,
		0x017C53ECB,
		0x0D93AC1B7,
		0x022005341,
		0x0EA8C645A,
		0x0FB661084,
		0x03B8090B8,
		0x04D273405,
		0x05FB65923,
		0x0D28B409,
		0x018B2CB1D,
		0x07283FEBE,
		0x0236CE091,
		0x03467D658,
		0x03FC3ED10,
		0x0B99EE0C8,
		0x062B8B2FD,
		0x07720DBCD,
		0x08B62044F,
		0x0C0409F8F,
		0x0C2B54511,
		0x0C3284826,
		0x0CA9CDE79,
		0x08D19B83E,
		0x09BB4D574,
		0x046E5ABD7,
		0x0A88DEF26,
		0x0B6EB8BE1,
		0x0C66B2AE0,
		0x010313E6B,
		0x0E1F8E1FB,
		0x08D8D013E,
		0x0FECE63BF,
		0x0B167C07,
		0x0BB3D5C9E,
		0x0D4740F0B,
		0x0D950987C,
		0x0E220AA64,
		0x0F0F94815,
		0x032F39FF7,
		0x044B3C377,
		0x0AAC70F90,
		0x0B8D0ABA3,
		0x01481E304,
		0x0E7AD895C,
		0x0337A5D19,
		0x0561C2278,
		0x063B029B,
		0x069C449B0,
		0x0DD41B0A9,
		0x0770A643C,
		0x084C57FCA,
		0x0EE83532C,
		0x03E9A3E8B,
		0x03F634031,
		0x057216FAD,
		0x0BD63BC30,
		0x01AFA774C,
		0x028E81327,
		0x03283A672,
		0x0F4B32ABE,
		0x08E6AA0F9,
		0x0F797F352,
		0x0AEA06164,
		0x05820B462,
		0x0DB153A4D,
		0x0E462CCE8,
		0x080DF85E3,
		0x02D6E5EFE,
		0x0932449EB,
		0x03876149C,
		0x0FDEC9F7A,
		0x0A3F1EB86,
		0x04988B6C1,
		0x0BF77A291,
		0x01746D236,
		0x079479632,
		0x0D09F033,
		0x0FB3DD217,
		0x097BC8AFE,
		0x04844EC24,
		0x0AD90B6A6,
		0x0C4B7E508,
		0x01186FEA9,
		0x0169C08D3,
		0x0716D3E74,
		0x03C6696DB,
		0x05A6A52E2,
		0x068C76F9C,
		0x0737004ED,
		0x020F2DFF4,
		0x08119A040,
		0x02CDBF79A,
		0x02E857B19,
		0x03ACF111B,
		0x09D34D5AD,
		0x04C84B486,
		0x055534623,
		0x0D450C3E4,
		0x071107D9D,
		0x076F5892F,
		0x088962C70,
		0x033F222CF,
		0x0985D6BA4,
		0x03DFC2AF,
		0x0AD7B15DF,
		0x0BF4E3985,
		0x06A4A8F7F,
		0x0DAC8F07A,
		0x085AF4648,
		0x0D119E1DA,
		0x0D81B7F75,
		0x0D81B8D0,
		0x0AA7397DB,
		0x0ADA41E48,
		0x011376561,
		0x0D835735E,
		0x0DBE6FACD,
		0x01FCC6EC,
		0x0E36209B7,
		0x0F4A3AC3A,
		0x094DE4EF3,
		0x03AF49B35,
		0x040CCA6E5,
		0x0429F2A76,
		0x05B91DC6F,
		0x06D427FD0,
		0x076F01317,
		0x030300598,
		0x03A7C1684,
		0x09BAB4EA,
		0x0439828BC,
		0x055E6CD59,
		0x0176D504F,
		0x071538432,
		0x02E4E7E11,
		0x02FC700D2,
		0x038211EB2,
		0x0FC582719,
		0x0952658BB,
		0x0A72AFCC4,
		0x0CE21CAAD,
		0x0DFD46E12,
		0x0263E7AE9,
		0x0EAAC83C2,
		0x04EC9890F,
		0x056EE9941,
		0x061032D82,
		0x0694C3DFC,
		0x06B7A4258,
		0x073B1D2DF,
		0x07DB0E6C5,
		0x029793E6B,
		0x0E28A363,
		0x0E2FF15F8,
		0x0E5DD00A4,
		0x0E96FAF79,
		0x0EB758558,
		0x0407FEE47,
		0x05562980C,
		0x05D04A750,
		0x02B4EC3E5,
		0x08350F3E8,
		0x0ED50AF2,
		0x0F79A4308,
		0x0F850390F,
		0x03A2376AF,
		0x09C44BAF0,
		0x04C299ABB,
		0x0B1ECE640,
		0x0576EB145,
		0x06D1CDCA1,
		0x078C9F3FB,
		0x02ABF57E7,
		0x0FBAFA80E,
		0x0FDBBFB2A,
		0x0932A48F3,
		0x03ACA1834,
		0x040B22404,
		0x0A3F7EA8E,
		0x05977D58F,
		0x067307100,
		0x089D5B64A,
		0x0F2C40F1,
		0x0FF16053E,
		0x0FD575E34,
		0x0A351AA66,
		0x044EC6D5D,
		0x056C11146,
		0x05ED52136,
		0x0132989D8,
		0x0280DB3A0,
		0x084FE6DC0,
		0x036C76C31,
		0x09671AB74,
		0x044F10884,
		0x0B2B5640B,
		0x0BADBF448,
		0x06C675770,
		0x07AADF3FD,
		0x088340EF9,
		0x0B07FFBC8,
		0x095AE6A81,
		0x09F557DE7,
		0x05AFBF51D,
		0x0696991F8,
		0x01232638B,
		0x0809E4079,
		0x0877BCE1C,
		0x02F739E0D,
		0x093265D2D,
		0x0FEF3B4D6,
		0x03BCD2E7C,
		0x0B3CC1E88,
		0x0B63C2368,
		0x05E1D731C,
		0x08154B98A,
		0x0ECC7107D,
		0x0F98B2804,
		0x0521C5921,
		0x0BEA9B23E,
		0x060FD76E3,
		0x01D286F3E,
		0x0EB388B5F,
		0x0FB5E9151,
		0x0949DC3CD,
		0x03F0898A4,
		0x0465AA748,
		0x070CF7C31,
		0x01817CAC3,
		0x0DB7CD18A,
		0x0F0EAFC66,
		0x0FCB01550,
		0x03A8190F2,
		0x060665CBB,
		0x01B0F520E,
		0x02D82F6F5,
		0x0EEF39CE,
		0x02809B3FE,
		0x0F4D8668F,
		0x08E8599EB,
		0x09BB3B447,
		0x0C02C7D38,
		0x0C2A28224,
		0x0690FCF40,
		0x03075DE0D,
		0x03247E1B1,
		0x099D46BD1,
		0x09BD4BA9,
		0x01992EAFC,
		0x01B92EF54,
		0x07566A2F6,
		0x07CCC770,
		0x02B8D0F44,
		0x0871D4663,
		0x0F64B8BF3,
		0x04F0DBD7A,
		0x05896D08C,
		0x0CAB0B4B6,
		0x06A517401,
		0x01168422C,
		0x0DAAF54B3,
		0x08112F7E,
		0x0F6C01EED,
		0x03BB828E0,
		0x0484BA76,
		0x0608F728E,
		0x0182F61CB,
		0x076D49F18,
		0x02E318DD3,
		0x0883C274,
		0x0B005FEFA,
		0x0B1AF024C,
		0x0C2C0A46F,
		0x0D686CBFB,
		0x01D6FD9CC,
		0x02F2A7D41,
		0x08F351180,
		0x046EE00EF,
		0x0B2C4D89F,
		0x0C12FF575,
		0x0661F3F51,
		0x06C62CBD8,
		0x079A0E654,
		0x0E482BC1A,
		0x08EC2A3C3,
		0x09462AEFB,
		0x09D034044,
		0x0A1BE49B2,
		0x0AF4B64CC,
		0x081AE899B,
		0x0862A928B,
		0x0F345ECC8,
		0x0A4931522,
		0x0A93B1E46,
		0x0B09E20E,
		0x0B6C9398E,
		0x0C021CC3F,
		0x0D24AF091,
		0x0D781FAD3,
		0x0DD7806EB,
		0x047241559,
		0x0AB575DBE,
		0x0556AB1E6,
		0x0B7EE76EC,
		0x02C6ADFE7,
		0x0EB59DDC2,
		0x091BAC3BA,
		0x03E1EEA1A,
		0x08E8681C6,
		0x0579493E3,
		0x0C3CCEC52,
		0x0C3E5EC80,
		0x0694A374E,
		0x0204EA558,
		0x07AEF5A98,
		0x08CDDFE75,
		0x035F049AF,
		0x0F9DED181,
		0x09E551A77,
		0x0ACFF37CB,
		0x059BE114A,
		0x0685B2E84,
		0x0D081FED0,
		0x07AB55338,
		0x0B9F318D9,
		0x0CB3A3B67,
		0x0CF46C380,
		0x0179FD431,
		0x0D9FF58F5,
		0x0DE65E1BE,
		0x08119A727,
		0x08BDF3CB6,
		0x03523B90A,
		0x03A64C398,
		0x04C2B6725,
		0x011CEF261,
		0x0241996F6,
		0x026D91C81,
		0x028A8201F,
		0x0F097AFF3,
		0x0B9EC84B9,
		0x0F80B391D,
		0x039AD074,
		0x0A61DDCA,
		0x0A8BF9ABF,
		0x0B8C63ACC,
		0x016F6772B,
		0x0E1DB8CF6,
		0x0E9EE644,
		0x0364E1C1C,
		0x0413831F0,
		0x052C1D503,
		0x0B4B698E7,
		0x06DB90AF1,
		0x01A1AE3AE,
		0x02BD48725,
		0x0F44CE02,
		0x0F6F1E421,
		0x0955820EB,
		0x03F64F506,
		0x0C4A27F7F,
		0x0D03996B1,
		0x0DC08AE4F,
		0x0E9B7C9AD,
		0x0855580E6,
		0x0AB828913,
		0x0506FD2EB,
		0x0B965A4D9,
		0x0620D7626,
		0x074D89BBC,
		0x0DDCC6DA6,
		0x0825AB6C0,
		0x08718C03C,
		0x0F91B1BCC,
		0x0950F5392,
		0x03D7A2489,
		0x0AA557E1E,
		0x04E64C65E,
		0x0702709C2,
		0x0E1F26D57,
		0x032B80F05,
		0x0F7C66967,
		0x09C56B281,
		0x040ABFB31,
		0x0A9C8CD65,
		0x058704E8,
		0x077C2E95E,
		0x0E9ECCDB4,
		0x032E05F9A,
		0x0978430BC,
		0x0AA13D5DB,
		0x0B4B2EB19,
		0x0BCC994B,
		0x0C6BF8F32,
		0x0D22BA60A,
		0x01877B2A1,
		0x0729866E1,
		0x03433389D,
		0x08F7E6ECA,
		0x036443C53,
		0x045F9DC2A,
		0x0486A609F,
		0x05A3E044A,
		0x06BB3A735,
		0x07D61CA91,
		0x0FD1ACF7F,
		0x098908670,
		0x0437DDC44,
		0x0A6A0228F,
		0x0B4D6BE4,
		0x0180A055D,
		0x08418DD79,
		0x0EF4C33E2,
		0x095BEFB3F,
		0x03E69CCA2,
		0x0A7FC9FBA,
		0x0B9AD431B,
		0x072CFB561,
		0x0DD880AD4,
		0x08591DAE5,
		0x0EF4AAE59,
		0x03D9E4BDF,
		0x04F55EF4E,
		0x056BF7E35,
		0x0582300F4,
		0x0610892C3,
		0x022E6166F,
		0x08DA5A397,
		0x041210A8B,
		0x0A230CCAD,
		0x054BC31C1,
		0x0B2E06E0C,
		0x06AA55D93,
		0x07A08FC5A,
		0x083998BD,
		0x04041F674,
		0x0A1DCB9AC,
		0x04AB50B5E,
		0x06D57D0A3,
		0x01F8AB506,
		0x07B1BEC2B,
		0x0E500BFF3,
		0x032C2DB76,
		0x038CD1865,
		0x0C3F72EB7,
		0x0CDB94243,
		0x0CDD54273,
		0x072370B38,
		0x0E00DE6EC,
		0x0E012E6EE,
		0x0845DAF85,
		0x0352EEFFE,
		0x0F9FEF9BB,
		0x0C5DD915D,
		0x0CB281C0E,
		0x012C87FA,
		0x0D5613080,
		0x0D79AB4D7,
		0x022D04B41,
		0x0FFD5BF85,
		0x0C9A35321,
		0x0DB69F6AE,
		0x02049806C,
		0x0E795CCC,
		0x0EDFE1BD6,
		0x09A43959A,
		0x0AB5937C5,
		0x04DD1FC90,
		0x0525185B7,
		0x0BD975C41,
		0x0D1538395,
		0x087FDF10F,
		0x03018C11E,
		0x090D6BF65,
		0x037198BE4,
		0x0460529BB,
		0x0597850A1,
		0x06C58F662,
		0x017BE4D2E,
		0x021716094,
		0x07DB9192A,
		0x0F4B745FC,
		0x09DCC9834,
		0x04E4E657,
		0x0B0663D67,
		0x017130AB3,
		0x02947AF1C,
		0x0FC23C548,
		0x050646DC0,
		0x056C07A84,
		0x0C258D1B3,
		0x0E0A90E53,
		0x0E74E9EA,
		0x0A83E445,
		0x0581EFF7A,
		0x0664F9BDF,
		0x018D980F0,
		0x07378B631,
		0x081A25284,
		0x0FF5FFF80,
		0x098B8B233,
		0x0B67AEDB7,
		0x0C2DD048A,
		0x0C6688D92,
		0x0D42E291D,
		0x0E1E44489,
		0x08AF616AE,
		0x04573FFE1,
		0x04A2D0953,
		0x057EB24CF,
		0x013351B64,
		0x06EBB526F,
		0x0D7BAA46C,
		0x0210036FA,
		0x0258FC019,
		0x0EAB8EBB4,
		0x09057235F,
		0x0AD3F5D2F,
		0x0B30368A7,
		0x057B73220,
		0x0BAF8F8A2,
		0x06547CD41,
		0x073A569FC,
		0x027715195,
		0x09085E49B,
		0x0AE319FF2,
		0x0BBF73B7D,
		0x05E640058,
		0x0C7ED5369,
		0x0DD8E7EAB,
		0x0E3470A1C,
		0x0F32AA9E3,
		0x032E8720F,
		0x040E98DF5,
		0x04E722906,
		0x059D977A,
		0x05B76430E,
		0x06E976950,
		0x020124C63,
		0x08A2D207B,
		0x0FA03EF50,
		0x0413F7DC6,
		0x0C3A68296,
		0x0D571262B,
		0x01CDAB4FD,
		0x0E1C1780,
		0x0E8424BCD,
		0x02F09D95B,
		0x0A068CF6D,
		0x042E39460,
		0x0AE7A6B90,
		0x0513230FD,
		0x067715D7B,
		0x07596F9C6,

	};

	uint32_t hairMale[] = {
		0x0105DDB4,
		0x0123DCB24,
		0x012533D45,
		0x01344F299,
		0x01353B886,
		0x013CCDF2C,
		0x013D36F9C,
		0x0143A6FA3,
		0x014EBFAE3,
		0x0158D0209,
		0x0163B8B61,
		0x01645AC1D,
		0x0170D966A,
		0x0178BD8D5,
		0x017CF6A16,
		0x017E93578,
		0x01997196B,
		0x01A097A3A,
		0x01A3A0365,
		0x01BA8EFE0,
		0x01BBB4802,
		0x01C001B6C,
		0x01C03EAB2,
		0x01C147CEF,
		0x01CBF347C,
		0x01D2CDB1A,
		0x01DBAA70A,
		0x01E1A9DCC,
		0x01ED04B93,
		0x01ED4DDA9,
		0x0202748CE,
		0x020653398,
		0x020A887DE,
		0x021192BF1,
		0x02135CA93,
		0x0214CB7E,
		0x02188072A,
		0x02208E56E,
		0x0220FB851,
		0x02259834A,
		0x022CE317A,
		0x023142EC2,
		0x0235C87FA,
		0x0240A26C8,
		0x0248E2D73,
		0x024BC8E37,
		0x0250D44CD,
		0x02523CE53,
		0x02533863,
		0x025784C24,
		0x02604C9A1,
		0x0270464C8,
		0x0273B1D83,
		0x0279F6291,
		0x027D6D4A9,
		0x0284ADE50,
		0x0288FEF6F,
		0x028EA9C08,
		0x02A026608,
		0x02AE751E3,
		0x02B194411,
		0x02B4FEE2C,
		0x02B979B7D,
		0x02C26663F,
		0x02C53BE6E,
		0x02C53BE6E,
		0x02DF2B66F,
		0x02DF84C25,
		0x02E85CA72,
		0x02F41E1E5,
		0x02F75C6C9,
		0x03242F4FD,
		0x0324CB249,
		0x0333B863F,
		0x0338E0A82,
		0x033B0CAAF,
		0x03467C0FB,
		0x034FDD33D,
		0x03512D585,
		0x0367DBFF8,
		0x036B9D4A2,
		0x036C0E1AF,
		0x0376EA23F,
		0x03833AC9D,
		0x03AE13AF3,
		0x03B3F416,
		0x03B48A407,
		0x03D1B0EA8,
		0x03DA8E3DF,
		0x03DD3C223,
		0x03E1C1290,
		0x03F340F11,
		0x03F5B6C35,
		0x0413D91C,
		0x041C503F1,
		0x0427F533E,
		0x042C4C971,
		0x0434F923C,
		0x043A70EF7,
		0x0457E17A6,
		0x046126332,
		0x04667C914,
		0x046BAA052,
		0x046C45F9,
		0x046E8258,
		0x047167E9C,
		0x04727276E,
		0x047C0AF96,
		0x0481BB91C,
		0x048CB7430,
		0x0491D7BAF,
		0x049298C51,
		0x04A126014,
		0x04AF668C9,
		0x04B1182C,
		0x04C6ABCC6,
		0x04CADA928,
		0x04DAFA433,
		0x04DCAEBD6,
		0x04DCEAB13,
		0x04EBD9027,
		0x04F6E72B,
		0x0500DCDCB,
		0x050A5D058,
		0x050AF2F54,
		0x05101B700,
		0x0515275FC,
		0x0528DA702,
		0x0533DD857,
		0x053F30F5A,
		0x0544C8DCE,
		0x05453444E,
		0x05484A672,
		0x0564DC5FB,
		0x05788A44D,
		0x058F6D8CC,
		0x05A395C0B,
		0x05A5E4D8,
		0x05A7A3001,
		0x05AC076E6,
		0x05B31B5D6,
		0x05B745389,
		0x05C73B6E,
		0x05CD8E53B,
		0x05D6FC4C4,
		0x05D8B27DA,
		0x05FA010BC,
		0x05FA54123,
		0x06072EE94,
		0x061D26F84,
		0x061EBE84F,
		0x061EE957A,
		0x06313902A,
		0x0633FAA34,
		0x064558442,
		0x06562736A,
		0x065C2D4DE,
		0x065E04C33,
		0x0665DF38E,
		0x0675E56E7,
		0x0685F66E7,
		0x0687C41E7,
		0x068F35671,
		0x0697C0601,
		0x069A4D299,
		0x069B5212A,
		0x069C45AC0,
		0x069D2F6B0,
		0x06A68F649,
		0x06AA049CA,
		0x06C583E5A,
		0x06CDA8050,
		0x06D690416,
		0x06E52C1EB,
		0x06EB2813,
		0x07073A28E,
		0x070CC0FD8,
		0x070E0D1E7,
		0x07143BAB6,
		0x0717E09C3,
		0x071FAA34D,
		0x07261B86B,
		0x072F76EDA,
		0x073C56F53,
		0x0742806EE,
		0x075A5975D,
		0x0772057AB,
		0x0777080D5,
		0x0787816D8,
		0x078EE143D,
		0x07912EBFF,
		0x0798F764F,
		0x079E4A726,
		0x07A009083,
		0x07AC1EF6D,
		0x07AED0A53,
		0x07AFE58A8,
		0x07BBA8FCF,
		0x07CC453D3,
		0x07DADFA6B,
		0x07DE9E38C,
		0x07E257284,
		0x07E675DF0,
		0x07ED2A902,
		0x07F630535,
		0x080A9166C,
		0x080C58F4F,
		0x080D0879A,
		0x08151B8FA,
		0x082015E6A,
		0x0822561AF,
		0x082393A50,
		0x083958F0B,
		0x083C1928,
		0x083EF8513,
		0x084158223,
		0x0847242DE,
		0x0848B4D04,
		0x084D479EE,
		0x085908537,
		0x086681384,
		0x087A47B56,
		0x087F62C06,
		0x0886BF3DA,
		0x089CD0233,
		0x08B82D051,
		0x08B8EFCDB,
		0x08B9F9608,
		0x08BBFED74,
		0x08C38D3D2,
		0x08DF44335,
		0x08E6E5FE0,
		0x08F6A3E10,
		0x08F6B8540,
		0x0909959BE,
		0x0913DA759,
		0x0915A1E14,
		0x091A358A1,
		0x092513B00,
		0x092544008,
		0x09276D846,
		0x0929E8A74,
		0x09348ED78,
		0x093FDE999,
		0x09437769E,
		0x094F05662,
		0x0962408BF,
		0x0979F6CC,
		0x097FA0479,
		0x099552AF,
		0x0996ECF27,
		0x09C3DD40C,
		0x09C568887,
		0x09C608DE,
		0x09C98B762,
		0x09C9F53C3,
		0x09D52D2E9,
		0x09DEF098D,
		0x09EDAB276,
		0x09F328C79,
		0x09F5E87B5,
		0x09F873694,
		0x0A05D95F4,
		0x0A0C845CE,
		0x0A0F2C2FE,
		0x0A29F12AB,
		0x0A2EC9490,
		0x0A30B5E81,
		0x0A4185431,
		0x0A4ED9944,
		0x0A5160F59,
		0x0A55C3A0F,
		0x0A5A3345C,
		0x0A647341E,
		0x0A6FCCF9E,
		0x0A73B8119,
		0x0A7512623,
		0x0A82A9ECF,
		0x0A898F4CF,
		0x0A8BCA69,
		0x0A9563B12,
		0x0AA14FEDF,
		0x0AB0D0987,
		0x0AB1207A3,
		0x0AB5AC36E,
		0x0ABA3B9A7,
		0x0ABA8DA08,
		0x0AC1919E6,
		0x0AD0AC078,
		0x0AE149BFA,
		0x0AEA460D,
		0x0AF178F1E,
		0x0B04CE7F0,
		0x0B24B3F8,
		0x0B2AE01E9,
		0x0B2CFBED4,
		0x0B37DB579,
		0x0B3A30E65,
		0x0B46AC3F7,
		0x0B46EAE1,
		0x0B573A56F,
		0x0B6572B7C,
		0x0B6DB85FC,
		0x0B74FE4D,
		0x0B79A4145,
		0x0B7CDED9A,
		0x0B8B0280D,
		0x0B9EB03D9,
		0x0BA1A64A9,
		0x0BA2029F2,
		0x0BB1DD749,
		0x0BB5DE3AB,
		0x0BC17896C,
		0x0BD938B23,
		0x0BE0E3244,
		0x0BEA88E45,
		0x0BEFC59A,
		0x0BFAE0370,
		0x0C074BD6F,
		0x0C0B8C147,
		0x0C11E7867,
		0x0C12E7C87,
		0x0C1E81BF3,
		0x0C24CD532,
		0x0C377B07A,
		0x0C5D807DE,
		0x0C7CF0866,
		0x0C7D81D76,
		0x0C8E746BF,
		0x0C96C9788,
		0x0C996AE7C,
		0x0C9B90E03,
		0x0C9DEB07A,
		0x0C9F42AE9,
		0x0CAA68B3C,
		0x0CB88C9AA,
		0x0CBF52019,
		0x0CD81DC3,
		0x0CD8606BC,
		0x0CD88F152,
		0x0CDD4CE97,
		0x0CEBFFD21,
		0x0CFF0EA74,
		0x0D06D87A2,
		0x0D0B122D7,
		0x0D0B6FA2D,
		0x0D2C97359,
		0x0D323523C,
		0x0D5206BA6,
		0x0D5C6C5D3,
		0x0D64E8D8F,
		0x0D6728428,
		0x0D68B1E2D,
		0x0D6974F2F,
		0x0D751FD59,
		0x0D7D20BB4,
		0x0D826548A,
		0x0D9417D9B,
		0x0DAC93BAE,
		0x0DAE54ED3,
		0x0DAFB8597,
		0x0DB17FDAE,
		0x0DB265F20,
		0x0DC13E559,
		0x0DC3F8BAA,
		0x0DCDD1B93,
		0x0DCEB69AC,
		0x0DE25CFE8,
		0x0DF00B47A,
		0x0DF3AF624,
		0x0DFC7828,
		0x0DFD08502,
		0x0E03962A6,
		0x0E0C34DA1,
		0x0E237C78,
		0x0E26FE9DE,
		0x0E441288E,
		0x0E523C8A5,
		0x0E56D2204,
		0x0E5B64B67,
		0x0E671D665,
		0x0E6866BB7,
		0x0E68C19B0,
		0x0E77EB60C,
		0x0E7835E5F,
		0x0E856CF42,
		0x0E86E676D,
		0x0E88C307C,
		0x0E8DD93CF,
		0x0E8EF4DBC,
		0x0E90CDA53,
		0x0E95B8415,
		0x0E9E451CA,
		0x0EA5DC794,
		0x0EAAB04BD,
		0x0EB2A09F8,
		0x0EB3D74F5,
		0x0ED140736,
		0x0ED82C366,
		0x0EE169CEA,
		0x0EE9A979A,
		0x0EF2EEC55,
		0x0EF7BAB3D,
		0x0EFF62BD6,
		0x0F24C0D7,
		0x0F25820D0,
		0x0F26746B4,
		0x0F36D7039,
		0x0F40E0E03,
		0x0F453B6BB,
		0x0F5D0C02,
		0x0F605AA91,
		0x0F69BD598,
		0x0F6AB14C3,
		0x0F725ED3A,
		0x0F76086E2,
		0x0F86930AA,
		0x0F94561FE,
		0x0F95F693D,
		0x0F9733548,
		0x0F9913EF5,
		0x0F9AAC4FE,
		0x0FA5194A7,
		0x0FAEEB3E,
		0x0FBDE36A7,
		0x0FE0EE1F6,
		0x0FEA02EB5,
		0x0FF47CF37,
		0x0FFFA089E,
	};

	uint32_t hairFemale[] = {
		0x01033F078,
		0x0104293EA,
		0x0118EE3FA,
		0x0119B81E1,
		0x0124193EC,
		0x012D24CC8,
		0x013CC2CBE,
		0x0140F70E1,
		0x014CB7C7B,
		0x015F79303,
		0x01624020F,
		0x01721AD8C,
		0x0179F319E,
		0x0183ADB03,
		0x01993640D,
		0x01C340A8C,
		0x01C750A1B,
		0x01CA65366,
		0x01CAA6E63,
		0x01CD19883,
		0x01D7206D5,
		0x01DA9A7CE,
		0x01E11C1EA,
		0x01E3B1D28,
		0x020916EB8,
		0x020B72A9E,
		0x02151C3C,
		0x023337D89,
		0x024C9BA3A,
		0x024CD4506,
		0x0270C4BA4,
		0x027459933,
		0x02899645B,
		0x029D93133,
		0x02B39199E,
		0x02B87C3B7,
		0x02C1E7790,
		0x02CCA2ACA,
		0x02DD87288,
		0x02E5521D3,
		0x02EE4D12C,
		0x02F34D148,
		0x02F353BB2,
		0x02F8B5043,
		0x030600547,
		0x030A2F734,
		0x03143E938,
		0x03167191,
		0x0326DDCED,
		0x033980D,
		0x0339FBF62,
		0x033A15CA1,
		0x033D0D3DE,
		0x034E8F5B,
		0x034FA3F43,
		0x0361D1831,
		0x036919E89,
		0x0374D6E5D,
		0x038289FA6,
		0x038C3D3B0,
		0x039AE8418,
		0x03A7344ED,
		0x03AE1CA79,
		0x03B820C4A,
		0x03B918061,
		0x03C2E1EDD,
		0x03C468918,
		0x03D539AC,
		0x03D64B55B,
		0x03DC25505,
		0x03E3214D8,
		0x03E67783F,
		0x03FF0C9E9,
		0x040A43816,
		0x040EBAAEE,
		0x040F2B0E,
		0x0410ED42B,
		0x0415597E,
		0x04157537D,
		0x041E7F4D2,
		0x0420354,
		0x042267092,
		0x04226E620,
		0x0424C6DC8,
		0x042C83D5F,
		0x042FE3239,
		0x0431E1F0,
		0x04330B883,
		0x0436D27B8,
		0x04398D97D,
		0x043F7C06B,
		0x0440E1FF0,
		0x044A753A1,
		0x044B4E9A4,
		0x04518F331,
		0x045B2F701,
		0x045C34303,
		0x04624A074,
		0x046BED39D,
		0x046DA283F,
		0x048E5D04E,
		0x049C410D4,
		0x049C79603,
		0x049F43199,
		0x04A6F7874,
		0x04BB11A8B,
		0x04CBCFE9C,
		0x04CFBB528,
		0x04D579DDD,
		0x04E97D93E,
		0x04EAE4414,
		0x04EFABAB5,
		0x0521549DE,
		0x05420DC9,
		0x054745B70,
		0x055A5EA60,
		0x055B7282B,
		0x0561FBB7,
		0x05730A6A,
		0x0587CF9C2,
		0x05912FFC9,
		0x059489B6E,
		0x0599D448,
		0x059DE3168,
		0x059FE50BA,
		0x05A3EE12,
		0x05A7392CE,
		0x05B6E3451,
		0x05BB279D2,
		0x05C525E50,
		0x05C533FC,
		0x05CFEA17D,
		0x05E875D1C,
		0x05F38AC15,
		0x05FF5EA7D,
		0x05FFBFD51,
		0x0602891,
		0x0602BBD4A,
		0x0606FBC1D,
		0x0608F7D68,
		0x062492EB1,
		0x06311AFC0,
		0x063ADE532,
		0x0640D8561,
		0x0641581DF,
		0x06440CB88,
		0x06516F7BE,
		0x06538D83B,
		0x065E83188,
		0x06642BBD7,
		0x066456267,
		0x06768C07E,
		0x067D11474,
		0x068598B7E,
		0x069202C99,
		0x06992131C,
		0x069FEA993,
		0x06AF1A072,
		0x06BA2212D,
		0x06BA395BF,
		0x06BB2046D,
		0x06BEE87FE,
		0x06C22B426,
		0x06C8662AE,
		0x06DFD804A,
		0x06E1A2B68,
		0x06E24F553,
		0x06E6A4CF5,
		0x06FF02DB,
		0x070E7F844,
		0x070F458D8,
		0x07161C74,
		0x071CD95E1,
		0x0724F7946,
		0x072AA0459,
		0x072C8FF58,
		0x073A690D,
		0x073B59546,
		0x073FEA73,
		0x0742D1D3A,
		0x074EBCF95,
		0x0760B5681,
		0x076FA7AC,
		0x0772EC405,
		0x0784BEA97,
		0x07867FD27,
		0x078B034BB,
		0x078B55A99,
		0x079CD8A6C,
		0x07A7085E9,
		0x07BB395EF,
		0x07BB9ABC9,
		0x07C82536A,
		0x07CB894CB,
		0x07CDB185C,
		0x07DB854CA,
		0x07DC73109,
		0x07E23489D,
		0x07E23FAA4,
		0x07E7FD3B0,
		0x07EA6F3A0,
		0x07ED8574A,
		0x07EF607E6,
		0x07F11BA13,
		0x07F463A79,
		0x07FAF4F3,
		0x07FEBF9F,
		0x0804CEAD1,
		0x08060A81B,
		0x0819EA6D7,
		0x08208C88F,
		0x0840DC211,
		0x0847BF015,
		0x085C77E2,
		0x086188BA0,
		0x088CD7813,
		0x088E6BBA9,
		0x0890B9EF2,
		0x08AF85C7F,
		0x08AF93503,
		0x08D1B4ACB,
		0x08D44F1F7,
		0x08D9CCC45,
		0x08DC73387,
		0x08E24918,
		0x08E24BAD0,
		0x08E76F365,
		0x08E83CA45,
		0x08E86AE44,
		0x08E990D5F,
		0x08F449D99,
		0x090E87E88,
		0x091276246,
		0x0914C7309,
		0x091930778,
		0x0926DCFF2,
		0x092EDB58C,
		0x0930FDB29,
		0x09391409F,
		0x093A97118,
		0x093C59AD3,
		0x094548FB5,
		0x0947038A8,
		0x095688606,
		0x09598B61B,
		0x096BB284A,
		0x096DBBE7B,
		0x0972056FB,
		0x097703699,
		0x09839EEB6,
		0x098B48DD7,
		0x099354FE8,
		0x0996BB71E,
		0x099701ED0,
		0x09977086,
		0x099C68728,
		0x099F256F3,
		0x09A2CB5E8,
		0x09B1E7C1A,
		0x09BC3A3F6,
		0x09BD5F2A0,
		0x09C5AA602,
		0x09C8EB872,
		0x09D240F25,
		0x09D313D46,
		0x09D35F9E4,
		0x09D91587A,
		0x09E07511A,
		0x09E7D0DD4,
		0x09EACBB37,
		0x09EDD7EA8,
		0x09F9729C5,
		0x09FAD1AA0,
		0x09FDCCD1D,
		0x09FE3B6DC,
		0x09FE59679,
		0x0A06F6F08,
		0x0A0972DE7,
		0x0A0D3F587,
		0x0A102B050,
		0x0A1D21369,
		0x0A1D4919,
		0x0A2E71F50,
		0x0A362B235,
		0x0A3774E63,
		0x0A3E1B70C,
		0x0A503E778,
		0x0A538295A,
		0x0A5E7CA6F,
		0x0A67A999A,
		0x0A75869EE,
		0x0A7930A48,
		0x0A827FA16,
		0x0A836058A,
		0x0A894EE45,
		0x0A9523952,
		0x0AA0D45D1,
		0x0AA6DC07C,
		0x0AA769065,
		0x0AAA25A86,
		0x0AB13EEEB,
		0x0AB6FAE6,
		0x0ABA4B486,
		0x0AC2810D3,
		0x0AC72D6BE,
		0x0AD453B29,
		0x0AF7127E8,
		0x0AFA0CB5C,
		0x0B10EDDCF,
		0x0B14020E7,
		0x0B15CD45F,
		0x0B33BF48E,
		0x0B3A67C13,
		0x0B4F3F379,
		0x0B61A8BF4,
		0x0B6C430A0,
		0x0B74AFAB3,
		0x0B81BDB01,
		0x0B84A0585,
		0x0B856F1C7,
		0x0B863F3AD,
		0x0B94C10AB,
		0x0BACAFF13,
		0x0BBA00591,
		0x0BC392B82,
		0x0BDDED1A3,
		0x0BE5033B2,
		0x0BF3ACE16,
		0x0BF91649D,
		0x0C08CE667,
		0x0C0E014C,
		0x0C1366702,
		0x0C18E7053,
		0x0C1A631BE,
		0x0C1E2434,
		0x0C1F961F9,
		0x0C1FFA81B,
		0x0C3A05785,
		0x0C3C45204,
		0x0C4655552,
		0x0C47FB6E2,
		0x0C526491C,
		0x0C529DEDD,
		0x0C5712CB3,
		0x0C57C5CAB,
		0x0C5E04793,
		0x0C6B3073B,
		0x0C717754E,
		0x0C74DDA3,
		0x0C74F5706,
		0x0C762C3B5,
		0x0C7B12015,
		0x0C86FB326,
		0x0C894E225,
		0x0CAD2D7F5,
		0x0CBE76DCF,
		0x0CD6F5347,
		0x0CD773F4E,
		0x0CE8F0B69,
		0x0CF71A62E,
		0x0CF87AE24,
		0x0CFEFCDA,
		0x0D04BF7E7,
		0x0D0C4F4CC,
		0x0D0E26340,
		0x0D220B0A,
		0x0D2769A55,
		0x0D34D49A,
		0x0D3A2D58C,
		0x0D3D5FC13,
		0x0D4525FE1,
		0x0D5BCA7F8,
		0x0D6123D44,
		0x0D617292D,
		0x0D65212EE,
		0x0D6F8D393,
		0x0D81C0610,
		0x0D81C0610,
		0x0D8F02417,
		0x0D9BF4B00,
		0x0DA30DFA6,
		0x0DAD4727B,
		0x0DBA1C9C8,
		0x0DBB2BDD5,
		0x0DBB9918A,
		0x0DBF9D857,
		0x0DDFF7D0E,
		0x0DF422FFD,
		0x0DF526BA8,
		0x0E092FA69,
		0x0E0A5BA64,
		0x0E12EFBE0,
		0x0E13CC4DA,
		0x0E155E7C0,
		0x0E155E7C0,
		0x0E7BC0E60,
		0x0E7C00784,
		0x0E85BED3F,
		0x0E977945F,
		0x0E989CDB6,
		0x0E9A4BD47,
		0x0E9F8019B,
		0x0EAA05EB6,
		0x0EAEF965,
		0x0EB6DBEAE,
		0x0EBDA53AB,
		0x0ECC0605B,
		0x0ED4E470C,
		0x0EDE489DE,
		0x0EDE5EC8,
		0x0EE5030B3,
		0x0EF13A85E,
		0x0EF365817,
		0x0EF8991E1,
		0x0EF998456,
		0x0F01406B2,
		0x0F0B2A80B,
		0x0F0BB5EFB,
		0x0F17ACB5,
		0x0F19A38C8,
		0x0F1CE4581,
		0x0F242FFEB,
		0x0F35B21DB,
		0x0F3B68A0A,
		0x0F3DA31D5,
		0x0F5226CFB,
		0x0F627603E,
		0x0F66D58E0,
		0x0F6730937,
		0x0F74DDAF5,
		0x0F761F738,
		0x0F840FB28,
		0x0F8CFC295,
		0x0F8E5ED26,
		0x0F91127C6,
		0x0F92BBF96,
		0x0F949B0D4,
		0x0F9A1BC75,
		0x0F9B1A467,
		0x0F9F87034,
		0x0FA2AA148,
		0x0FA3A086F,
		0x0FA65CC84,
		0x0FAA025CB,
		0x0FAB2B881,
		0x0FACB9616,
		0x0FAF1200B,
		0x0FB27ACFC,
		0x0FC481D3D,
		0x0FCC7C1BC,
		0x0FD6EEADF,
		0x0FD9F2B42,
		0x0FDC39D8A,
		0x0FDC7FBEA,
		0x0FE117416,
		0x0FE3D86BA,
		0x0FE540CF5,
		0x0FEF8E7B6,
		0x0FEFEE951,
		0x0FF2C6EB4,
		0x0FF4CDF66,
	};

	uint32_t shirtsMale[] = {
		0x9BB5B63F,
		0x9CB923E0,
		0x9CEA7993,
		0x9F7CDD7D,
		0x9FEB7311,
		0xA117DE2C,
		0xA22C1C33,
		0xA2669346,
		0xA2D997A,
		0xA33DB623,
		0xA3C19D85,
		0xA481CA13,
		0xA50D396D,
		0xA594965E,
		0xA5C838E6,
		0xA779B971,
		0xA7AF77EA,
		0xA86CE420,
		0xACA906A1,
		0xADE2DA99,
		0xAEC24DD0,
		0xAF4034E,
		0xAF814970,
		0xAFB17DF2,
		0xB053892E,
		0xB0DA964,
		0xB1EA39D6,
		0xB336F056,
		0xB3813237,
		0xB3AC35D1,
		0xB4105576,
		0xB4F45023,
		0xB5D59EE9,
		0xB64A5CDC,
		0xB6D76EBE,
		0xB7B2DF0D,
		0xBAF7FB0C,
		0xBC320BA6,
		0xBCE74847,
		0xBD2E8531,
		0xBD591941,
		0xBF187D04,
		0xBF6E54DE,
		0xC022EAB3,
		0xC07E1CFC,
		0xC17C81CC,
		0xC1E3F11D,
		0xC206229B,
		0xC2194E17,
		0xC33176AE,
		0xC36E3A1A,
		0xC3B96DAD,
		0xC414F871,
		0xC535F673,
		0xC6DA79C8,
		0xC7E65B01,
		0xC806DC22,
		0x1076A2D4,
		0xCB57BC0,
		0x10B87936,
		0xCBAF19EB,
		0x10DA80F1,
		0xCD2FF061,
		0x10F143F,
		0xCE370881,
		0x110DED53,
		0xD025EEC4,
		0x1148337,
		0xD105ACDF,
		0x12801254,
		0xD23074E1,
		0x1281AB3F,
		0xD2E4CE50,
		0x15298CA8,
		0xD336A645,
		0x15BDA7D,
		0xD3472561,
		0x167D36E9,
		0xD48A18BB,
		0x169437FB,
		0xD59BEAE9,
		0x16AD55DC,
		0xD5DEA3C3,
		0x16CD2EAC,
		0xD70A1881,
		0x18015DB4,
		0xD7D74E3D,
		0x1BD7A3BD,
		0xD7F9FB28,
		0x1CAD29A4,
		0xD96A0150,
		0x1D615E9,
		0xDA35B57A,
		0x1E108CF0,
		0xDAFF9855,
		0x1E965075,
		0xDBB2BDA2,
		0x1F0C2FE4,
		0xDBD527F1,
		0x1F373F7C,
		0xDC988465,
		0x1F5FA114,
		0xDD331067,
		0x200976EB,
		0xDDD01366,
		0x2037C6AB,
		0xDDDD294,
		0x210E2D6,
		0xDDE340E2,
		0x215112,
		0xDE414EC0,
		0x216944D4,
		0xDF469D42,
		0x21BB7128,
		0xE1E28742,
		0x22300420,
		0xE26830E3,
		0x2275E0EA,
		0xE31B7BB0,
		0x22FF85EB,
		0xE57A970D,
		0x242B2AA7,
		0xE5DE8CF,
		0x25129AA8,
		0xE5F217F8,
		0x25D9BB59,
		0xE5F4BDB2,
		0x27C0F18F,
		0xE66B0CC3,
		0x28BBFD59,
		0xE71FA619,
		0x29423FD8,
		0xE75F0FFB,
		0x2A435E6D,
		0xE7E2B21B,
		0x2A77805F,
		0xE8A1F9CE,
		0x2B35BCA0,
		0xE8D7BC1C,
		0x2C288F19,
		0xE926C294,
		0x2CA82A1F,
		0xE9CC5E6C,
		0x2CD2CB71,
		0xEA394419,
		0x2E126260,
		0xEACE2B9D,
		0x2E99BC6F,
		0xEAD120D6,
		0x2EC3810A,
		0xEB586184,
		0x2FABE159,
		0xEB87D81E,
		0x302D9931,
		0xEBFFEA3D,
		0x30C5F4D4,
		0xED09C626,
		0x3115A1EB,
		0xED9D39EF,
		0x325B2832,
		0xEE6C4745,
		0x32C5705D,
		0xEEADD86,
		0x33750D01,
		0xEEDEEAD1,
		0x339C7959,
		0xEEE6159,
		0x33B4B5D0,
		0xEF57AF33,
		0x3433D4B,
		0xEFF3FBE7,
		0x3493A913,
		0xF011B7E9,
		0x34F61D28,
		0xF25E9B82,
		0x36413D05,
		0xF275E3B,
		0x3826715E,
		0xF30B082,
		0x3875FAD2,
		0xF3AF5927,
		0x39005835,
		0xF3C3463B,
		0x3A320688,
		0xF3E09573,
		0x3A5E458B,
		0xF40F041D,
		0x3A67E69B,
		0xF4BB3A42,
		0x3AC92C5A,
		0xF503D594,
		0x3BAAE6FB,
		0xF5A1080,
		0x3BCFDFB3,
		0xF5FAD1D6,
		0x3C7C96D9,
		0xF6283864,
		0x3C7F1F11,
		0xF6E75B1F,
		0x3D46968B,
		0xF724BA61,
		0x3D931E28,
		0xF83B3063,
		0x3FFA5077,
		0xF85B472A,
		0x402C061F,
		0xF88D471B,
		0x40E7AA58,
		0xF8A7B100,
		0x41AD431A,
		0xFB5FBA3C,
		0x41D3A9BE,
		0xFBF601D3,
		0x423171B6,
		0xFCA7C563,
		0x43270B6C,
		0xFDA97C61,
		0x432D9454,
		0xFDB0C247,
		0x438CBA55,
		0xFF91EB36,
		0x45217063,
		0xFFD9E648,
		0x45393823,
		0x45DD0DBB,
		0x46824CF0,
		0x4859827E,
		0x486AC411,
		0x486BA2FB,
		0x4888A23,
		0x4A07D78B,
		0x4A5FB14,
		0x4AB7BB82,
		0x4AC4CD5,
		0x4B9D634D,
		0x4D19476,
		0x4E81F1E7,
		0x4F04BA07,
		0x4F487494,
		0x4FAAA93F,
		0x4FE9331E,
		0x5197096A,
		0x521B2637,
		0x522BF4DA,
		0x531FA510,
		0x546A6894,
		0x553AAF93,
		0x5728618C,
		0x581A73B0,
		0x581F702A,
		0x58215FE1,
		0x589A4D32,
		0x5AE17823,
		0x5BA76CCF,
		0x5BC616C7,
		0x5C9887AB,
		0x5C990468,
		0x5D049010,
		0x5D67C4B9,
		0x5E60C797,
		0x5EA7CF73,
		0x5EACC277,
		0x5EB429B,
		0x5F9E7604,
		0x5FDBD2FF,
		0x6040E46,
		0x6255AAE7,
		0x6502C8D6,
		0x65C1B5F6,
		0x67F755E9,
		0x68A0ED3F,
		0x695EC262,
		0x698FB25A,
		0x6A2C1417,
		0x6A30D662,
		0x6AA0AB48,
		0x6AF14335,
		0x6BB9175D,
		0x6C92991,
		0x6DDF65A8,
		0x6E4D22C1,
		0x7078C72D,
		0x70A28EF9,
		0x70E766EC,
		0x72D26B6B,
		0x75DBBC81,
		0x76BD6C4B,
		0x77D1B31E,
		0x78055C0F,
		0x787772EF,
		0x78D7D8FF,
		0x79AF331D,
		0x7A49A247,
		0x7A4A3FCA,
		0x7A4F9D2B,
		0x7AB428A3,
		0x7D813AED,
		0x7EAA6390,
		0x7EB4ED0E,
		0x7F2B2468,
		0x7F8E6C6F,
		0x835499F0,
		0x84AAD721,
		0x857BC1BE,
		0x85E7DA49,
		0x874FEDDA,
		0x888A9BE6,
		0x89D238B3,
		0x89EC3C64,
		0x8A017ECB,
		0x8A371342,
		0x8A3F84CB,
		0x8B648137,
		0x8C21B73,
		0x8C56AE38,
		0x8CF29C25,
		0x8D3D1F97,
		0x8D6EC0EF,
		0x8DD28B4D,
		0x8ED468DE,
		0x8F2DDE46,
		0x8F5130C5,
		0x90293ED6,
		0x92071A86,
		0x9261D7FE,
		0x948C1520,
		0x94B251F0,
		0x94E93D19,
		0x94F2891F,
		0x951C78B2,
		0x96E11F90,
		0x97FC3AC9,
		0x98052056,
		0x98199D89,
		0x988D9D2F,
		0x9B3C38B8,
		0x9B457A05,
		0x9B7CBC16,
		0x9B958340,

	
	};

	uint32_t shirtsFemale[] = {
		0x25E26809,
		0xC6C9E9BB,
		0x262CE00B,
		0xC6F32340,
		0x26379D95,
		0xC7EEBDCC,
		0x2647F73D,
		0xC8DBCF37,
		0x278E667A,
		0xC8E18555,
		0x28BB564B,
		0xC9061F73,
		0x2A24D352,
		0xC9628F43,
		0x2AA2E3FC,
		0xC97A6958,
		0x2B649965,
		0xC9C08372,
		0x2BECD456,
		0xC9CFA862,
		0x2C5686F4,
		0xCA1F6642,
		0x2CBEFF81,
		0xCA77835F,
		0x2D63CE34,
		0xCBBA4217,
		0x2EBB33D8,
		0xCC1E35A6,
		0x2F31633B,
		0xCE4097A6,
		0x2F917F9A,
		0xCEE1C7BC,
		0x31149F1E,
		0xD076AE04,
		0x311EA4D9,
		0xD1D2C23B,
		0x312FAE50,
		0xD33D1605,
		0x31E832ED,
		0xD44CC9E8,
		0x320BF131,
		0xD588EF6E,
		0x3213564E,
		0xD59D4357,
		0x3561870F,
		0xD7181E15,
		0x35D65EF4,
		0xD72BDBB4,
		0x37399825,
		0xD798CC9B,
		0x373CE1E6,
		0xD7A45D8D,
		0x3880CD3B,
		0xD8211F13,
		0x38989DE9,
		0xD8C92063,
		0x3905ED2F,
		0xD9A78F8E,
		0x3940E5C9,
		0xD9BEE3C4,
		0x3961817D,
		0xDAF276D2,
		0x39D97023,
		0xDB3F4A35,
		0x3A848102,
		0xDB5B31DB,
		0x3AB771EB,
		0xDB96D373,
		0x3D142A71,
		0xDBC5C4A2,
		0x3D1469B2,
		0xDBF627DD,
		0x3DD9F5B7,
		0xDC0BE268,
		0x3DF7C7E0,
		0xDC41C456,
		0x3E8F8A38,
		0xDC7B7D4,
		0x3EC8D9CF,
		0xDE232F8B,
		0x3FA5D5AD,
		0xDE419D11,
		0x3FFDB97F,
		0xDE68D22B,
		0x403CF2A1,
		0xDEFDA6B5,
		0x420E6042,
		0xDF615C14,
		0x421AADBC,
		0xE06357E9,
		0x42B9B22B,
		0xE13D70BF,
		0x42BB21C2,
		0xE1836DA9,
		0x433C9A2A,
		0xE18E57DF,
		0x44310D3A,
		0xE3FD4478,
		0x44894607,
		0xE4672EF,
		0x44903999,
		0xE4C88710,
		0x466BA233,
		0xE5343C8D,
		0x4793CC44,
		0xE6D5EC41,
		0x486851BC,
		0xE796A76D,
		0x4869A5,
		0xE86998A,
		0x49193BE4,
		0xE878F37,
		0x494905D9,
		0xE96513B7,
		0x497B5592,
		0xE9C84375,
		0x49DFEA21,
		0xEA0B3A86,
		0x4AA6F187,
		0xEAE5C7F0,
		0x4B65DA87,
		0xEB8AC5E6,
		0x4B8FC0A6,
		0xED02E7EB,
		0x4BEC4490,
		0xED04671F,
		0x4CD925AB,
		0xEDD3F8F9,
		0x4D9D672B,
		0xEE18F354,
		0x4D9DC807,
		0xEE952F2D,
		0x4E1CAAF3,
		0xEEC0E954,
		0x4F0B7A54,
		0xEF08D156,
		0x4FD52CC3,
		0xEF37F332,
		0x51D9E0A8,
		0xEF9B0FB0,
		0x5228BB72,
		0xEFCA4F85,
		0x5268945A,
		0xF00A09CB,
		0x538D1941,
		0xF13CFEBF,
		0x53BF57C7,
		0xF18F209D,
		0x53FB8430,
		0xF1EC5EFD,
		0x54D0AE79,
		0xF234E0E7,
		0x55A9FB3,
		0xF27FFA59,
		0x55EC5A93,
		0xF291D8B5,
		0x58285AFD,
		0xF2F9143A,
		0x5A3A3A25,
		0xF36B4315,
		0x5AC8DF43,
		0xF48613BA,
		0x5BA50DAB,
		0xF5BBD48,
		0x5C7EE411,
		0xF66748A9,
		0x5CE0487A,
		0xF69F8BD4,
		0x5D84972E,
		0xF785612F,
		0x5E56DF1E,
		0xFB2474,
		0x5EF97D9,
		0xFCAA1599,
		0x5F486B5C,
		0xFCF68D9F,
		0x5FE2D6E6,
		0xFD5AAB2F,
		0x5FFDD4F8,
		0xFE7DF820,
		0x6079CF81,
		0xFEB7C00C,
		0x60A8561A,
		0xFEEB2C1E,
		0x60B730F7,
		0x617FF348,
		0x61879090,
		0x61E235EB,
		0x63FE3B43,
		0x6450F253,
		0x64A106B3,
		0x64AFDD10,
		0x64DB2017,
		0x65918C0E,
		0x665A796C,
		0x67BCABB2,
		0x686EDCD6,
		0x69465764,
		0x69FB8DD0,
		0x6A48269D,
		0x6AB27695,
		0x6AB3F6B0,
		0x6AD0635A,
		0x6B35958,
		0x6C61E5DC,
		0x6CA802DC,
		0x6E7AE301,
		0x6F21CD16,
		0x6FC6BBB2,
		0x71D68D5E,
		0x7275A25C,
		0x7478C55A,
		0x74CC2A87,
		0x74CC5921,
		0x750389C,
		0x75418D03,
		0x75CAA8B1,
		0x75D67F5D,
		0x7622DFB5,
		0x76501CEC,
		0x7717C490,
		0x7733044A,
		0x7799E27A,
		0x78C34DAB,
		0x79582093,
		0x79BE3617,
		0x79DD1E66,
		0x7AE36EE2,
		0x7BB7A120,
		0x7D225665,
		0x7E0A1D64,
		0x7E25999E,
		0x7E69CE7,
		0x7F35D078,
		0x7F86A18D,
		0x7FD4F319,
		0x7FE3AC92,
		0x7FF11541,
		0x80F8C66E,
		0x81ED8FD7,
		0x83010128,
		0x839E95F6,
		0x8415199D,
		0x8479C9E2,
		0x850155F6,
		0x85061ED0,
		0x8556FCD4,
		0x8740B92D,
		0x88E028E4,
		0x8A675503,
		0x8A738473,
		0x8AE352BA,
		0x8B107245,
		0x8B68B568,
		0x8BDA5ECD,
		0x8BE440CE,
		0x8CB0503,
		0x8CB0BBD9,
		0x8D02A4A0,
		0x8DECEDE6,
		0x8EF5BF3B,
		0x8EF847A1,
		0x8F044080,
		0x900EDD8E,
		0x90B7B6CE,
		0x917F36B2,
		0x91C6E47C,
		0x925F3377,
		0x92BCBA3D,
		0x93FE6A97,
		0x941FA365,
		0x9631D92E,
		0x96A64470,
		0x98BCBE95,
		0x98DB5B59,
		0x9922D3A5,
		0x992B50ED,
		0x996A4833,
		0x999355A6,
		0x9A69F1C7,
		0x9B3E2608,
		0x9BC3E26,
		0x9D18462C,
		0x9D6106B9,
		0x9E3A79E5,
		0x9EB0EFA,
		0x9FBD4451,
		0x9FFD80E9,
		0xA02016A4,
		0xA0D1E41B,
		0xA17A149,
		0xA18B6466,
		0xA1FDB2CD,
		0xA22BF122,
		0xA327985F,
		0xA3AD4285,
		0xA443BBF6,
		0xA467BC3A,
		0xA4A373F2,
		0xA59BE25B,
		0xA5A63A1A,
		0xA642BC77,
		0xA643F609,
		0xA7045CC1,
		0xA90794AD,
		0xAA1AF6B5,
		0xAA73F23A,
		0xAB0F3246,
		0xAB729465,
		0xABF2930,
		0x10A9CF9B,
		0xAE03E0DE,
		0x1178F4F4,
		0xAE55FE0B,
		0x118B1F87,
		0xAEF04D6C,
		0x123397AF,
		0xAF44892C,
		0x123F397C,
		0xAFA20093,
		0x12955B8F,
		0xAFAF1C51,
		0x1317D6A9,
		0xAFAF2B55,
		0x135C16AC,
		0xB161B4D3,
		0x142FC6F0,
		0xB22B74C3,
		0x154CC1F7,
		0xB2350E63,
		0x1597552A,
		0xB3C35658,
		0x15A72A5,
		0xB415490,
		0x1616B827,
		0xB4ED872D,
		0x1638EF0E,
		0xB5DE3DC0,
		0x179C4436,
		0xB79C6A5E,
		0x18634478,
		0xB7F0DEAF,
		0x1879FCE5,
		0xB850E093,
		0x193FCEC4,
		0xB94287DF,
		0x1A8CE361,
		0xB9A530CA,
		0x1AA4BA22,
		0xBB3F6C18,
		0x1AC7188A,
		0xBC5A4AB8,
		0x1AFE2824,
		0xBC979A8E,
		0x1BBDCCD4,
		0xBCB096CB,
		0x1C604777,
		0xBD8856EC,
		0x1D3CE42C,
		0xBDECB8CC,
		0x1E3212F,
		0xBE13EBB3,
		0x1EAA6A09,
		0xBF0DBF09,
		0x1F53BB18,
		0xBFAF1BA4,
		0x1F770ADF,
		0xC068AACA,
		0x214B9ED5,
		0xC091CEB,
		0x21F6627D,
		0xC2717D71,
		0x22A938BF,
		0xC3172380,
		0x23E3F1C3,
		0xC34DC939,
		0x24641F2A,
		0xC3982183,
		0x24643C10,
		0xC41426BE,
		0x24AF3952,
		0xC5E1BA08,
		0x258E61F5,
		0xC5FF2D4D,
		0x25A3E045,
		0xC6927BF6,
	
	};

	uint32_t vestsMale[] = {
		0xE37E0D13,
		0xE3B92D52,
		0xE55E4F7F,
		0xE5B38228,
		0xE6AC78F2,
		0xE7CDC11B,
		0xEB360E64,
		0xED0D599,
		0xEFC59BC6,
		0xF009E433,
		0xF0B25E6D,
		0xF2920CC0,
		0xF3046311,
		0xF30FEAE2,
		0xF311E7BA,
		0xF50220C5,
		0xF70A904A,
		0xFA506620,
		0xFA736FA9,
		0xFC41560E,
		0xFCFB31EE,
		0xFEACB6D7,
		0x102714D5,
		0x10A20122,
		0x1525E68A,
		0x1737DA27,
		0x1B53FA5,
		0x1C493A28,
		0x1CEFDC14,
		0x1DD8B038,
		0x1E442267,
		0x1ED62F2B,
		0x1FFA3CFC,
		0x2265A4A9,
		0x22A9C876,
		0x2425C557,
		0x242A4C73,
		0x246900C9,
		0x263E7929,
		0x27D1820A,
		0x29A4B234,
		0x29FE9E1E,
		0x2A80328B,
		0x2D17CBAE,
		0x2E7613B4,
		0x2E94DEBF,
		0x2F150076,
		0x2FDAB6E3,
		0x3094251,
		0x31F449C7,
		0x343FC85D,
		0x35A5E857,
		0x36F02047,
		0x374E6E38,
		0x379A3955,
		0x381EF1D3,
		0x38F7760D,
		0x39712AD9,
		0x3B671E69,
		0x3D55C4CC,
		0x3E7FF186,
		0x3F1602F1,
		0x3F3D6459,
		0x45FA6BD2,
		0x47FF63F3,
		0x4B3BCE6E,
		0x4DA98FDD,
		0x4F0EB412,
		0x4F1845CB,
		0x4F34FBF4,
		0x502011A2,
		0x52660CB6,
		0x52D8A2BC,
		0x53A0C98D,
		0x55C80238,
		0x57EB0D60,
		0x58852594,
		0x59786AE7,
		0x599DB804,
		0x59A7932C,
		0x59F438AD,
		0x5A8AF22F,
		0x5B0B35B1,
		0x5B2CE8C0,
		0x5BB21D42,
		0x5CECE174,
		0x5DDCE240,
		0x5F201D2A,
		0x60F698A9,
		0x610020EA,
		0x61320C88,
		0x6181208C,
		0x6490310A,
		0x65526CF0,
		0x656E3C3E,
		0x681606F3,
		0x69F8B9CF,
		0x6B61369F,
		0x6BC093BE,
		0x6CB4F3BC,
		0x6F4D5E35,
		0x6F73A90B,
		0x6FDAD43F,
		0x70C7E654,
		0x71349365,
		0x7261171C,
		0x73ABD8B9,
		0x73DC8C16,
		0x74790121,
		0x7484C7F3,
		0x77F0D7CB,
		0x794A2FAD,
		0x7A052AD1,
		0x7AF2E747,
		0x7B3C28D2,
		0x7C4DD625,
		0x7D275A2B,
		0x7E20CD0,
		0x7FA6EE0,
		0x802A7FEF,
		0x821C2BD2,
		0x85E8E95B,
		0x8649EB7D,
		0x86D6D7D1,
		0x878593CF,
		0x8813F811,
		0x88954D67,
		0x89B02B5,
		0x89CE409A,
		0x8B03395,
		0x8BBECE44,
		0x8C7BFED5,
		0x8C7E9CFE,
		0x8DD81B4A,
		0x8E561E44,
		0x8EE3FDA4,
		0x8F0C74C0,
		0x8FB013E9,
		0x916788AC,
		0x92FA83EA,
		0x93C44E0,
		0x941D725E,
		0x95246232,
		0x980657A6,
		0x98E36C5F,
		0x994EEEDA,
		0x9A208AFC,
		0x9CD85BFB,
		0x9D69A2BC,
		0x9EB05F96,
		0xA0BAF3CF,
		0xA2B3AE98,
		0xA3A8E3,
		0xA4120460,
		0xA4122A71,
		0xA594B73,
		0xA598F2CB,
		0xA77B5313,
		0xA788CC1B,
		0xA7A8CF36,
		0xA87AD5B9,
		0xAAE1D9F,
		0xAE7DFF46,
		0xB10349EF,
		0xB1C91A6C,
		0xB25E9CB2,
		0xB2C4DA12,
		0xB2F1CDBC,
		0xB3F4B0EC,
		0xB43F485E,
		0xB667EBC,
		0xB7FB74BA,
		0xB9C1B57,
		0xBADE7754,
		0xBCA3F771,
		0xBEDEE5A6,
		0xC09DCB5E,
		0xC116B907,
		0xC2A08961,
		0xC4AD674F,
		0xC50A7E9D,
		0xC5AD8CF2,
		0xC80366AD,
		0xCAFEE020,
		0xCB47F557,
		0xCF3D2221,
		0xCF51EB4,
		0xD002A19C,
		0xD0E85435,
		0xD26228E4,
		0xD2C0FC3C,
		0xD2CDE1D7,
		0xD666CF03,
		0xD7E80DC,
		0xDA8F269E,
		0xDAF9867,
		0xDCAA6BB9,
		0xDF2F427E,
		0xE1B94509,

	};

	uint32_t vestsFemale[] = { 
		0x1077DF15,
		0x115E3542,
		0x124793F3,
		0x12FC9F84,
		0x141955A6,
		0x14311499,
		0x14B3C01E,
		0x1768646B,
		0x181687A5,
		0x1920E958,
		0x1BDCCA3F,
		0x1FBC9BBB,
		0x21573C39,
		0x22039DB,
		0x2366962F,
		0x237FCE94,
		0x250E43A3,
		0x252CF7CD,
		0x26045EC6,
		0x28FA7456,
		0x299E176,
		0x2AB99162,
		0x2B9669B2,
		0x2B9A50BF,
		0x2C9EEFF4,
		0x2CACC8BD,
		0x2CFF5C25,
		0x2D588824,
		0x301ADE91,
		0x307961D7,
		0x3161BA3B,
		0x318918B0,
		0x31BC6B0D,
		0x33B77A2C,
		0x3643E60E,
		0x387B1662,
		0x39D8F20D,
		0x3A0A519A,
		0x3A1586B0,
		0x3D3EC9DF,
		0x3DC7FDBA,
		0x3DCBF522,
		0x3E4F6C02,
		0x4171DF25,
		0x42948753,
		0x4602CBE1,
		0x463F6A04,
		0x4662B231,
		0x47569DBA,
		0x4AFF945A,
		0x4B57C41A,
		0x4CF67164,
		0x4D9E9C21,
		0x4E1BAEBC,
		0x4F4E6DFE,
		0x4F640E2B,
		0x4F7F2128,
		0x517D7F3C,
		0x519707CE,
		0x51CA4396,
		0x5388D609,
		0x53B85D0E,
		0x53E04D2C,
		0x53E4B6D6,
		0x547E780E,
		0x5544CBCE,
		0x55CA3AA5,
		0x5664AB24,
		0x568DA6A5,
		0x57986F0C,
		0x58C980F4,
		0x595C0C6,
		0x5AF32549,
		0x5B4F5A36,
		0x5CE6960E,
		0x5D5A7A15,
		0x5E3419ED,
		0x5E9B72D4,
		0x62CC54A5,
		0x635395B8,
		0x635E9E28,
		0x646E5851,
		0x64BF4BA8,
		0x6553A1E,
		0x666FDE15,
		0x6807C61,
		0x68569088,
		0x6B34E212,
		0x6B503B40,
		0x6B5B32F7,
		0x6E1A40D4,
		0x71183141,
		0x715DF1C8,
		0x71B87A22,
		0x743FFB04,
		0x7466EAF7,
		0x747C406F,
		0x74DA69C2,
		0x754BFA0C,
		0x7750FCAB,
		0x78B6D5F1,
		0x7A253425,
		0x7B343490,
		0x7D411137,
		0x7F3123B9,
		0x7FDCE459,
		0x804B354F,
		0x80D6FB37,
		0x80D71126,
		0x80DC8309,
		0x84D28A8C,
		0x84FBF13F,
		0x857B386C,
		0x86ADE4D2,
		0x87F58D7E,
		0x88A4ED8A,
		0x896A14FD,
		0x89940286,
		0x89FDD223,
		0x8CBE5957,
		0x8D5C224F,
		0x8D76F872,
		0x8DAD8759,
		0x8E0C2B28,
		0x8F2103E9,
		0x8F386E7D,
		0x8FCA6EA5,
		0x918F80DB,
		0x9239B3EB,
		0x92E93C87,
		0x940D2901,
		0x969A2F5D,
		0x97C2EDAD,
		0x97CFFF00,
		0x97EC9478,
		0x9A58330A,
		0x9ABE448C,
		0x9B645C1F,
		0x9CFF5F69,
		0x9EF89A99,
		0xA0B5D820,
		0xA17582C5,
		0xA26245AB,
		0xA32A2410,
		0xA372565C,
		0xA576A38B,
		0xA6818B2A,
		0xA7A37D07,
		0xA9B6F8C4,
		0xA9D7E2BF,
		0xAA528BBD,
		0xAAD5FB16,
		0xAC32D6BF,
		0xB09696C9,
		0xB0BF0EEF,
		0xB218EBC8,
		0xB340265A,
		0xB3C2442C,
		0xB43FA6A6,
		0xB49DA053,
		0xB52AFFE6,
		0xB8974EB6,
		0xB9DDA957,
		0xBA22EDCE,
		0xBA2E8B15,
		0xBBA07969,
		0xBC4B880E,
		0xBC625D63,
		0xBE1380B6,
		0xC5F24BBE,
		0xC663945D,
		0xC6D2CBCC,
		0xC72872EF,
		0xC7851E19,
		0xC7D9ED6F,
		0xCD1BC7A8,
		0xCF1A1F1A,
		0xD124E070,
		0xD173FA5D,
		0xD3EA212,
		0xD3F6DF05,
		0xD4473024,
		0xD5A329A3,
		0xD7A1EF1D,
		0xD9D5611B,
		0xDC0DA77C,
		0xDD58BB97,
		0xDE59724E,
		0xDF3F15F3,
		0xDF995295,
		0xE01ED6F5,
		0xE1E02067,
		0xE1E54227,
		0xE2308287,
		0xE2477BA6,
		0xEA865CA2,
		0xEABFD665,
		0xEC24B5D0,
		0xECCB45CA,
		0xEF7A75AC,
		0xF12DE0B8,
		0xF29649CA,
		0xF59BDA98,
		0xF5AD0FA7,
		0xF76E019A,
		0xF8764861,
		0xF90172E8,
		0xF90EF9B3,
		0xFD875415,
		0xFE82A25A,
		0xFFF383B7, 
};

	uint32_t pantsMale[] = {
		0x19CB5254,
		0xDE265E8F,
		0x1A0CD667,
		0xDE49F9D2,
		0x1A6D27DD,
		0xDF060F3B,
		0x1A97ED82,
		0xDF3B18F9,
		0x1AE548B,
		0xDFD0BF78,
		0x1B9F91CD,
		0xE1B0ABFF,
		0x1D85F2D,
		0xE235978,
		0x1D8ADDD1,
		0xE2A41AB,
		0x1D9655D4,
		0xE2B41FC1,
		0x1DDA04F5,
		0xE351A218,
		0x1ED336A1,
		0xE37FED23,
		0x1EF36415,
		0xE3CFC09B,
		0x1FBA61B6,
		0xE44DD860,
		0x2049FDC5,
		0xE4F22467,
		0x205D1C26,
		0xE5278781,
		0x213C96BF,
		0xE565E56C,
		0x216612F0,
		0xE5EB6137,
		0x21FCD89B,
		0xE688DCD2,
		0x2227ABC5,
		0xE792A3A0,
		0x225EEA60,
		0xE7E5720D,
		0x22E7E81D,
		0xE83A4378,
		0x2324081D,
		0xE882C64D,
		0x236A6C2B,
		0xE9F2AE74,
		0x262B1D80,
		0xEB22B92,
		0x2632C994,
		0xEB5B2100,
		0x27043E32,
		0xEB6FF0A6,
		0x2800212A,
		0xEC66FE25,
		0x28EC8349,
		0xED01EF60,
		0x291B0190,
		0xEFD36FF8,
		0x2965D2A1,
		0xF09E9B3F,
		0x2A14E8CF,
		0xF15F8501,
		0x2B049455,
		0xF18C8870,
		0x2B41793E,
		0xF19F23A8,
		0x2B59F15B,
		0xF1F9155F,
		0x2B676B3E,
		0xF21606E8,
		0x2B7A1F6C,
		0xF23A729F,
		0x2C2BA198,
		0xF25B2BB,
		0x2C92A26A,
		0xF282E4DC,
		0x2E14D948,
		0xF294D831,
		0x2F94748C,
		0xF4920EC7,
		0x2FB3C6E1,
		0xF4933F6,
		0x2FF67EAA,
		0xF4ED4433,
		0x30616F46,
		0xF5280C9E,
		0x30E2BC53,
		0xF675AA1D,
		0x31332CA8,
		0xF67AD498,
		0x32C2E2A4,
		0xF8FD2C34,
		0x332F851C,
		0xF9CDB0D9,
		0x3383A8DC,
		0xF9D51D01,
		0x33C27C26,
		0xFBDA0C5A,
		0x33FE4F72,
		0xFC6DDDA,
		0x35F9C75F,
		0xFCEE3BB2,
		0x3682AB51,
		0xFE113A6F,
		0x36856A39,
		0xFE23D7BC,
		0x389AB19E,
		0xFE631136,
		0x39BE63A6,
		0xFF1B7B66,
		0x3A99C65D,
		0xFFA08D6F,
		0x3AACBDD1,
		0xFFC3A243,
		0x3ADD9BE9,
		0x3AE1A51D,
		0x3B72992C,
		0x3B97799,
		0x3C2A4C9A,
		0x3C9ADC2,
		0x3CA438C1,
		0x3D9D386B,
		0x407FBAAC,
		0x418521C7,
		0x4282934C,
		0x448B35E4,
		0x44C39E2C,
		0x4510878,
		0x4573ED80,
		0x47F9586A,
		0x4890631,
		0x48D1B3F0,
		0x4A8ADF9A,
		0x4AAB1335,
		0x4B09D014,
		0x4D348A92,
		0x4D6D7568,
		0x4D9E3D83,
		0x4E48DCFA,
		0x4EA4F8B5,
		0x4FFCB9BE,
		0x5043625B,
		0x50F2C0A2,
		0x50F58641,
		0x5151D24C,
		0x528D6366,
		0x53B53C0F,
		0x5589DA6D,
		0x565DC762,
		0x56B5F51,
		0x58584555,
		0x58783F1D,
		0x58E11937,
		0x59812C00,
		0x5ADCEFBA,
		0x5B1BE5E4,
		0x5BF04C5B,
		0x5D288492,
		0x5DCAD55A,
		0x5F622EED,
		0x60451FCC,
		0x607CC3F1,
		0x63BE55A9,
		0x642362ED,
		0x644C06E3,
		0x64E75E3D,
		0x650B4310,
		0x664430DA,
		0x665A0AFE,
		0x67A0299F,
		0x67FD8E01,
		0x68521B0,
		0x689F80EF,
		0x68AB109A,
		0x6AF336D7,
		0x6B16CF2B,
		0x6B4C2C8C,
		0x6DADEFD6,
		0x7011504B,
		0x70FCF026,
		0x730A7AB9,
		0x73A0FBB0,
		0x7449D008,
		0x74D95CB8,
		0x7514F0C,
		0x76432A8C,
		0x774537CE,
		0x78A84CC7,
		0x79446B86,
		0x7AA50F12,
		0x7BBFF750,
		0x7DA5A6D8,
		0x7DF9BDC7,
		0x7E8FACCF,
		0x7F0CD8A6,
		0x7F54A0ED,
		0x82BA7E6E,
		0x83A0B69A,
		0x848A471A,
		0x870F7593,
		0x885D6446,
		0x8876A64B,
		0x88F3ABAF,
		0x8AE36007,
		0x8B4A5FD8,
		0x8D2A1A24,
		0x8E4346DC,
		0x8FE44F78,
		0x90E6861E,
		0x92C8E397,
		0x93C34E17,
		0x9631F4DA,
		0x9645C657,
		0x966EC6A5,
		0x9698878F,
		0x97B8F8B5,
		0x99910D7C,
		0x9A456556,
		0x9A6BA7DC,
		0x9A7A106A,
		0x9E636C1F,
		0x9EC1DFC9,
		0x9EFC74D6,
		0x9F192283,
		0xA0EF165A,
		0xA1E505A1,
		0xA22579D1,
		0xA34320E0,
		0xA3E17772,
		0xA4206208,
		0xA47762BA,
		0xA4DCC6CA,
		0xA7A6F2EB,
		0xA7F56D4,
		0xA92781AB,
		0xA96B52AE,
		0xAB17B6,
		0xABCFB315,
		0xACDC2408,
		0xADC0CE86,
		0xADE2EB8B,
		0xADF463,
		0xAEB18ED1,
		0xAF9BA10E,
		0xB01C1D77,
		0xB22113F1,
		0xB253ADEA,
		0xB33B0117,
		0xB3977466,
		0xB3F87D4E,
		0xB42899B7,
		0xB86D8548,
		0xB97D4D58,
		0xBA771A46,
		0xBA8C46C8,
		0xBABD0AD7,
		0xBAE61BF0,
		0xBB2DF633,
		0xBB9D197F,
		0xBBA0A77,
		0xBC220DA5,
		0xBC52F1A2,
		0xBC762A5A,
		0xBCB6DDBE,
		0xBFAD3FED,
		0xBFC224DC,
		0xBFC749DE,
		0xBFDB8F7C,
		0xC00E495F,
		0xC1EA87E3,
		0xC21EAA28,
		0xC2C9F5B7,
		0xC33B60D4,
		0xC5D2B149,
		0xC6101FCF,
		0xC6C421F5,
		0xC7653E79,
		0xC7D0E9FB,
		0xC7E10BFA,
		0xC80B363A,
		0xC8379176,
		0xC88F5B62,
		0xC9735379,
		0xCB35ABCC,
		0xCC30C9CF,
		0xCCB6BBB2,
		0xCCE2BFF5,
		0xCD26D78C,
		0xCDC7B43E,
		0xCE3D5CE5,
		0xCEFD6664,
		0xCF071116,
		0xCF699C03,
		0xCFA4452C,
		0xD09CEA7C,
		0xD181ED53,
		0xD1B7A09F,
		0xD25EB482,
		0x10051C7,
		0xD3D8BB60,
		0x106E3B84,
		0xD49C83C8,
		0x10A11A3D,
		0xD4DA3975,
		0x11354899,
		0xD50D1A3D,
		0x1139CCF,
		0xD56FDA8E,
		0x12D463B0,
		0xD589240E,
		0x1331FADE,
		0xD5B1AD00,
		0x1395EFA0,
		0xD6404721,
		0x139A7863,
		0xD645D2AF,
		0x1526EAB7,
		0xD681C260,
		0x156C6CAE,
		0xD75D8A30,
		0x165A9CDF,
		0xD9641720,
		0x169E4BBE,
		0xDAADFF9F,
		0x1700ADD7,
		0xDBCEF808,
		0x17343A4,
		0xDBFF343B,
	};

	uint32_t pantsFemale[] = {
		0x5E82A1A8,
		0x5F032FEC,
		0x605DF1FA,
		0x60BD5D3A,
		0x60D7D04B,
		0x629831E5,
		0x62BD6F5E,
		0x6427BDF3,
		0x642F1CB9,
		0x65B3C111,
		0x65B94CA9,
		0x65E6F27,
		0x686578C9,
		0x686A74C5,
		0x68AD4F4A,
		0x68C8437A,
		0x6AAF861F,
		0x6B7F4B6D,
		0x6B9EB97E,
		0x6CC1CB69,
		0x6CC861AF,
		0x6CF54472,
		0x6D051960,
		0x6DE0DA9D,
		0x6E5904DD,
		0x6E63F887,
		0x6EF59F,
		0x6F261BF5,
		0x6F449729,
		0x6FB0266,
		0x721D2FEB,
		0x72B6969F,
		0x7342CB28,
		0x73F18BDB,
		0x73F9DD9B,
		0x75BC0CF5,
		0x76FEEF34,
		0x77C2E16B,
		0x77F1658C,
		0x783BC4DE,
		0x79DEB644,
		0x7B011FFD,
		0x7BF136F3,
		0x7CB73135,
		0x7D36F015,
		0x7D4FEF0E,
		0x7DBA3C35,
		0x7E442DAD,
		0x7F927E00,
		0x80A42973,
		0x80BC8054,
		0x80C109A4,
		0x84C4841C,
		0x851A6ED7,
		0x85520417,
		0x85C82F88,
		0x85D64FA0,
		0x866B613D,
		0x86874F95,
		0x87119F8,
		0x87E0769,
		0x887482CE,
		0x8A65CD6B,
		0x8A87BED2,
		0x8BF2D8A6,
		0x8D7244C7,
		0x8EFFD5C6,
		0x907FC92A,
		0x90BA456C,
		0x912697F6,
		0x9205AC2D,
		0x92AD5D35,
		0x933020F3,
		0x938FE9A6,
		0x93D31C85,
		0x94443C8,
		0x9610F921,
		0x9621D14,
		0x994AA83E,
		0x9971BA1D,
		0x997C407F,
		0x9A5735E4,
		0x9B43E06A,
		0x9B47704A,
		0x9B852E2D,
		0x9B95DE36,
		0x9D35798,
		0x9DD1B63E,
		0x9DF1AF14,
		0x9F87E30F,
		0xA051F86A,
		0xA0DC72DD,
		0xA16206B7,
		0xA16DE6D3,
		0xA1B5349,
		0xA3A3F2AD,
		0xA42DD07D,
		0xA4EFF20A,
		0xA51A8AFD,
		0xA6EFF95A,
		0xA750034,
		0xA75C0757,
		0xA9964DC7,
		0xAA4ACBB8,
		0xAB514B81,
		0xAB6D5810,
		0xAD34BEE5,
		0xAE805172,
		0xAF380856,
		0xB025A2D1,
		0xB0280B71,
		0xB09B1CC,
		0xB1063931,
		0xB155C517,
		0xB2BE5B25,
		0xB314D80E,
		0xB316DE50,
		0xB3250E43,
		0xB365A793,
		0xB38A82CF,
		0xB3A12B35,
		0xB3C55D0,
		0xB57BAA40,
		0xB76976F4,
		0xB77BE61A,
		0xB808EAAC,
		0xB9216721,
		0xB9A80097,
		0xBA259C61,
		0xBD7924D8,
		0xBEDD7363,
		0xC067E54B,
		0xC0A539E9,
		0xC1D6F592,
		0xC2DC23C,
		0xC3B42322,
		0xC7BF4EC7,
		0xC7C403D8,
		0xC80DD9A0,
		0xC91F1A5F,
		0xCA113C38,
		0xCBF3C90B,
		0xCC26DE9,
		0xCCADC341,
		0x10F5497A,
		0xCCC70F34,
		0x114B1F63,
		0xCDC411F6,
		0x11EC197D,
		0xCDFF106B,
		0x11FE25C4,
		0xCE331128,
		0x1287CEF4,
		0xCECCC215,
		0x151162C0,
		0xCF07E202,
		0x15ECA9EA,
		0xD03D926,
		0x164E9145,
		0xD0E3D144,
		0x16D66E73,
		0xD18E9E59,
		0x1945CE44,
		0xD21F6387,
		0x1AF879E2,
		0xD2D1DE42,
		0x1B8A6854,
		0xD2EEA712,
		0x1DC42FF8,
		0xD3E566EA,
		0x1DDC1E22,
		0xD4591DA8,
		0x1E77B354,
		0xD51C0D93,
		0x1F1064F6,
		0xD5488CFC,
		0x1F7BABAD,
		0xD6592258,
		0x1F8FBBEC,
		0xD67FA2AB,
		0x1FBCC141,
		0xD6E89A88,
		0x1FD4AC5B,
		0xD904B3D2,
		0x20456A6F,
		0xD9E5DC5,
		0x21A36B46,
		0xDA9C899E,
		0x21CCB93E,
		0xDB35BE8C,
		0x2276F610,
		0xDC39330C,
		0x23B41BD0,
		0xDCEF6B0B,
		0x23FD210,
		0xDD77F38E,
		0x24C90A58,
		0xDDE363DC,
		0x24E388D9,
		0xDE0A6D38,
		0x259B8DF8,
		0xDEFAA060,
		0x25DFF55,
		0xDF56B51B,
		0x262F8BB6,
		0xE1208D6,
		0x27358647,
		0xE16F37D4,
		0x285F3566,
		0xE1B0027F,
		0x2880F916,
		0xE37A064C,
		0x289D46DF,
		0xE4BD3DE7,
		0x28A233AE,
		0xE542474A,
		0x2A69176A,
		0xE56A70B6,
		0x2B1E0DA7,
		0xE645CE54,
		0x2C38F42A,
		0xE6BA7756,
		0x2C620A03,
		0xE99D0BD4,
		0x2CBE5044,
		0xEAA341FD,
		0x2D7B5C2E,
		0xEB87CCBB,
		0x2FCAE0E,
		0xEBF54E58,
		0x2FD8A5A9,
		0xEBFE18C3,
		0x303461A0,
		0xEC87D3A9,
		0x30C657F1,
		0xECBA9D67,
		0x32485AFD,
		0xEE2F8E62,
		0x3277DF88,
		0xEE70E502,
		0x3299A445,
		0xEECF5A6C,
		0x33388E70,
		0xEF2F0F8E,
		0x3339E340,
		0xEF57B314,
		0x345D5570,
		0xF0DD0B9B,
		0x349085A,
		0xF1FDE0C1,
		0x35661BF2,
		0xF2BBAC24,
		0x360E300D,
		0xF34FCB40,
		0x36D32CFD,
		0xF486DE9A,
		0x3784B1A1,
		0xF5336C2F,
		0x3939E6E3,
		0xF5459330,
		0x394CAA75,
		0xF7219828,
		0x39F46A4D,
		0xF87FB057,
		0x3A2A1845,
		0xF907BDB2,
		0x3CDB5E5E,
		0xFA2F1C5E,
		0x3D25DC8D,
		0xFA5B357D,
		0x3F1FAF7E,
		0xFA5F5729,
		0x40277AE7,
		0xFAE94B53,
		0x415803E7,
		0xFB0CF2E7,
		0x42FF49EF,
		0xFC5CE570,
		0x432048D8,
		0xFC74B7FC,
		0x43D1FE10,
		0xFD3A5464,
		0x44BCF62F,
		0xFDEC1791,
		0x44FFB1FE,
		0xFE647CC,
		0x4501A5C3,
		0xFE6E5D64,
		0x45275EB6,
		0xFF423DA3,
		0x45E582EF,
		0xFFBBA958,
		0x46390E3D,
		0x46FABF1B,
		0x48299872,
		0x488686B7,
		0x48F40EB4,
		0x493DD503,
		0x49B46071,
		0x49C4C4AF,
		0x4A8313E2,
		0x4AD53F8E,
		0x4ADD8B63,
		0x4B960B9B,
		0x4C024FE0,
		0x4C2F9163,
		0x4C96BD1E,
		0x4C9CFDE1,
		0x4CCD8B85,
		0x4E931EED,
		0x4EAFECB,
		0x4EC80233,
		0x4F43D720,
		0x506E3271,
		0x5319A76A,
		0x534B6758,
		0x548AAC3C,
		0x5516317C,
		0x5587FF77,
		0x5664D0BA,
		0x569FAA0B,
		0x56BB5575,
		0x58A3DB2B,
		0x59B06486,
		0x5A8AA6FF,
		0x5BE4B990,
		0x5C41B75F,
		0x5CA52E2A,
		0x5D8B596,
		0x5D98730C,
	};

	uint32_t spursMale[] = {
		0x123BDDCB,
		0x142D2BE8,
		0x15076986,
		0x17346DD4,
		0x19E1EC40,
		0x1A7F9150,
		0x1CA207BD,
		0x1E2FFEAB,
		0x1EDE4AC0,
		0x1F7752AF,
		0x1F801AA6,
		0x200A7968,
		0x289AC544,
		0x29734E3F,
		0x2D1A92B1,
		0x2E85B95C,
		0x2ECFEAA3,
		0x2F709755,
		0x304FF460,
		0x3144C7E2,
		0x34B7E7AC,
		0x370C4A69,
		0x390F2B71,
		0x3B330A2A,
		0x3BB959DE,
		0x3BC03131,
		0x3C29D3F9,
		0x3DC4EF98,
		0x3EFA634D,
		0x4176480,
		0x42FC0DC,
		0x4329BECF,
		0x453858E9,
		0x45D89FE2,
		0x47929C28,
		0x48924AD5,
		0x4A5C8B7,
		0x4C00FA6D,
		0x4C469C1A,
		0x4CA2AD09,
		0x4CCB75E7,
		0x4D58A7B4,
		0x4EF78056,
		0x4F66D869,
		0x5000826C,
		0x5146FE33,
		0x51775B6A,
		0x529D99AD,
		0x57A6C311,
		0x5A5BEE68,
		0x5DA17495,
		0x5EB8F65,
		0x690DD6,
		0x69392ECA,
		0x69E5678E,
		0x6B76FD3,
		0x6B93BC87,
		0x6D74760,
		0x6DF05052,
		0x6EBF73C2,
		0x7399984D,
		0x74214AA9,
		0x75C5788D,
		0x82501863,
		0x84CE7E0E,
		0x8546ECF4,
		0x85D7EE1A,
		0x86BB8180,
		0x8B7A7474,
		0x8C67749,
		0x8C76008,
		0x8DB6D5D,
		0x9720EDAB,
		0x9B6CCBC5,
		0x9EDCD17C,
		0xA471EDFA,
		0xA49124CA,
		0xA49CC454,
		0xA884DE6F,
		0xA8BE89FB,
		0xA93D37D5,
		0xAACBB7FD,
		0xAF379822,
		0xB0277411,
		0xB24CFF7,
		0xB45FEC07,
		0xB513DE30,
		0xB5C646E8,
		0xBCD2DF04,
		0xBD9D3AA3,
		0xBE47D22,
		0xC1473C41,
		0xC32F6BB9,
		0xCCEF1D69,
		0xCF55DE14,
		0xD1E18015,
		0xD651A0B3,
		0xD6A888F8,
		0xD7A80BA6,
		0xD83ABDDA,
		0xD887EDAA,
		0xD968982B,
		0xDB04B994,
		0xDF5A7E1D,
		0xE3A4239A,
		0xE43C96F3,
		0xE51403DA,
		0xE6E8864E,
		0xE7327B53,
		0xE83B5553,
		0xE83ED40C,
		0xE853D432,
		0xE983927F,
		0xEB8E1070,
		0xEDEAB77C,
		0xEF6CAD53,
		0xF29B18C9,
		0xF30441AF,
		0xF3ED74DB,
		0xF50AA3C7,
		0xF57F237B,
		0xF601515C,
		0xF6797081,
		0xF69270AF,
		0xFB85B05F,
		0xFBBF36F6,
		0xFEFE4C76,
		0xFF093F0,
	};

	uint32_t spursFemale[] = {
		0x1096E1E4,
		0x1468A6E1,
		0x15D112D7,
		0x15E49D13,
		0x16F48620,
		0x1E38EE93,
		0x215AEE8C,
		0x21A24812,
		0x21FE84B3,
		0x2235427A,
		0x26CA9075,
		0x2839A8AA,
		0x2B9ED515,
		0x2C0D12D6,
		0x2C463655,
		0x35F176FB,
		0x36419A7B,
		0x36D39FC8,
		0x390434E8,
		0x3A6C3E17,
		0x3A844D3F,
		0x3C3929CE,
		0x40FE8D11,
		0x4172B506,
		0x41D63E68,
		0x423CEBAE,
		0x439938C,
		0x43FFB5F7,
		0x4429C2FB,
		0x468ACFF5,
		0x471F55C1,
		0x4778C8DE,
		0x482257D3,
		0x48830DC7,
		0x4C118E0F,
		0x51B5E76B,
		0x5340844D,
		0x54CD265B,
		0x55DFF34E,
		0x5746DC8D,
		0x575BD804,
		0x597A73AA,
		0x5A4FEF47,
		0x60563E83,
		0x618220D0,
		0x62F0D0F5,
		0x63811F38,
		0x64F812CE,
		0x651E7C5D,
		0x677A7CEC,
		0x68ECDD4,
		0x6AA70345,
		0x6C788B15,
		0x702A1284,
		0x70BFDE6A,
		0x73D8AA90,
		0x75BA43AA,
		0x77E34D92,
		0x78B487BB,
		0x7941EF44,
		0x79C3A17E,
		0x7A62A6E9,
		0x8497E165,
		0x8831EE2F,
		0x891DD51A,
		0x8A5541B,
		0x8B4687D5,
		0x8E33CA5E,
		0x8EC1583D,
		0x8F601BC0,
		0x90FBAD0E,
		0x95A165FD,
		0x95E48AB4,
		0x975E95F4,
		0x98A3228E,
		0x9C4C1663,
		0x9CB5C47E,
		0x9CE4E7C0,
		0x9E7B2E46,
		0xA195CDC2,
		0xA2C20D05,
		0xA2EAC2D5,
		0xA7FA372B,
		0xAA91B2EE,
		0xACD0CAF1,
		0xAE42973F,
		0xAED34EEE,
		0xB052A826,
		0xB5ABD28E,
		0xB757E20,
		0xB9B8B64F,
		0xBAA40062,
		0xBBD7488A,
		0xBE24ED91,
		0xBE80D536,
		0xBF037C18,
		0xC05CAEAB,
		0xC0ACDF24,
		0xC112FF25,
		0xC1E94486,
		0xC30F02E1,
		0xC70FD5A0,
		0xC898CBEB,
		0xCD288B98,
		0xCD3F188F,
		0xCE6A040A,
		0xCF077BD9,
		0xD042F8BA,
		0xD538A770,
		0xD68E261,
		0xDA7332F7,
		0xDD17A165,
		0xDD5D7B6E,
		0xDDE546E4,
		0xE00F9857,
		0xE894F49C,
		0xE9B1D174,
		0xEB2096F8,
		0xEB961EBC,
		0xEC0A0A36,
		0xECD5E4C5,
		0xED279D20,
		0xEF6E1F8F,
		0xF1B6D4B4,
		0xF1F6A6BE,
		0xF40D0A3,
		0xF540E744,
		0xF669A78C,
		0xF6E3ACDA,
		0xF80AEE26,
		0xF8B73221,
		0xF958BA41,
		0xFB5EDDF3,
		0xFE9584B4,
		0xFF32E358,
	};

	uint32_t chapsMale[] = {
		0x15FA70BD,
		0x191D455F,
		0x1C8CFDEE,
		0x1F6783A7,
		0x25BF1052,
		0x270BE13C,
		0x2778E212,
		0x2F9801A9,
		0x3286874E,
		0x3D480DB8,
		0x3E0677D4,
		0x419F1629,
		0x430F81E6,
		0x44B24E3C,
		0x4740D471,
		0x4AD7A8D7,
		0x51256722,
		0x51CA37E7,
		0x530AC88E,
		0x5462248B,
		0x551A4C75,
		0x5FFC6239,
		0x6223576E,
		0x65626D3D,
		0x6FD9F29E,
		0x79681518,
		0x847FFD8,
		0x84872B56,
		0x857F1E25,
		0x8FF2B2D3,
		0x92DAB8DC,
		0x946FA489,
		0x989EC42B,
		0xA4B40E3E,
		0xA65DC881,
		0xA733F0AF,
		0xA82D6381,
		0xAB54E997,
		0xB345B31,
		0xB7DDDE39,
		0xB82B6C1C,
		0xBF8F82B2,
		0xC5069CFA,
		0xCA15F79C,
		0xE1B8565D,
		0xE249C03C,
		0xE6C2924E,
		0xE7DFF11A,
		0xF45A7BA1,
		0xF90EEDC6,
		0xFCC1B60,
		0xFE45C160,
		0xFFD32EA,
	};

	uint32_t chapsFemale[] = {
		0x11222AF1,
		0x19E96197,
		0x1D1E2ABC,
		0x1E0D7764,
		0x29DADFBE,
		0x2F2C8C21,
		0x3028BA36,
		0x31861E55,
		0x3EDED7A2,
		0x4321C18C,
		0x4BC27169,
		0x5153D06F,
		0x55CD1C19,
		0x5FCBFAE0,
		0x5FDCED81,
		0x60AA4D60,
		0x6401B882,
		0x72A11321,
		0x759E9904,
		0x7930E2E0,
		0x7C5E04C7,
		0x80382E4F,
		0x818BF706,
		0x8470B6A8,
		0x881200A6,
		0x8F382A7B,
		0x9C254455,
		0xA2989F18,
		0xA9340ED3,
		0xAA9AE140,
		0xACFD0E9,
		0xAF5B9A02,
		0xB1573C95,
		0xBE2E5643,
		0xC1A23E8F,
		0xC39B3618,
		0xC5BA46BF,
		0xC81D80C0,
		0xC92C6EA,
		0xCA5420B6,
		0xD250FD44,
		0xD94034C,
		0xDA748ECF,
		0xDAF4266D,
		0xDE2AD562,
		0xDF93312F,
		0xE5AE576A,
		0xE74D2880,
		0xED78E2F,
		0xF48A5999,
		0xF5174414,
		0xF7637AD4,
		0xF85F2C08,
	};

	uint32_t headMale[] = {
		0x8BC1469D,
		0x8C099185,
		0x91417D14,
		0x9324DB9E,
		0x936FAFDE,
		0x93C69313,
		0x93C8CFE3,
		0x970F3409,
		0x978E6C76,
		0x9AD0D9E0,
		0x9B593624,
		0x9BE9739A,
		0x9CCAB601,
		0x9D604053,
		0x9DD7C74F,
		0xA0BE4A7B,
		0xA0D12D3E,
		0xA11747C5,
		0xA156BC1F,
		0xA23ED555,
		0xA9918F1E,
		0xA9A2BECB,
		0xAC2963F2,
		0xAC877D4D,
		0xAF4B1442,
		0xAFCDE52E,
		0xB0B07238,
		0xB6316BD4,
		0xB9C497C7,
		0xBB432C32,
		0xBC310F75,
		0xBF97F8A1,
		0xC00E8CF7,
		0xC1130197,
		0xC2978B19,
		0xC55F46B9,
		0xC6077794,
		0xCA6DABEE,
		0xCF482B6A,
		0xD1B722DF,
		0xD3D6DD59,
		0xD7506A9B,
		0xD7CDC6AE,
		0xD879AA64,
		0xD89ED98E,
		0xDC8DA4BA,
		0xDD95F0D7,
		0xDFBFB8F4,
		0xE2BED257,
		0xE4FF6111,
		0xE718D713,
		0xE78826B1,
		0xE79A7372,
		0xED8EDA8E,
		0xF0FB1DF0,
		0xF3CE707E,
		0xF4696EBC,
		0xF769DA58,
		0xFAEAC26,
		0xFEB1F6D4,
		0xFEC87D01,
		0x101E374E,
		0x158CB7F2,
		0x17E48A5C,
		0x1D1391CB,
		0x1E78F6D,
		0x1EF1D4F5,
		0x20BEAD17,
		0x27A4DC22,
		0x2BADE2F9,
		0x32E0BD65,
		0x3625908B,
		0x36739C03,
		0x39D2B100,
		0x3E1D8D10,
		0x40365810,
		0x41FB09E2,
		0x421209B8,
		0x44C938AE,
		0x465D3511,
		0x47A369D9,
		0x48133466,
		0x48531C43,
		0x48A3A1FC,
		0x4BCC286D,
		0x4C55A1AB,
		0x4C5C14D1,
		0x4DAD06D9,
		0x4E11220E,
		0x51EE52F8,
		0x5248AA25,
		0x52CC549C,
		0x53361205,
		0x54CED1F4,
		0x5A5A4569,
		0x5C8FF67A,
		0x5E9A394D,
		0x613CF195,
		0x66B5DE24,
		0x6817A7D2,
		0x68C7CDA8,
		0x69A6DC4D,
		0x6B50E776,
		0x6DF5043C,
		0x6EF1C97C,
		0x7150F35A,
		0x729570C7,
		0x7320223C,
		0x76C72AE8,
		0x771A7EE9,
		0x7AFEF216,
		0x7B035098,
		0x7BE9E352,
		0x7D7AA347,
		0x8036DB0B,
		0x8239BA1C,
		0x839997EF,
		0x84F3E485,
		0x8574F682,
		0x87198A9F,
		0x876B1FAE,
		0x89556A4D,
		0x89601857,
		0x8B921D0F,
	};

	uint32_t headFemale[] = {
			0xE4EE32DC,
			0xE6377EEA,
			0xE64076CE,
			0xE6648288,
			0xE6F8006B,
			0xE72483EC,
			0xE8E50D99,
			0xEBCEE04E,
			0xED123FBD,
			0xF70CFFFC,
			0xF7AC67A8,
			0xF8332625,
			0xFEA98F74,
			0x11567C3,
			0x11F10982,
			0x11F69034,
			0x169B95C6,
			0x16C5E95A,
			0x18665C91,
			0x1B15AE7A,
			0x1C32EE08,
			0x1C851DA8,
			0x1D896D8D,
			0x1E6FDDFB,
			0x20F6540D,
			0x22B4E685,
			0x24452D0B,
			0x2AE6E5C,
			0x2E1791E1,
			0x30378AB3,
			0x30B5C9FA,
			0x3129C6F1,
			0x34FC0B13,
			0x376E2983,
			0x3C7D04E4,
			0x40E72684,
			0x43857351,
			0x43F08B06,
			0x477D749A,
			0x478C7817,
			0x47BC4C6,
			0x4A52F943,
			0x50882CFA,
			0x50A1A9F2,
			0x53B5B98F,
			0x544D8D50,
			0x5A274672,
			0x5DC6A042,
			0x5F192A74,
			0x62534D55,
			0x6369FC85,
			0x65A5CE70,
			0x65F9F637,
			0x6A0AB89D,
			0x6ACE1042,
			0x6D06466A,
			0x6D8686E8,
			0x6DCBE781,
			0x7562A55F,
			0x75AF6E83,
			0x76ACA91E,
			0x772F8047,
			0x7C1A194E,
			0x7F2AAA30,
			0x82943FCE,
			0x87311A4B,
			0x87371192,
			0x886DB564,
			0x89B0F7FE,
			0x8A1E0CED,
			0x8A7F3F41,
			0x8CD1ABC6,
			0x8E53BDC1,
			0x93DA499,
			0x93F68D87,
			0x9409E68,
			0x945686CF,
			0x986F1565,
			0x98B8DD4C,
			0x9B4BDB4C,
			0x9C879729,
			0x9D251F06,
			0x9D3F64C1,
			0xA2B1D14C,
			0xA4372E08,
			0xA661B163,
			0xA6F0329C,
			0xAAB53384,
			0xAAC2D8A9,
			0xAB545F5A,
			0xADD7ED93,
			0xB00FC4DB,
			0xB059132E,
			0xB2155087,
			0xB240A051,
			0xB3BA8C05,
			0xB3F26095,
			0xB57F73B0,
			0xB8F8F515,
			0xBB8088E4,
			0xBBD7BFC,
			0xBBF9DC7A,
			0xBFAFA3EF,
			0xC28AB791,
			0xC2E3978,
			0xC65BEAD1,
			0xC6B7F1F6,
			0xC71039E6,
			0xC770CAA5,
			0xC93AA458,
			0xC9677F2B,
			0xC9D5F867,
			0xCC66815D,
			0xCDC2BD9,
			0xCDDA79D6,
			0xD150CE67,
			0xD3949F79,
			0xD406DA89,
			0xD47BD345,
			0xDB4094A2,
			0xDEE3A266,
			0xE1D23BF4,
			0xE23268F4,
			0xE25DCD6C,
	};

	uint32_t cloakMale[] = {
		0x15CB8E16,
		0x19A58ECF,
		0x208DA39A,
		0x27502A24,
		0x3CDEDC38,
		0x43DBE33B,
		0x7D0FD5A2,
		0x984C091F,
		0x98FC9472,
		0xA7A2AACF,
		0xAA7FAD86,
		0xB3EEC064,
		0xDC2F9ADF,
		0xF16EC55D,
		0xFD04D28F,
		0xFD705669,
	};

	uint32_t cloakFemale[] = {
			0x17DDAAAE,
			0x1AD0CDE3,
			0x1B60B4EC,
			0x2431E1ED,
			0x244DC38E,
			0x342F6351,
			0x3F77172F,
			0x469A115,
			0x4DAFB3A0,
			0x5F086D4,
			0x631BDE78,
			0x6994CE1B,
			0x9A0F4C66,
			0xA896E975,
			0xCD1B152A,
			0xCD4B32DD,
			0xD2549F39,
			0xDE923818,
			0xE38C5F5F,
			0xFB55F19F,
	};

	uint32_t skirtsFemale[] = {
		0x117BBF76,
		0x1380CB2C,
		0x1451ED56,
		0x15CB8692,
		0x16AF8E99,
		0x247C9A37,
		0x265AF0E0,
		0x266D4B8A,
		0x271952E9,
		0x27B2AA60,
		0x28C49CB,
		0x2D02376B,
		0x2D1776AD,
		0x2D22A6B2,
		0x3A10D55B,
		0x3BDAF0E9,
		0x3BEC2CAB,
		0x3C13D118,
		0x3EE2A1EF,
		0x3EFA5F26,
		0x403203AA,
		0x413C63AA,
		0x42DED22A,
		0x43A30A9C,
		0x481D0F,
		0x483D89AA,
		0x49FEA7A,
		0x4AEEF1AC,
		0x4B75DB9D,
		0x4C55F9E5,
		0x51E0A707,
		0x53C636A,
		0x573C64BB,
		0x5893FD94,
		0x5A4458B2,
		0x5D277F00,
		0x5E598923,
		0x5F3B9FB0,
		0x5F7B73C9,
		0x6143A3C0,
		0x622F1F40,
		0x63C414C,
		0x648E23FE,
		0x67FDA7CF,
		0x687E85D3,
		0x69DC570E,
		0x6F5B290E,
		0x739D33AA,
		0x75C96ED8,
		0x7654217E,
		0x83814B97,
		0x8537A6CC,
		0x86B790C4,
		0x86DB506,
		0x8931FB2C,
		0x8EA2F827,
		0x91671BFC,
		0x96C1C9FC,
		0x983233B9,
		0x9F56058,
		0xA2FDBF29,
		0xA3049EFC,
		0xA517C35D,
		0xA6E19277,
		0xA99A2E19,
		0xA9BB0847,
		0xAB175983,
		0xABCBF410,
		0xB0B83A63,
		0xB22B80D7,
		0xB52249F,
		0xB66165F0,
		0xB87C25C9,
		0xB899BDA2,
		0xBD0CFD6E,
		0xC009D906,
		0xC1CE27C8,
		0xC26F349,
		0xC27B462C,
		0xC822ACC5,
		0xC8330993,
		0xCE40F574,
		0xD312DAFA,
		0xD9FC0CEA,
		0xDA07AD3C,
		0xDAE010BC,
		0xDAF2DA11,
		0xDD9FFFF3,
		0xDE1E80F0,
		0xDF600B2E,
		0xDFA0DBC1,
		0xE0A0F616,
		0xE7C1A875,
		0xEC8DB417,
		0xECB07D8C,
		0xEFCD244D,
		0xF33DC7B6,
		0xF76FC7D1,
		0xF8251475,
		0xFAA29810,
		0xFAE1C231,
		0xFE90F64E,
	};

	uint32_t badgeMale[] = {
		0x1FC12C9C,
		0xA5074E9,
	};

	uint32_t badgeFemale[] = {
			0x929677D,
	};

	uint32_t maskMale[] = {
		0x11864F7B,
		0x13DD377F,
		0x147F94FF,
		0x14E9583A,
		0x157786BC,
		0x1CE33549,
		0x22DAC138,
		0x25585A75,
		0x26B9B973,
		0x270FFC87,
		0x2732AA32,
		0x29550105,
		0x2D3EC679,
		0x2FC14B82,
		0x31871175,
		0x31BF0FE4,
		0x388E63D3,
		0x3968EE54,
		0x3B0EA478,
		0x3EF4E9E5,
		0x4206700C,
		0x43AC3366,
		0x43AE6329,
		0x43C0B5E8,
		0x4AA42510,
		0x4D4CC6FF,
		0x4DD9C7C1,
		0x52DE71E4,
		0x57015FC5,
		0x5B806366,
		0x5C4E4864,
		0x5C53146A,
		0x5CE5E635,
		0x5D0F106C,
		0x5E3169A8,
		0x5E5AE8C3,
		0x5EF1C9EF,
		0x6520827,
		0x65CA209A,
		0x66CC4802,
		0x676A3198,
		0x6BABBDD,
		0x6E9038E4,
		0x6E93ECEF,
		0x76B9C937,
		0x77051A6F,
		0x772D9CC1,
		0x78379CD8,
		0x86F83A59,
		0x8BFB9260,
		0x92BFE50,
		0x945F14B8,
		0x950C0A49,
		0x9BC331EF,
		0x9C768DF2,
		0xA18997DC,
		0xA202F06E,
		0xA6F0AE12,
		0xA79CDEFC,
		0xAD5AB684,
		0xAF102E8B,
		0xAF1332EF,
		0xB0695B3B,
		0xB8C1D1B4,
		0xB8DB017C,
		0xBB01CB08,
		0xC1BF5F41,
		0xC223FEB0,
		0xC34700F6,
		0xC4FF5EC7,
		0xCA386975,
		0xCA4D74CB,
		0xD2D7FA78,
		0xD688A779,
		0xD981DCF4,
		0xDB6CA2D2,
		0xDC8D677F,
		0xE6ADA263,
		0xE762C92D,
		0xEC486856,
		0xF8E09DC4,
		0xFA410A6F,
		0xFE7E0CC1,
		0xFFA15B10,
	};

	uint32_t maskFemale[] = {
			0x102A2B4A,
			0x114BB734,
			0x1209B55D,
			0x183E7192,
			0x1DD39EAA,
			0x1E40FEB7,
			0x1F94815E,
			0x205851FA,
			0x2121844C,
			0x2311DAC0,
			0x29E9DEC9,
			0x2AD7FC0A,
			0x2B29BABE,
			0x2C9DE431,
			0x2DCAF428,
			0x2F5C20C1,
			0x34D77E4B,
			0x355E7C06,
			0x35CD001E,
			0x39249577,
			0x4292179D,
			0x43C218CD,
			0x45B94D7B,
			0x46A49515,
			0x4A1B2666,
			0x4C5EFD28,
			0x4E4F9506,
			0x51F64A32,
			0x536EE8E6,
			0x55680F3A,
			0x5A0AC899,
			0x61F6A857,
			0x6443EECD,
			0x6C126CA8,
			0x723275A9,
			0x73655F31,
			0x8161672C,
			0x827A1DE1,
			0x84790054,
			0x87750750,
			0x96BAA5DB,
			0x98DFD804,
			0x9A71994C,
			0x9E7E107A,
			0x9F06D6FA,
			0xA33A5AF7,
			0xAAF4CE4F,
			0xAD4C7385,
			0xB45AF080,
			0xB7E75437,
			0xB80D6880,
			0xBC5A9F11,
			0xBEA7D8,
			0xC3BE98CC,
			0xC59A1E,
			0xC651CEDA,
			0xC678F15A,
			0xCB28A7A0,
			0xCBAC2FEC,
			0xCDA7E2,
			0xD4B5CCC,
			0xD54C432C,
			0xD8634215,
			0xD8C96FC9,
			0xE64C5466,
			0xE6FFE693,
			0xE961B026,
			0xEBFE1A32,
			0xEE790339,
			0xEE7E0357,
			0xEEB86EBF,
			0xF097459E,
			0xF0E6DA32,
			0xF21BDCA0,
			0xF88E78EA,
			0xFF4F8995,
			0xFF8F13BB,
			0xFFB213E5,
			0xFFEA783D,
	};

	uint32_t spatsMale[] = {
		0x1119A23F,
		0x1187E8F3,
		0x119A96B4,
		0x12D1D3F4,
		0x1365015F,
		0x136C8940,
		0x159E2B4C,
		0x17C3F18C,
		0x1BC46C43,
		0x1CBE8C0C,
		0x1E7EBC1D,
		0x21CC599D,
		0x24C4C999,
		0x25B32DCD,
		0x2865BD1B,
		0x29B82E05,
		0x2AF92881,
		0x2B10C271,
		0x2D221C48,
		0x2F59D232,
		0x36056C1A,
		0x390E44AB,
		0x39F95659,
		0x3B2BB85B,
		0x3D1A3D0,
		0x3EA4BF51,
		0x3ED6D842,
		0x419DEF8B,
		0x41A076BF,
		0x42204648,
		0x44386AD7,
		0x4534E4FE,
		0x46285323,
		0x4753E136,
		0x4B9504E,
		0x56BCF44C,
		0x5806AB0E,
		0x58385F40,
		0x5900C2,
		0x5AF4BDBB,
		0x5D3AA6C4,
		0x5D427FC5,
		0x64758FCE,
		0x65793E54,
		0x680B9706,
		0x73D9A9BA,
		0x78E5B8BA,
		0x790DDA13,
		0x796C2791,
		0x7AE917C5,
		0x7D172FC3,
		0x80A29D74,
		0x88BBB36A,
		0x8D0181FA,
		0x90FA68C6,
		0x93FF144C,
		0x98F5523,
		0x994F4EB5,
		0x9AAAEA0E,
		0x9E912519,
		0x9F1DDA6A,
		0xA1B725D3,
		0xA241B0D1,
		0xA82C9C0,
		0xADA5222C,
		0xAE5978E1,
		0xAEE69B50,
		0xAF39132E,
		0xB011799F,
		0xB07B48ED,
		0xB36888C3,
		0xB91BDD5D,
		0xB95A0EE2,
		0xC17349C8,
		0xC1C5A57D,
		0xC225EC42,
		0xC26BC6DD,
		0xC87010ED,
		0xCAC031AE,
		0xCB25C3F9,
		0xCC628512,
		0xCD10193,
		0xD05DC2AD,
		0xD244EB6B,
		0xD2BADA31,
		0xD58BC745,
		0xDA81B510,
		0xDB19227F,
		0xDD3627A,
		0xE2491F28,
		0xE29A17C4,
		0xE3CE7C58,
		0xE41B0F12,
		0xE724EA77,
		0xE7DC968D,
		0xEAEB4956,
		0xECC4D996,
		0xED0F8EDA,
		0xF0B2BBFB,
		0xF6C8D9DE,
		0xF84CA554,
		0xFA29BB27,
		0xFC5B4B46,
		0xFD2CEDD9,
		0xFD339C58,
		0xFD80C1D5,
		0xFE2FDECF,
		0xFFDF7FCB,
	};

	uint32_t spatsFemale[] = {
			0x249D8BFB,
			0x29E63EBB,
			0x2C9A8EF1,
			0x33A4CA1C,
			0x36A8A30D,
			0x37F8EE79,
			0x3A8E5E1B,
			0x3DDB7C4A,
			0x3EDFC22D,
			0x3FCD6991,
			0x44FA74D3,
			0x4A0405E,
			0x4B21D903,
			0x510284D7,
			0x51DEE67D,
			0x5471ED51,
			0x558A940F,
			0x5A5B6A72,
			0x6343A959,
			0x63C43082,
			0x6799878A,
			0x67E8D91,
			0x6843B27B,
			0x6A99400C,
			0x6F45099,
			0x723C1A9F,
			0x73039CFA,
			0x73E1CAB1,
			0x75692329,
			0x7D34BD28,
			0x7D8CE413,
			0x7EB86042,
			0x7FDC804F,
			0x7FEE3603,
			0x80247043,
			0x858F6E0C,
			0x889D65B5,
			0x88EFC79A,
			0x8AC5DBB4,
			0x8E9C0631,
			0x8E9ED364,
			0x906683BA,
			0x91B11358,
			0x921624C2,
			0x921E5BA3,
			0xA0A5883,
			0xA21D2727,
			0xA252B49F,
			0xA26E094C,
			0xA4FD0B40,
			0xA56CAE6,
			0xA5CB81D1,
			0xA918BD1E,
			0xA9350AC0,
			0xAD405B16,
			0xB421D83D,
			0xB7061BD2,
			0xB8CCF6E,
			0xBA17DD28,
			0xBBDB3C26,
			0xBC8C316E,
			0xBDFF770,
			0xBEC15EDB,
			0xBF380E6,
			0xBF82FF9B,
			0xC01EC2EF,
			0xC1ACB933,
			0xC33B060B,
			0xC597B86,
			0xC60441E2,
			0xC65ED5C7,
			0xC7337E60,
			0xC803514C,
			0xC8DE7AB5,
			0xCB9217B9,
			0xCE22DD7F,
			0xCEA88841,
			0xD053E1E1,
			0xD2A15D98,
			0xD31BDC71,
			0xD49CEDA9,
			0xD8EBA1D0,
			0xD9911CF6,
			0xDD70BAA,
			0xDDD57CF0,
			0xDE85201B,
			0xE19C8472,
			0xE4697F0C,
			0xE4D34A3B,
			0xE6D3C104,
			0xEB35415A,
			0xEB9A99E6,
			0xEEE3139F,
			0xF15CA56A,
			0xF197A79E,
			0xF467E964,
			0xF541A2D8,
			0xFB2AE64E,
			0xFC752F23,
			0xFE71E7D3,
			0x122FDA38,
			0x178DE554,
			0x179C9A28,
			0x18431B65,
			0x1AD76E03,
			0x1B4EFB0C,
			0x1C2B7D29,
			0x1CD17C53,
			0x1D4F239D,
			0x1FA4AF45,
			0x201FF618,
	};

	uint32_t neckwearMale[] = {
		0x563359E7,
		0x56BD0300,
		0x56D285F5,
		0x57496378,
		0x578D01C,
		0x5A8E001,
		0x5B48F5D4,
		0x5D216BEC,
		0x5D5DB5B0,
		0x5E3859C3,
		0x6291760A,
		0x63EC652B,
		0x66797945,
		0x66EF262E,
		0x67CBFD18,
		0x67DD8164,
		0x67E2FD4A,
		0x690BA79D,
		0x692EEC98,
		0x69FD90B3,
		0x6A6913CA,
		0x6AD3D252,
		0x6BD5676F,
		0x6D426DB0,
		0x708D057C,
		0x71A82ABD,
		0x71BA3BAA,
		0x7222BB2F,
		0x782E3A69,
		0x784248C0,
		0x79234A7A,
		0x799924DB,
		0x79D8BDB,
		0x7AA8A4B,
		0x7B713C03,
		0x7D7BAFDC,
		0x7D908AE9,
		0x7D9A77DF,
		0x80881B4A,
		0x809D9E8D,
		0x80EDC948,
		0x84116058,
		0x84895FFC,
		0x87B54272,
		0x881ADA3E,
		0x8890E971,
		0x89F9EC2F,
		0x8B07C0EB,
		0x8B716F16,
		0x8DA94CFB,
		0x8E2E2C24,
		0x8E683A22,
		0x8EDE37F6,
		0x8F5D9B65,
		0x8FF84C4E,
		0x907E0F3F,
		0x90F056C5,
		0x91C19C3D,
		0x91DDC109,
		0x92514490,
		0x92842843,
		0x933D6DE7,
		0x975C6061,
		0x97BC6EBA,
		0x97FDF51C,
		0x993020A3,
		0x9B39FD68,
		0x9C0CC795,
		0x9C55B165,
		0x9CB46444,
		0x9D3B2AB4,
		0x9E54F18E,
		0x9FBAEBD3,
		0xA0F798DC,
		0xA18B989C,
		0xA1A73FF8,
		0xA1EE831E,
		0xA21A53FC,
		0xA2F3029D,
		0xA5BEA3F,
		0xA5DA6BA2,
		0xAA14D768,
		0xAA94BFB1,
		0xAAA0A9EE,
		0xAB217E8,
		0xABEAC618,
		0xACB47E9C,
		0xAD120681,
		0xAD97050F,
		0xAE12B1AA,
		0xAE9655E6,
		0xAF2F5952,
		0xAF72CF23,
		0xB1D33C17,
		0xB2B33C53,
		0xB57ADB2F,
		0xB594A7E0,
		0xB7647207,
		0xB7D70F9B,
		0xB834C5EE,
		0xBACC83E,
		0xBAEFA23C,
		0xBC173F9A,
		0xBD09A3F4,
		0xBD99C063,
		0xBF30A127,
		0xC1B7F3AD,
		0xC48E10C,
		0xC498A67E,
		0xC580526C,
		0xC6648582,
		0xC666D6DD,
		0xC791CBDA,
		0xC7AC7F92,
		0xC91D3227,
		0xCAC1CA6B,
		0xCC44030F,
		0xCDA29E83,
		0xCE97ACFA,
		0xCE989570,
		0xD182CF62,
		0xD18AED25,
		0xD279BF28,
		0xD5E61C05,
		0xD5F1688D,
		0xD6061A6A,
		0xD6FFC834,
		0xD7BAF6E1,
		0xD7EB0486,
		0xD9406F37,
		0xDACE5F89,
		0xDAF53928,
		0xDC045241,
		0xDC810E8A,
		0xDD1D5A27,
		0xDF350881,
		0xE0CBBA50,
		0xE150F387,
		0xE1A9D31E,
		0xE1E42E4F,
		0xE52BB8B5,
		0xE5C9E5C8,
		0xE8BD99CB,
		0xE91AFC16,
		0xE9C018AB,
		0xEA2B64C0,
		0xEA536EDF,
		0xEAFB1E71,
		0xECBCB19,
		0xED1A8695,
		0xED3632A4,
		0xED9D17E4,
		0xEDABB247,
		0xEDF325FD,
		0xEF4DE1D9,
		0xEF67FEBC,
		0xEFF6C0ED,
		0xF147518,
		0xF269D331,
		0xF30C75E3,
		0xF3515F5B,
		0xFAD6CA5D,
		0xFB042268,
		0xFBB6BC98,
		0xFD4297D9,
		0xFD51D193,
		0xFE38E6F8,
		0xFE6C9CCD,
		0xFF212F27,
		0x1024C03D,
		0xFFDBD53F,
		0x1301145F,
		0xFFDD24F8,
		0x14757301,
		0x1610AF5E,
		0x163F4C6E,
		0x164C04CF,
		0x1750CBF5,
		0x17C80517,
		0x183C75A3,
		0x195B2F56,
		0x1A098C50,
		0x1A312F58,
		0x1A7BE5DC,
		0x1B63F371,
		0x1B671CA,
		0x1C7A8063,
		0x1C990028,
		0x1D030DEB,
		0x1D4612D6,
		0x1F7BE8DB,
		0x1FAD17A3,
		0x206B3EDD,
		0x2108DC4D,
		0x212096F0,
		0x21716DBC,
		0x23D3429C,
		0x24270791,
		0x24F81EAB,
		0x26BD2469,
		0x288E2953,
		0x2A7285CD,
		0x2C41FDC1,
		0x2CB0B1AB,
		0x2CD7B1EC,
		0x2F263307,
		0x2F40B6A6,
		0x2FD14A24,
		0x2FE09EB6,
		0x303928F0,
		0x311813DA,
		0x31BD90FC,
		0x326419AE,
		0x3291A418,
		0x32F78342,
		0x3426E105,
		0x34E62EF6,
		0x3531294B,
		0x354BE8F6,
		0x35B6E663,
		0x36DE44AB,
		0x373D93B8,
		0x3771091D,
		0x378FFAA,
		0x38252132,
		0x3AD0BFAB,
		0x3B5879C0,
		0x3C4AA36E,
		0x3D00440A,
		0x3E663C0F,
		0x3EFC4322,
		0x3F9D3420,
		0x419F13E6,
		0x42C5B735,
		0x4307DE58,
		0x4519871,
		0x451F37BF,
		0x455CC9AE,
		0x45EAC0BB,
		0x4635E1F2,
		0x464C5516,
		0x4777CDD8,
		0x47B4ACBC,
		0x4880C4D,
		0x48B350A9,
		0x48EB3713,
		0x491C6927,
		0x49437D0C,
		0x4B46E097,
		0x4B52C84F,
		0x4EE47277,
		0x503D78B7,
		0x5141E7AD,
		0x516F7B27,
		0x5328CB8E,
		0x5372FBA0,
		0x54F45AD0,
		0x550BF295,
	};

	uint32_t neckwearFemale[] = {
			0x86D46983,
			0x86E11B21,
			0x8723AC4E,
			0x87FCE459,
			0x8AFA5580,
			0x8BF6F523,
			0x8CDA936B,
			0x8D95FBFA,
			0x8DF3351F,
			0x8E171ADC,
			0x8E7CAB74,
			0x8E8D03B,
			0x8EA12D10,
			0x8F23F8AF,
			0x8FA91A7F,
			0x903B1E0C,
			0x91177DCA,
			0x912818ED,
			0x9133727B,
			0x918121B0,
			0x93D1A9D7,
			0x944AAB0A,
			0x956C5643,
			0x956F06C4,
			0x95814E6,
			0x95CB499D,
			0x98532743,
			0x9B2F33F4,
			0x9E58CA0C,
			0x9EB1D69C,
			0x9FA94FA4,
			0xA08C4F93,
			0xA16B9F66,
			0xA2956331,
			0xA30C1A5F,
			0xA338DF7E,
			0xA3F217FC,
			0xA40CC346,
			0xA55F6D5,
			0xA6AB4C04,
			0xA7502A86,
			0xA802CD9F,
			0xA8684BF9,
			0xA95CA5D2,
			0xA9642E63,
			0xA9C8620B,
			0xA9DAB044,
			0xAD35DACA,
			0xAEC8380B,
			0xB063FA00,
			0xB15800B6,
			0xB1E9465A,
			0xB2CE42D1,
			0xB49E6465,
			0xB4D24633,
			0xB6C0EC2F,
			0xB7FAAE60,
			0xB8516E3C,
			0xB880960F,
			0xB932FFC4,
			0xB99EF676,
			0xBAE91ADC,
			0xBC2D06D8,
			0xBDD420B2,
			0xBE38BB72,
			0xBE8AFAAB,
			0xBFEBA7C7,
			0xC0040D66,
			0xC076014A,
			0xC1DDFEE8,
			0xC2BDC3E6,
			0xC361807C,
			0xC364C4D0,
			0xC437300,
			0xC4490AC9,
			0xC48AE64A,
			0xC4FE88AA,
			0xC500092A,
			0xC634469,
			0xC700EEF2,
			0xC977513,
			0xC9912EA,
			0xCA050AAA,
			0xCB2352FC,
			0xCB87D610,
			0xCC1895CA,
			0xCCE237C6,
			0xCDA39FA0,
			0xCDFD8C3,
			0xCE3EA9DB,
			0xD04F705D,
			0xD0875AA,
			0xD1466093,
			0xD15BCAA7,
			0xD1D6A51,
			0xD28CA7DE,
			0xD343A6C9,
			0xD35C88E7,
			0xD458671B,
			0xD4B8063C,
			0xD5058C35,
			0xD59424E1,
			0xD5CEA936,
			0xD5D22C02,
			0xD60B7C2E,
			0xD7F519A8,
			0xD95671AD,
			0xD9D0D1A3,
			0xDA14DFCD,
			0xDA3A900F,
			0xDB7B3B4F,
			0xDC9D82D6,
			0xDCCA957A,
			0xDD1E94B7,
			0xDE761F73,
			0xE044A156,
			0xE09D458F,
			0xE126A47B,
			0xE154252F,
			0xE1FEB8B4,
			0xE2FBA2C3,
			0xE3266E3C,
			0xE33AC526,
			0xE3F9C851,
			0xE4CB590B,
			0xE58F5BD4,
			0xE5CE4DD3,
			0xE63E59DA,
			0xE6AF2F88,
			0xE72B7364,
			0xE7CE7B40,
			0xE7D1AA1D,
			0xE86EEEDF,
			0xE89BA14E,
			0xE94156DB,
			0xE94A904D,
			0xE95077AA,
			0xEB52AB03,
			0xEB736444,
			0xEC2ED70A,
			0xED8351A6,
			0x11AB0D13,
			0xEE65B8B0,
			0x122A8031,
			0xEECB893A,
			0x13FB8390,
			0xEF9C5CD1,
			0x16040681,
			0xF078DF9F,
			0x1635050B,
			0xF08DBCB5,
			0x1775D68,
			0xF1617140,
			0x183AA714,
			0xF17D61AB,
			0x1B34F56D,
			0xF1D088AA,
			0x1BA10D1,
			0xF38AE94C,
			0x1BA575B4,
			0xF3CAF84B,
			0x1C331531,
			0xF58612EF,
			0x1E462649,
			0xF6B66DAE,
			0x2009E51C,
			0xF6CE4936,
			0x20A35112,
			0xF6EBF230,
			0x210E6DBF,
			0xF71FFDB4,
			0x247D9D58,
			0xF856D334,
			0x25548912,
			0xF8FDCEB1,
			0x268143A1,
			0xF944431,
			0x26B0AA16,
			0xF9B6C7AF,
			0x27FFC9B7,
			0xF9E30D01,
			0x2971AE7C,
			0xFAA573F7,
			0x297291E8,
			0xFAE3D1AC,
			0x2A3C7C67,
			0xFAF9738B,
			0x2A85B791,
			0xFB5A46CB,
			0x2B0F32E9,
			0x2D25C408,
			0x2EB3DF9D,
			0x2EC58E4F,
			0x3028E9CE,
			0x304DF14C,
			0x32AC39B5,
			0x33557676,
			0x33F6C476,
			0x345C548F,
			0x34F6F862,
			0x35734D6C,
			0x3639CD47,
			0x37F82E59,
			0x393B4CEF,
			0x39C96D4A,
			0x3BC86E2F,
			0x3C6E7B12,
			0x3FF5021F,
			0x40F35643,
			0x41EADFB1,
			0x4220885,
			0x42B29619,
			0x42C5E811,
			0x42CD55AC,
			0x43A5F8D1,
			0x448369DA,
			0x44F72328,
			0x457EE576,
			0x45B76707,
			0x45FB9BC2,
			0x47169CA5,
			0x47E72BA,
			0x47F2E07,
			0x48D4BD57,
			0x49C20EA9,
			0x4C3365D6,
			0x4DDE7887,
			0x4F28F2AE,
			0x50D83FB8,
			0x50DEB035,
			0x521A7446,
			0x528685E0,
			0x5384D2B7,
			0x5578442A,
			0x58568D3D,
			0x5873C0B2,
			0x58FB6C2,
			0x59022D2E,
			0x59544008,
			0x59869CCD,
			0x5B745850,
			0x5EA5DB53,
			0x5FCD206D,
			0x602C2127,
			0x6049CBE,
			0x613E1CE4,
			0x6262A155,
			0x636FB09F,
			0x6382EEE7,
			0x6393559E,
			0x642E48BC,
			0x672B8D59,
			0x683E69B6,
			0x6876B36E,
			0x69903CD,
			0x6A2A641F,
			0x6B76D217,
			0x6CC85727,
			0x70A55B01,
			0x70EF62F3,
			0x748F5E,
			0x74E128C4,
			0x750291EE,
			0x7A5D5056,
			0x7A86C1C,
			0x7AD970DC,
			0x7B707740,
			0x7CDED64D,
			0x7D1789FD,
			0x7EBC5E47,
			0x7F82F8BC,
			0x7FE57E79,
			0x80CD6B5A,
			0x8109DFD0,
			0x824BC399,
			0x82872D7,
			0x84A1969E,
			0x84B8F17A,
			0x850B0C4A,
			0x86943511,
	};

	uint32_t bootsMale[] = {
		0x6E4BDAB1,
		0xF86C5E5F,
		0x6E97C921,
		0xF8B77317,
		0x6EDD8FD4,
		0xF8C5DC2B,
		0x6F37886,
		0xF98F89D3,
		0x72347993,
		0xF9B5E3FF,
		0x7248C64,
		0xFAC373A2,
		0x72495528,
		0xFC6379F7,
		0x726E81E2,
		0xFC7B8E23,
		0x73AF434A,
		0xFCF27DDE,
		0x750CE304,
		0xFD985535,
		0x7648E61E,
		0xFE83E8FF,
		0x7654253E,
		0xFEC4B43,
		0x7727D577,
		0xFF2273C5,
		0x7963F0E9,
		0x7A02028F,
		0x7A05F807,
		0x7A092DAE,
		0x7A6156,
		0x7AAB4F5D,
		0x7B8C2931,
		0x7CD7CC8D,
		0x7D14A592,
		0x7D82A9C6,
		0x7EAD86E5,
		0x7EB89377,
		0x7ECF5706,
		0x7F2A57B8,
		0x7F589F18,
		0x80656CBC,
		0x8239E741,
		0x84130557,
		0x847234D2,
		0x848BDC21,
		0x849DCC02,
		0x84A090EC,
		0x8555F2CD,
		0x857AF87A,
		0x85EEDF53,
		0x865338AB,
		0x86ADFF41,
		0x86F5AAF0,
		0x8789B5BC,
		0x87E19CDE,
		0x88E10FE3,
		0x88F28C53,
		0x890CEC20,
		0x89C7D93F,
		0x89F00471,
		0x8A503D8D,
		0x8ABCAA9F,
		0x8AD91AAC,
		0x8AFD1C44,
		0x8B1AA350,
		0x8C758159,
		0x8C772A63,
		0x8CF0F345,
		0x8D39289A,
		0x8D41F3EB,
		0x8D482BFE,
		0x8DC83BF7,
		0x8F3C5091,
		0x8FB5F2E1,
		0x8FFD8459,
		0x90442F13,
		0x9063CA78,
		0x90A7A281,
		0x914989BA,
		0x92F9C3A,
		0x93095EA8,
		0x933FB691,
		0x93519F75,
		0x94B37E9,
		0x958A2F0F,
		0x95BA306E,
		0x95D1462,
		0x969DAB5C,
		0x972035D3,
		0x97F0C157,
		0x98B2DB1E,
		0x98D49A1B,
		0x997EDBEA,
		0x9AA788F7,
		0x9AC5BD36,
		0x9B735C27,
		0x9BEB45FE,
		0x9C120B2D,
		0x9C9FA534,
		0x9CC87226,
		0x9D19C2DD,
		0x9DA4C9D4,
		0x9DE197AE,
		0x9E75A412,
		0x9EEF5AE3,
		0xA009F22C,
		0xA08EED0B,
		0xA1264647,
		0xA16E3BAE,
		0xA19AE06,
		0xA1B06EC9,
		0x1002199A,
		0xA2859E6E,
		0x10E40F4E,
		0xA29A6EE5,
		0x11044269,
		0xA2A2ADB3,
		0x115D47FD,
		0xA2EF6645,
		0x119D4929,
		0xA368316D,
		0x11A11C2E,
		0xA3C43819,
		0x11B7CAB1,
		0xA4A10C08,
		0x12F962EC,
		0xA62FF938,
		0x131BBCE7,
		0xA6D4F696,
		0x138B28BE,
		0xA8FDDB85,
		0x14674A6B,
		0xA9657C83,
		0x1470CE34,
		0xA9F45B93,
		0x151EAB71,
		0xAA0CE241,
		0x156828EB,
		0xAA183BF9,
		0x15E08C22,
		0xAA272757,
		0x16BDB756,
		0xAC125FB7,
		0x16F1960A,
		0xAD88C6E,
		0x189227AA,
		0xADC89687,
		0x192C2A4B,
		0xAE0D2B7,
		0x195A47E0,
		0xAEB3EEDD,
		0x1A0A710A,
		0xAEB52702,
		0x1BB1DE12,
		0xAF55B8B1,
		0x1C0B7ADB,
		0xB00D4741,
		0x1C46F285,
		0xB02F39C1,
		0x1C9E2533,
		0xB037871F,
		0x1CCEE58D,
		0xB0B3FE6C,
		0x1ED5D45F,
		0xB1FBCE94,
		0x1EF2B6A3,
		0xB254050E,
		0x1F5A64A3,
		0xB2B824E,
		0x1F76387A,
		0xB2D29111,
		0x1FC0B86D,
		0xB2E8A897,
		0x20D85860,
		0xB32E0D9F,
		0x214400F,
		0xB35B8CA7,
		0x21C0BD17,
		0xB3A8708,
		0x2236EFD8,
		0xB3C54190,
		0x23156B7D,
		0xB3C9A018,
		0x23F56F2C,
		0xB4114889,
		0x24CBC01D,
		0xB438BBE6,
		0x25A55525,
		0xB45FEFC,
		0x25C9CD3B,
		0xB5466BBE,
		0x2679AC3C,
		0xB60A4577,
		0x268C3A9A,
		0xB639798D,
		0x28A567FA,
		0xB64E0349,
		0x28C08E7A,
		0xB68DDDAC,
		0x29F57A99,
		0xB6CBD605,
		0x2ADEDCF1,
		0xB7DF2853,
		0x2B27BDB6,
		0xB9BAFB08,
		0x2C066D38,
		0xBA84D0F4,
		0x2CB08313,
		0xBAD97F3C,
		0x2EA6B02C,
		0xBB6D22C7,
		0x2F661763,
		0xBB7013EC,
		0x300CE1C1,
		0xBB73885C,
		0x30539D9C,
		0xBC109E09,
		0x30BED3D,
		0xBC42F16F,
		0x312A5CC0,
		0xBC52606D,
		0x31B8DCFF,
		0xBD1FFF39,
		0x31BB4E15,
		0xBD67C467,
		0x3336F048,
		0xBE00E328,
		0x333D9035,
		0xBE1F2192,
		0x3356D433,
		0xBFC710FB,
		0x341BC898,
		0xBFD026E3,
		0x3420118,
		0xC0196ACF,
		0x347B9044,
		0xC038F102,
		0x34B705E8,
		0xC08EA183,
		0x35C87ED,
		0xC11C2828,
		0x378E8CEF,
		0xC128C517,
		0x37BBDB6E,
		0xC1644333,
		0x38271590,
		0xC342A838,
		0x38772DE7,
		0xC3821C2D,
		0x3B194911,
		0xC3BCE0DC,
		0x3B67ED55,
		0xC3C41616,
		0x3C05948A,
		0xC430AF11,
		0x3C4F730A,
		0xC485BB27,
		0x3CCC671A,
		0xC51E72AA,
		0x3D5D87DB,
		0xC5C3EA57,
		0x3D863801,
		0xC6972257,
		0x3E638473,
		0xC6FD0F2B,
		0x3EFE27AE,
		0xC9687337,
		0x3F07A550,
		0xC99989B6,
		0x3F23EBCD,
		0xC9E22A71,
		0x40568254,
		0xCB50CF36,
		0x42062CFA,
		0xCB629054,
		0x42297DE0,
		0xCBA8733B,
		0x432FFAD1,
		0xCBADB467,
		0x451793B6,
		0xCD1F04DE,
		0x45C73548,
		0xCD9FEE48,
		0x45E23DDE,
		0xCF6C22D2,
		0x46A35F19,
		0xD0310C5A,
		0x46FDB33D,
		0xD08EAAF9,
		0x472F8928,
		0xD10A3A9,
		0x4818E747,
		0xD210313E,
		0x48391E97,
		0xD27A4BA4,
		0x4A46C6A7,
		0xD313E8ED,
		0x4D0FC31D,
		0xD469E168,
		0x4E36EF4C,
		0xD5F7CC55,
		0x4E5CB70,
		0xD6FB09E0,
		0x4E9704F8,
		0xD7043F75,
		0x4FAF30C2,
		0xD75F5A2A,
		0x4FC8C87F,
		0xD78D1640,
		0x4FD9275E,
		0xD7ACDB46,
		0x50672AA8,
		0xD99D9A1F,
		0x50BAA670,
		0xDAD7DB9F,
		0x518F4860,
		0xDC81A3A3,
		0x539830B7,
		0xDCE2C32B,
		0x54BC791,
		0xDD1A9A97,
		0x559998B8,
		0xDD40479E,
		0x55A7C855,
		0xDEBBC753,
		0x55CCEE07,
		0xDEEF9E45,
		0x55F7BA14,
		0xDF5C91C5,
		0x5710BCAD,
		0xE1CF6A4E,
		0x5720605A,
		0xE1EE57AB,
		0x5884EBD1,
		0xE222CDCE,
		0x58F9C97,
		0xE2259EB9,
		0x594AD9D6,
		0xE233D5DC,
		0x597A0C58,
		0xE43968D8,
		0x59BB1E6,
		0xE5B5C43C,
		0x5B921E4C,
		0xE5F937EA,
		0x5C3A5E62,
		0xE6DD362B,
		0x5C994FE5,
		0xE711531B,
		0x5D5CC265,
		0xE84EF68D,
		0x5D6DC7F7,
		0xE87DFC67,
		0x5D8BB19C,
		0xE9447E75,
		0x5D99450C,
		0xE9A5547B,
		0x5E79E5E1,
		0xE9EB9D6E,
		0x5F79541D,
		0xEAA94EE1,
		0x60419361,
		0xEB58821C,
		0x609E2906,
		0xEBEDE164,
		0x616F1654,
		0xEC428525,
		0x618FB0A4,
		0xECA6D769,
		0x619469D6,
		0xECEE039B,
		0x62B6B603,
		0xED1163FE,
		0x63D5611,
		0xED393AD8,
		0x64106871,
		0xEDDC9E7E,
		0x649C233F,
		0xEE07DD44,
		0x64BDD7A0,
		0xEE710EFD,
		0x65034393,
		0xEE7182D2,
		0x65C4D510,
		0xEE976A4C,
		0x66A385DD,
		0xEEB7CE03,
		0x67491827,
		0xEF8EA1E2,
		0x6750478B,
		0xEFD964AF,
		0x681A709C,
		0xF082E23A,
		0x68332C52,
		0xF0A277F1,
		0x6846D489,
		0xF1751FE4,
		0x686A6DDA,
		0xF1C2F8AE,
		0x6974A5C3,
		0xF281C565,
		0x69CABABD,
		0xF2F4775D,
		0x69D2FCA3,
		0xF342038B,
		0x6A23970E,
		0xF3606E0,
		0x6A2B9E5,
		0xF3F960C3,
		0x6B06632C,
		0xF48EB2B4,
		0x6B4454AA,
		0xF4979071,
		0x6BF3034F,
		0xF55FD330,
		0x6BF311D8,
		0xF69C7BC6,
		0x6C4A7FD5,
		0xF6BA67E1,
		0x6C930213,
		0xF6CA89C0,
		0x6DB0E4ED,
		0xF6D71DD4,
		0x6DF3526B,
		0xF86B8EE6,
	};

	uint32_t bootsFemale[] = {
			0x4FA2A22B,
			0xC6FD18D,
			0x5044ACC1,
			0xC790F61F,
			0x521A9E14,
			0xC7C5EC54,
			0x52C6294D,
			0xC87CEC52,
			0x5308A6A,
			0xC8E5C4D2,
			0x5382AF11,
			0xC8EE6DFB,
			0x53F7C2E6,
			0xC9EED59E,
			0x53FCE0A6,
			0xCB74973C,
			0x548BC2FC,
			0xCC59ACBF,
			0x54F92DB7,
			0xCC7B5707,
			0x5515E83E,
			0xCCBBEC7C,
			0x55666C8F,
			0xCCD224B2,
			0x5576E024,
			0xCCD5A6E8,
			0x55ED8591,
			0xCCDC7209,
			0x56906647,
			0xCD9102C2,
			0x56EC5D2B,
			0xCDBD9B81,
			0x573C017E,
			0xCDC99F7F,
			0x586F749D,
			0xCDFFC459,
			0x59D61AAB,
			0xCE712BDD,
			0x59DB5F3C,
			0xCFC41281,
			0x5A0F0491,
			0xD032AA50,
			0x5AA378E9,
			0xD03D522,
			0x5BB8C66A,
			0xD1457580,
			0x5BE77FC4,
			0xD218804F,
			0x5BE78846,
			0xD2B26D18,
			0x5C427829,
			0xD2B81A62,
			0x5D3DB45A,
			0xD2F4E3FE,
			0x5DDCB4F0,
			0xD3D35CDB,
			0x5E3E7F42,
			0xD3F7E30B,
			0x5E7E1037,
			0xD4221061,
			0x5E9000DE,
			0xD59845E1,
			0x5EE73C80,
			0xD5C1EB3F,
			0x5F54F8AC,
			0xD918E538,
			0x60464094,
			0xD9AF33B1,
			0x60F172B,
			0xDA2CF26A,
			0x6110CEAC,
			0xDA7810F6,
			0x61A3A671,
			0xDA8396A6,
			0x61F4E544,
			0xDA928F86,
			0x622C861B,
			0xDAAA10B4,
			0x62F06093,
			0xDAACBA15,
			0x62FA8C36,
			0xDB549379,
			0x6344049A,
			0xDC1A88A6,
			0x63B59FBD,
			0xDC5E337D,
			0x6498D13D,
			0xDC6520BE,
			0x64CC4C82,
			0xDCCD61F4,
			0x65C3133B,
			0xDD84373C,
			0x6680C937,
			0xDDAC0E4D,
			0x67B8B012,
			0xDDE974F3,
			0x67E4A03C,
			0xDE75C6D6,
			0x681DFBC1,
			0xE03BC081,
			0x6860D453,
			0xE0CF855F,
			0x688347E7,
			0xE0E02960,
			0x69CEF65C,
			0xE10E370E,
			0x6A09E09E,
			0xE16A4DE2,
			0x6AFABCF4,
			0xE197BC64,
			0x6B7850CF,
			0xE268B7CA,
			0x6C480429,
			0xE2AA4A10,
			0x6CCCE1E9,
			0xE2D4A00A,
			0x6D39C172,
			0xE32DE10C,
			0x6D45CFC3,
			0xE444C2CE,
			0x6DADFCCE,
			0xE44DC1D0,
			0x6DC21B28,
			0xE45724CC,
			0x6E1A9B10,
			0xE5FB374,
			0x6E6EEBD6,
			0xE60C5004,
			0x6E7F1234,
			0xE654AC55,
			0x702A9977,
			0xE67EDA3A,
			0x70512264,
			0xE846C57F,
			0x708DE4E0,
			0xE8DD8AE3,
			0x71583B02,
			0xE95DF433,
			0x7191A135,
			0xE9BBFA39,
			0x71F870B7,
			0xEA6EC7D6,
			0x72878D6E,
			0xEBC0616B,
			0x72A0150,
			0xEBEFA02A,
			0x72B8B5E8,
			0xEC17A026,
			0x72D083A,
			0xECEFDF67,
			0x735270F9,
			0xED12827E,
			0x74559430,
			0xED9FA83,
			0x74A22461,
			0xEDB3B76D,
			0x74E52BA8,
			0xEDD2B4F1,
			0x74EB2D94,
			0xEDEDB73B,
			0x76653FD0,
			0xEE6B1BB3,
			0x768A0E6E,
			0xEE944425,
			0x76D275B0,
			0xEEE8B83E,
			0x777B41FC,
			0xEEF85E43,
			0x7790C8D7,
			0xEF00A5F4,
			0x78C16DB8,
			0xEF33C65B,
			0x78F234A9,
			0xF00418B6,
			0x7AAA8A25,
			0xF1083979,
			0x7AD86F8F,
			0xF1261B7C,
			0x7B05A1A4,
			0xF24C64A2,
			0x7B7879D6,
			0xF343FC87,
			0x7CEE7F1,
			0xF4F8EEAD,
			0x7DD7B0D9,
			0xF5FE6531,
			0x7E02A6B2,
			0xF61C17D3,
			0x7ECB9F09,
			0xF6CA45EC,
			0x7F16AB94,
			0xF7E09138,
			0x7F337D28,
			0xF83A7DB1,
			0x7FBFC141,
			0xF83E4E14,
			0x7FD48EA5,
			0xF8922C3F,
			0x7FD5033B,
			0xF8D8EDE5,
			0x806D5CFA,
			0xF8E9E5,
			0x8084517F,
			0xFB7F7AEA,
			0x808A3FEF,
			0xFBEE3F8F,
			0x80A64941,
			0xFC245194,
			0x80BCB6AF,
			0xFD3DFACE,
			0x80CA29F3,
			0xFDF62F26,
			0x818983A,
			0xFE3F56DF,
			0x81D7FBA9,
			0xFE6544C1,
			0x81EB1E88,
			0xFEB99771,
			0x81EC7D0F,
			0xFEDF0EB1,
			0x8223807C,
			0xFF77DA4F,
			0x82BE1985,
			0x831441A5,
			0x83724688,
			0x838A9220,
			0x84C063E3,
			0x8595CDF0,
			0x8657DF9A,
			0x869D0271,
			0x8786B51,
			0x8795E216,
			0x882F1302,
			0x88828A3B,
			0x88DD9E45,
			0x8901E509,
			0x89F3DB9C,
			0x8A4D49C4,
			0x8D093B84,
			0x8D4D5A54,
			0x8E944E8,
			0x8E95A9B9,
			0x8F51760D,
			0x8FB9BA25,
			0x91A32803,
			0x10428984,
			0x91AACBB4,
			0x106A2126,
			0x91AAFF75,
			0x118E7E7C,
			0x91C04F05,
			0x12CB6473,
			0x91F80AEE,
			0x134D7E03,
			0x92514614,
			0x139F347E,
			0x92DEEDB2,
			0x141281DC,
			0x92F6E591,
			0x14683CDF,
			0x9307448D,
			0x16644E3C,
			0x93A7B3D9,
			0x167E2D05,
			0x946124F7,
			0x168BC01,
			0x95265C0,
			0x1696E043,
			0x958B87E0,
			0x16BF0A,
			0x95D36E6B,
			0x16FCED9F,
			0x960A2FA5,
			0x170C3806,
			0x96272F37,
			0x173C28D,
			0x962993EC,
			0x176667FC,
			0x970E7E93,
			0x17FB33E1,
			0x97BBE339,
			0x1812B30C,
			0x98DAA6EC,
			0x1832A361,
			0x9921253C,
			0x19A310DD,
			0x9978D8D9,
			0x19ADA9E,
			0x99A50EA3,
			0x19E17B75,
			0x9A074098,
			0x1A3F3C87,
			0x9A490CE3,
			0x1AEBC0B,
			0x9A722E1A,
			0x1AFAC5E,
			0x9AE308CB,
			0x1B5171BD,
			0x9BB91391,
			0x1B844230,
			0x9CB59825,
			0x1BCE1200,
			0x9D1FEF69,
			0x1CCD18F6,
			0x9DBC4383,
			0x1D2C6CF0,
			0x9DBDB6A,
			0x1D890F1,
			0x9E72D797,
			0x1E317510,
			0x9F18E9B6,
			0x1E9E514B,
			0x9F5E0E,
			0x1ECA005A,
			0x9F874C4C,
			0x1F5C066E,
			0x9FBAFD87,
			0x1FAE7296,
			0xA2FB18EC,
			0x1FED53E5,
			0xA3BAAE73,
			0x2142C56C,
			0xA454A01B,
			0x2209850,
			0xA4EA252D,
			0x224B75F,
			0xA58D09F8,
			0x229E9FD4,
			0xA68248D1,
			0x22E425D4,
			0xA6D40EA5,
			0x2487EA83,
			0xA735F6CA,
			0x2490C301,
			0xA76301CD,
			0x24AC372,
			0xA79D28EF,
			0x25495480,
			0xA7AFC941,
			0x256489A5,
			0xA83D5F76,
			0x25C52541,
			0xA88DA96C,
			0x267D2A91,
			0xA9112527,
			0x27304EB2,
			0xA9FF62FA,
			0x27449248,
			0xAA8EBCB6,
			0x27C604C3,
			0xABBBDB3B,
			0x27FF17F4,
			0xABCDE425,
			0x2903520F,
			0xAC44733A,
			0x2924D60F,
			0xAD2BB9E9,
			0x299D8BF8,
			0xAE579B32,
			0x2A01AB6F,
			0xAE821EC5,
			0x2A63DFD4,
			0xAE89A4C7,
			0x2B39DA06,
			0xAFCADBCA,
			0x2BB1FFBC,
			0xB00A681F,
			0x2CC9DE4E,
			0xB0759EFC,
			0x2E9CE93B,
			0xB076E66,
			0x3147F69A,
			0xB0CE90E,
			0x3210A6E7,
			0xB110EF5F,
			0x32C86F7E,
			0xB176DBAF,
			0x32CA7220,
			0xB17D9EF,
			0x32F97A01,
			0xB186E69E,
			0x33DFE811,
			0xB19E64C1,
			0x35003A74,
			0xB2389F8D,
			0x364CEF80,
			0xB26EDA14,
			0x3783F3C2,
			0xB28027C4,
			0x37BB73FE,
			0xB2AB2893,
			0x3833A59E,
			0xB2F3D31B,
			0x3851AC21,
			0xB34B707E,
			0x38597BBF,
			0xB35859AA,
			0x38EE0E54,
			0xB3C7ADEA,
			0x39323A5A,
			0xB4E4BCBF,
			0x395F7680,
			0xB55F6B0E,
			0x397DC47B,
			0xB57DE4DD,
			0x39A20DF7,
			0xB5CF62AB,
			0x3A7DA081,
			0xB67BAC9A,
			0x3AAE4CC8,
			0xB692C944,
			0x3B5C2F75,
			0xB696449E,
			0x3BC0040B,
			0xB6C586D0,
			0x3DEDBF9A,
			0xB7204999,
			0x40F18BC8,
			0xB73AAD53,
			0x414A8DA5,
			0xB83798C9,
			0x416BDD3B,
			0xB84F5837,
			0x41700AEC,
			0xB86A7591,
			0x42A08906,
			0xB8C2ED52,
			0x43418B25,
			0xB8E94E9B,
			0x442C5B73,
			0xB901AE2,
			0x4454B51,
			0xB952CC5A,
			0x44746054,
			0xBA6008CC,
			0x448E7C18,
			0xBA92041F,
			0x451342E3,
			0xBB150367,
			0x4547433B,
			0xBB33B828,
			0x463CCE3C,
			0xBB9FB550,
			0x46407380,
			0xBBA67753,
			0x46A41032,
			0xBCA38455,
			0x471D1D33,
			0xBCDEBA24,
			0x47C66AE7,
			0xBD0041B4,
			0x48FFE11,
			0xBD32739A,
			0x498C261,
			0xBDE07F84,
			0x49A9D712,
			0xBE8CD00F,
			0x49BCDB6F,
			0xBF74D73A,
			0x49FA22ED,
			0xBFCD3AB6,
			0x4A1B1487,
			0xC09D9798,
			0x4B24D90F,
			0xC13D14F,
			0x4B516716,
			0xC167878B,
			0x4B98F195,
			0xC19DCB7,
			0x4CAF9C45,
			0xC1B9FD51,
			0x4CB33AC1,
			0xC24179B9,
			0x4D3FCA77,
			0xC2DC11DE,
			0x4D5CAACE,
			0xC2F10FCD,
			0x4D8E1B24,
			0xC3AD3A61,
			0x4DE798,
			0xC42FE214,
			0x4E4EDC42,
			0xC46D487D,
			0x4E5E8457,
			0xC595FE25,
			0x4F142938,
			0xC68E653D,
			0x4F22177B,
			0xC6F399CC,
	};

	uint32_t accessoriesMale[] = {
		0x13F53A09,
		0x17920A1E,
		0x29A9AE4D,
		0x33D9B861,
		0x361F17DA,
		0x3B7F8161,
		0x4355B247,
		0x469B5DE4,
		0x47D2DD9D,
		0x5B5591A4,
		0x620114AF,
		0x6599ED2,
		0x7241EEE5,
		0x790DCD14,
		0x7C374665,
		0x847E935E,
		0x8A80E2F8,
		0x965A7D5D,
		0x96B937D3,
		0x999B5ED1,
		0x99E945EF,
		0xA0800EEA,
		0xA799E150,
		0xA7F25A45,
		0xA8E8FD6C,
		0xAE36AA57,
		0xB20534B6,
		0xBA33FEC8,
		0xC0839327,
		0xCBC46834,
		0xECC2276D,
		0xECD9854C,
		0xF0737306,
		0xFB1C21D1,
	};

	uint32_t accessoriesFemale[] = {
			0x1002112A,
			0x12CBC8FA,
			0x13C83C66,
			0x18C3AA6B,
			0x194EAB7D,
			0x249B6C99,
			0x2594C409,
			0x33D36086,
			0x383DDE91,
			0x395CE068,
			0x3B6499DF,
			0x3D9B900C,
			0x4356AA0F,
			0x43859D00,
			0x45397B98,
			0x46227A5A,
			0x4E1F09E8,
			0x54F497FE,
			0x56FD1F1F,
			0x58B62291,
			0x621F5913,
			0x69764CE3,
			0x6A4EF7FF,
			0x6D31D346,
			0x7349FB68,
			0x762A0F69,
			0x78735E90,
			0x8E613EF7,
			0x9768103,
			0x97F452FD,
			0x9A042CEA,
			0x9BEBA5EF,
			0xA0708B2B,
			0xA6C63B35,
			0xAD74EFC1,
			0xB000EE4,
			0xB2B52FB4,
			0xB84593F7,
			0xBFA11421,
			0xC7F8E4B7,
			0xC9EE3748,
			0xCDD6B08C,
			0xD2BD1395,
			0xD2FF9EE0,
			0xDC962A4F,
			0xDCF8280B,
			0xE463DDA6,
			0xEB40CDE,
			0xEB934541,
			0xEE53CDCA,
			0xF29E7A1B,
			0xF9C8E1AC,
			0xFBFBC240,
			0xFC5BF198,
	};

	uint32_t ringsRightMale[] = {
		0x3D9B5AE8,
		0x4CA9F905,
		0x5B06B13,
		0x62E82581,
		0xDF160091,
		0xE02AA008,
		0xF685CCBE,
	};

	uint32_t ringsRightFemale[] = {
			0x24EB4B39,
			0x3AECBE82,
			0x49C3F5AA,
			0x68E21B88,
			0x72A366A8,
			0x768936D6,
			0x807D025B,
			0x81C64D50,
			0x97332FC7,
			0xA4DFCB20,
			0xAC57E200,
			0xB7426FE5,
			0xD9C4B509,
			0xE80E519C,
			0xFD597C32,
	};

	uint32_t ringsLeftMale[] = {
		0x1606D4A2,
		0x257AF7E6,
		0x270BF6B0,
		0xB0550940,
		0xC0CC2A32,
		0xC29CADCF,
		0xD2E24E5A,
	};

	uint32_t ringsLeftFemale[] = {
			0x1F528866,
			0x2D83A4C8,
			0x3CCE435D,
			0x48365A31,
			0x5664768D,
			0x91AFED23,
			0xF5BEF9CD,
	};

	uint32_t braceletMale[] = {
		0x136BA95C,
		0x2254C72E,
		0x2FDF6243,
		0x5D60E31,
		0xE94B5518,
		0xF799F1B5,
	};

	uint32_t braceletFemale[] = {
			0x64D71DBC,
			0x73263ACA,
			0x8166574A,
			0x97A703CB,
			0xACD52E27,
			0xC85DE538,
	};

	uint32_t guantletsMale[] = {
		0x166A3B1B,
		0x16D700B3,
		0x30C8B496,
		0x3B4FC9A4,
		0x4888E416,
		0x6CFCAD01,
		0x6D313,
		0x7483944C,
		0xB2303767,
		0xDE388F77,
		0xE56F1F1C,
		0xEB822A0A,
	};

	uint32_t guantletsFemale[] = {
			0x17E418EB,
			0x52940E66,
			0x56CD96C1,
			0x6A13BD4D,
			0x6DCE8116,
			0x76B8A331,
			0x7AA85E76,
			0x7CE162E8,
			0x8630F59F,
			0x93310F87,
			0x9AFD709C,
			0xED6B02,
	};

	uint32_t necktieMale[] = {
		0x127CBB85,
		0x17C3C613,
		0x1850DA4D,
		0x188D7769,
		0x1D4EE78A,
		0x22D12FEF,
		0x261662B8,
		0x2A8048AB,
		0x2A957ED6,
		0x31975FE2,
		0x365956FF,
		0x3AD5725E,
		0x3E56C2FB,
		0x44F1F2A,
		0x4574F536,
		0x4629890E,
		0x471F01EC,
		0x4F5A9B68,
		0x4FFC6646,
		0x57EC2C93,
		0x5B5983EF,
		0x5D6A803E,
		0x61A13FF5,
		0x67B0CC14,
		0x68923B74,
		0x69C44736,
		0x6B2CC0A9,
		0x6BBD3C6,
		0x6D132762,
		0x721AE0E8,
		0x73227CCF,
		0x74BE6960,
		0x7904E5B7,
		0x794EC5C4,
		0x7A151DE0,
		0x7E246698,
		0x83CCD4C1,
		0x85BD58B6,
		0x87FA631B,
		0x9056C12F,
		0x930E3CA6,
		0x934C9A46,
		0x95A2D4FB,
		0x977FFC3B,
		0x9912FF4D,
		0x9AEEB297,
		0x9CC48CAB,
		0xA0DF880F,
		0xA272120B,
		0xA3AE0DA8,
		0xA60C1F32,
		0xA6E2383B,
		0xA70FA021,
		0xAA9FC8E8,
		0xAC3A822A,
		0xACE52016,
		0xADD72ED0,
		0xB00853BD,
		0xB3CAADE5,
		0xB442BB9F,
		0xB4AFB686,
		0xB4DE9366,
		0xB839084B,
		0xBA4EC7B7,
		0xBB598D3C,
		0xBE4A2649,
		0xBF53D1C9,
		0xC0CDF544,
		0xC59206D9,
		0xC6157FD7,
		0xC6F83799,
		0xC7D862CA,
		0xC8E52853,
		0xCCF20E80,
		0xDE1F0A90,
		0xE4053258,
		0xE7D17957,
		0xEEF0AB1B,
		0xEF1C74C1,
		0xF10A20E1,
		0xFAC1BBD2,
		0xFAC89A6,
	};

	uint32_t necktieFemale[] = {
			0xCED1DE45,
			0xD08C5AAF,
			0xD1F21AC0,
			0xD432A47,
			0xD539214E,
			0xDB262F6E,
			0xDF5D7F5C,
			0xE245FE22,
			0xE60889BE,
			0xE75EC599,
			0xE8480A26,
			0xE92492EA,
			0xF89CE815,
			0xF9B93413,
			0xFB8084E6,
			0xFBD57605,
			0xFC7D721C,
			0x158B6BB7,
			0x16966AD9,
			0x17CB27B3,
			0x18C92FEC,
			0x222642A6,
			0x2549416D,
			0x2674895D,
			0x29153448,
			0x292EC858,
			0x2E96EB12,
			0x2F5A1C60,
			0x317771A7,
			0x321D9DD0,
			0x3782E5E0,
			0x39AB72E8,
			0x3A1231D0,
			0x40B7CF9D,
			0x45A89939,
			0x46EC86FD,
			0x4849CE43,
			0x4D3998CC,
			0x4EA16B70,
			0x5274E299,
			0x5357F0B8,
			0x55A4796E,
			0x581EA961,
			0x5938981,
			0x5AFD769E,
			0x5CC687BA,
			0x5ED5F740,
			0x5EED3C33,
			0x5F15FBD7,
			0x5F91F5B8,
			0x61D25274,
			0x646A0268,
			0x68E3DFAF,
			0x699F5197,
			0x69BF912E,
			0x69FD2227,
			0x6E885650,
			0x740FF6EF,
			0x75532A29,
			0x7676C77A,
			0x76B0A6F5,
			0x77DA7D9C,
			0x797DC128,
			0x7A23022D,
			0x7B79F54C,
			0x7EC8B729,
			0x864B0AF6,
			0x86581B7F,
			0x88BA884E,
			0x8933A04A,
			0x8B94104B,
			0x9498B800,
			0x9693EDCA,
			0x9712F02E,
			0x98DDC08A,
			0x9AFD2CD3,
			0x9DD9B4D6,
			0x9F2ACC38,
			0x9FC0F915,
			0x9FFD009C,
			0xA8451EBA,
			0xAAE56499,
			0xADB96955,
			0xB268DDF4,
			0xB393E04A,
			0xB548B8C1,
			0xBCDE3A5E,
			0xBE2D7333,
			0xBFD78E61,
			0xC0F55CB,
			0xC31AD465,
			0xC9768DB7,
			0xCD8E29CE,
	};

	uint32_t legsMale[] = {
		0x15ACBB1D,
		0x27F95FB6,
		0x35D1FB67,
		0x364F2807,
		0x47FE9FC0,
		0x52CC3F25,
		0x5B835093,
		0x64F9856B,
		0x6577142C,
		0x6CBCE93C,
		0x73710076,
		0x84BAA309,
		0x887C4C70,
		0x8AD16414,
		0x97596A2A,
		0x9EE7070B,
		0xA615E02,
		0xACAE409,
		0xB0F62B29,
		0xB897BFA0,
		0xC17616E,
		0xD3A7708B,
		0xD7F34979,
		0xDDF48A5D,
		0xE4B584D5,
		0xEA27EDE2,
		0xEF9D2DAE,
		0xF11CF1FA,
		0xF2EA7BDE,
		0xF5E0272A,
		0xF91940A6,
	};

	uint32_t legsFemale[] = {
			0x11A244CC,
			0x1684BC22,
			0x18916A9B,
			0x24CF58B7,
			0x27B700C2,
			0x31BE7295,
			0x3B653032,
			0x3DBEB4BD,
			0x3E152D7E,
			0x41021120,
			0x4BA188D,
			0x4D38CBC5,
			0x619ADB8E,
			0x71821457,
			0x98975DF3,
			0x9D6CD26,
			0xA0736DA7,
			0xA162C86,
			0xA29CE6D7,
			0xA65CF97E,
			0xAA25ECA7,
			0xAAD70276,
			0xC3BFA017,
			0xC9903FE8,
			0xCC543A45,
			0xCEAB4EC0,
			0xDBE4E491,
			0xDC1AD9D2,
			0xE74007F9,
			0xEDE17D5F,
			0xF0CD92EC,
			0xF3E1001C,
			0xF4F5A364,
			0xF6877C28,
			0xF9609455,
	};

	uint32_t legAccessoriesMale[] = {
		0x1D2911AF,
		0x3A514BFF,
		0x489AE892,
		0x67032566,
		0x926DFC3B,
		0xE83BA7D5,
	};

	uint32_t legAccessoriesFemale[] = {
			0x402D4AB2,
			0x4F6BE92F,
			0x687F1B55,
			0x79A1BD9A,
			0x7D3844C7,
			0xC3CA51DE,
	};

	uint32_t loadoutsMale[] = {
		0x14898202,
		0x153FA04A,
		0x180A1CA2,
		0x1C5402E2,
		0x22A531D8,
		0x2CE111E7,
		0x2F8ECFD0,
		0x2FE1B8B2,
		0x350A1707,
		0x3A04E4BC,
		0x474CFB27,
		0x4AF2869B,
		0x509016EE,
		0x5904DEFC,
		0x5AC08E6F,
		0x5DDE318A,
		0x61C37BDF,
		0x653FBB35,
		0x66BA7A67,
		0x68DB2AA4,
		0x6C298551,
		0x77334754,
		0x77DA27D8,
		0x78E04E7,
		0x7F508C09,
		0x82BE7B4A,
		0x8576E3DB,
		0x89454AAE,
		0x93FC9491,
		0x9B2DEE7F,
		0x9BD74516,
		0xA99AE09D,
		0xAD624B0D,
		0xB8475D26,
		0xC1BE7014,
		0xC33576B3,
		0xD867A583,
		0xD8D95EA7,
		0xE51CD7A0,
		0xF2DE7323,
		0xF40AA06F,
		0xFD9CCA7,
		0xFFBC0CE2,
	};

	uint32_t loadoutsFemale[] = {
			0x15BB0736,
			0x16A55097,
			0x1972B84C,
			0x210A464B,
			0x229143B7,
			0x22B5153,
			0x27A0D4A8,
			0x27FC62F6,
			0x284D2C5A,
			0x2875F438,
			0x34173652,
			0x35AA70BB,
			0x37669D5,
			0x39BCD669,
			0x3B061950,
			0x4260D2E5,
			0x44579BAC,
			0x44D0E561,
			0x4D57BDF3,
			0x5022C389,
			0x5AFC91B8,
			0x5FF752EB,
			0x606C463E,
			0x61C966D6,
			0x63D1C63F,
			0x63EAFCA,
			0x6E9FE2A5,
			0x70A2BD04,
			0x70A5F448,
			0x720B62B2,
			0x73ECFAEC,
			0x798705D2,
			0x7E548FA9,
			0x85ED2F1D,
			0x867A8B90,
			0x8ABDE39E,
			0x8BD902D4,
			0x9824430C,
			0x9A583A19,
			0xAA6EE7A1,
			0xABBBD612,
			0xADA63706,
			0xB70350F0,
			0xB7463CB2,
			0xBB1974CD,
			0xBC965B7,
			0xC461DF3,
			0xC4870E76,
			0xC660DAE7,
			0xCBF9F817,
			0xCC230CE8,
			0xD06F9F79,
			0xD59C3AD7,
			0xD60B8F00,
			0xDC319B84,
			0xDF679A88,
			0xE007F21,
			0xE1ABE6A5,
			0xE1D791D4,
			0xE89EB45E,
			0xEE7D38B3,
			0xEED46310,
			0xEFBE429D,
			0xF02399D,
			0xF16745B7,
			0xF235328F,
			0xF5C9D4E,
			0xF8CA702A,
			0xF9B28663,
			0xFC1D53F3,
			0xFD5248C9,
	};

	uint32_t suspendersMale[] = {
		0x129DD6FD,
		0x14FB5BC0,
		0x1A36F21A,
		0x1B7E5AA5,
		0x1CB2B388,
		0x1DE0ED83,
		0x1EB8E2E0,
		0x1FBEDA10,
		0x205FE63A,
		0x20CD640F,
		0x2251766C,
		0x24C38733,
		0x27A3F8,
		0x2BB98934,
		0x2E352D0E,
		0x309112EB,
		0x380A40B8,
		0x3973A4A8,
		0x3BDE2985,
		0x424EC249,
		0x429BB5D8,
		0x443628A4,
		0x518B36D2,
		0x51C8C0C,
		0x5492E6D1,
		0x54B97A16,
		0x630B58B2,
		0x66D91E55,
		0x67FEF56B,
		0x6BCD1545,
		0x6E11FFBB,
		0x726D8872,
		0x73220BA9,
		0x774ABF38,
		0x78C22F2F,
		0x7E4C22DD,
		0x8115D2CE,
		0x827E86D2,
		0x840A31E,
		0x85A61DCF,
		0x8EE74165,
		0x90D5237F,
		0x91C07423,
		0x9357B932,
		0x94DCFB84,
		0x9A15F1D6,
		0x9C2008E2,
		0xA128D4D4,
		0xA4495F3E,
		0xA4AF6CF5,
		0xABB8A81F,
		0xAEE37049,
		0xB2A1670B,
		0xB78C20E7,
		0xBB931CA2,
		0xBDAD7D2F,
		0xBF44221E,
		0xBF63008E,
		0xCC331A3A,
		0xD204B6A7,
		0xD4624C6E,
		0xD854D625,
		0xDB56B881,
		0xDE7E4F9A,
		0xE23D9F4,
		0xE6D47324,
		0xEBBBEA15,
		0xEEA902CD,
		0xF1DC0761,
		0xF4198DA2,
		0xF6F2EFB9,
		0xF999B0E0,
	};

	uint32_t suspendersFemale[] = {
			0x18C9A744,
			0x20C7CD2D,
			0x26780573,
			0x268BD789,
			0x2B3C7DAF,
			0x2EECE84B,
			0x2F585461,
			0x3B276BFF,
			0x3BE8AEF6,
			0x3EF4EDEA,
			0x40193118,
			0x4A11BB59,
			0x51D4995D,
			0x56EC6409,
			0x57744D61,
			0x57BBD6AD,
			0x581C0C1E,
			0x59722868,
			0x5D9B45A7,
			0x5E37B223,
			0x62407BDD,
			0x6E64154A,
			0x72A79C77,
			0x7EE7DBC1,
			0x7FA5267B,
			0x82C27B38,
			0x883B48F8,
			0x8DB6C29E,
			0x9740DBC6,
			0x9E267374,
			0xA872896A,
			0xB3D69549,
			0xB3F2952D,
			0xBA581BE8,
			0xBAB12DE7,
			0xBBC9AEBA,
			0xC33110D5,
			0xC6863444,
			0xC777C774,
			0xC915BF73,
			0xCA1C4B5F,
			0xCA5B9F26,
			0xCC540C1,
			0xCD91D3A4,
			0xCE38F78,
			0xD4AFB3CE,
			0xD605D423,
			0xD77B5C92,
			0xD84D67C1,
			0xDDC03132,
			0xDF5C7739,
			0xE102FA8A,
			0xE23071FC,
			0xE41C6F70,
			0xE4B076A8,
			0xEA1C8180,
			0xF0851868,
			0xF9237CB5,
			0xFA987FA3,
			0xFF0C70,
			0xFF62AC0C,
			0xFFAD753,
	};

	uint32_t satchelMale[] = {
		0x7D84EFD5,
		0xEA272E11,
		0xEE49F9B6,
	};

	uint32_t satchelFemale[] = {
			0x42247599,
			0x7E2D016B,
			0xFCAF241B,
	};

	uint32_t teethMale[] = {
		0x17FCEDAE,
		0x2A7712A2,
		0x3C87B6C3,
		0x60949C7,
		0x61227FF8,
		0xE11FFFF5,
		0xE1A380FC,
	};

	uint32_t teethFemale[] = {
			0x20CC5B30,
			0x322BFDEF,
			0x39340BFF,
			0x4AD5AF42,
			0x54A6C2E4,
			0x66716679,
			0xF57D0492,
	};

	uint32_t gunbeltMale[] = {
		0x10CD7D44,
		0x1371FF7F,
		0x153557,
		0x15AF5CC4,
		0x1BD4BEC7,
		0x1C04C393,
		0x1CE0C5ED,
		0x1F9ED1AA,
		0x23396D4,
		0x2733DA19,
		0x29875F42,
		0x2DF2E811,
		0x2E7B7D68,
		0x2F6BC2EB,
		0x2FDA7221,
		0x319BEEC1,
		0x37F6222,
		0x3D55DEC7,
		0x3DF1A52,
		0x412B86A,
		0x450C9136,
		0x450CB6,
		0x5234B892,
		0x5261D9F3,
		0x56DC1321,
		0x5DD9EBFB,
		0x620C1BC5,
		0x6294CC46,
		0x63AD3DB2,
		0x6B0B2E9C,
		0x6DD75206,
		0x7452412A,
		0x74B72AB,
		0x74C744B0,
		0x82A4E06B,
		0x836A9D04,
		0x873600C6,
		0x8AB42537,
		0x8F44A5A9,
		0x900B273,
		0x91353899,
		0x9836E1D1,
		0x9EEE506E,
		0xA227DA7E,
		0xA577C701,
		0xA840579C,
		0xA995DF5D,
		0xAA743093,
		0xACB0BEB,
		0xACE2545,
		0xAD8D6AC1,
		0xADA9F182,
		0xAE790E55,
		0xB655F3C7,
		0xBDF56E40,
		0xBE9655B1,
		0xC25608B5,
		0xC6A8C27F,
		0xC6DD37,
		0xC75AB58,
		0xCED89006,
		0xCFC0B08F,
		0xD1BF3328,
		0xD2ECF8A,
		0xD6404CF3,
		0xD7CBBBC8,
		0xD88B43A7,
		0xD8AA6682,
		0xDA8A1929,
		0xDF0B99C1,
		0xDF5281E,
		0xE06DF121,
		0xE0BD4DAB,
		0xE12A34A9,
		0xE2391F96,
		0xE2E4F72C,
		0xE8015FAC,
		0xED1D6CCB,
		0xED859038,
		0xEEBDD3CD,
		0xF496F8D7,
		0xF49C0FCC,
		0xF7391EB7,
		0xFBC617FE,
		0xFC4604C0,
		0xFD7B86A9,
	};

	uint32_t gunbeltFemale[] = {
			0x100A188C,
			0x100FA02B,
			0x12D50473,
			0x15D4A0C5,
			0x17B87F05,
			0x18FEAD3B,
			0x1ACDAE0F,
			0x1CD5613E,
			0x1EC38CCC,
			0x20A31050,
			0x21DDD4C2,
			0x225944BE,
			0x266B2B9F,
			0x293B4AEA,
			0x293DBFA2,
			0x2A845046,
			0x2BCFA737,
			0x3185725C,
			0x3A1443C0,
			0x3B774633,
			0x3F4F3CC,
			0x449B5878,
			0x46E3478E,
			0x49418AFA,
			0x4953A6CA,
			0x4D11E92D,
			0x4D2686CA,
			0x4F5A6E4C,
			0x57E1FF05,
			0x58E8391,
			0x5A1712FE,
			0x5C788179,
			0x5DC78A98,
			0x5E6DB552,
			0x668FC85C,
			0x6C9851A7,
			0x71AE3810,
			0x7758E724,
			0x7C0E7827,
			0x7CA71B8C,
			0x80D0C002,
			0x81C97C09,
			0x89569C23,
			0x8AE2B803,
			0x8CF778BE,
			0x8EC41D92,
			0x9933ABA,
			0x9C922508,
			0xA0E0F5A,
			0xA53492F0,
			0xA6298538,
			0xA716A2E4,
			0xA8283D75,
			0xA88AE21A,
			0xAACC2A4B,
			0xACAB68A6,
			0xB0F11B57,
			0xB2DE8D5A,
			0xB6EB365D,
			0xB90BABF1,
			0xBAC48691,
			0xBCA908A1,
			0xC09C28D5,
			0xCC6D55EE,
			0xCC7D2841,
			0xCE6EAC2C,
			0xD0C27637,
			0xD1C36C0D,
			0xD1E5415,
			0xD2764721,
			0xD8197F82,
			0xD907C15E,
			0xD9EE7744,
			0xDEBECCC4,
			0xDF574FB6,
			0xDFC9B76A,
			0xE09EB59,
			0xE13AE4AA,
			0xE1D392F6,
			0xE2E9081,
			0xE31F1584,
			0xE89FE086,
			0xEA7E4224,
			0xEE2FC842,
			0xF19A9D0E,
			0xF3E6DCB,
			0xF5C0FAD0,
			0xFADC8503,
			0xFBE1E4EB,
			0xFD0BC966,
	};

	uint32_t beltMale[] = {
		0x102F20E6,
		0x131D437B,
		0x18CA4088,
		0x19D8A81,
		0x1D8F49A6,
		0x2063DB53,
		0x2330E0ED,
		0x277A5E96,
		0x28FBEC8B,
		0x295A6FF5,
		0x2AA0E435,
		0x2AD73F47,
		0x34A718CD,
		0x3534FA0B,
		0x359554C3,
		0x3D771836,
		0x3F49FF1B,
		0x41DB20FE,
		0x465FBC3E,
		0x4904128F,
		0x4AC984D,
		0x4ACC9CDE,
		0x4AFD259B,
		0x4B4A68D3,
		0x513BD1F6,
		0x515EBD62,
		0x52808E9D,
		0x547FB044,
		0x58A6C0EE,
		0x5C32A201,
		0x5DDECEF2,
		0x62ED7559,
		0x67EE5721,
		0x738A0258,
		0x748171,
		0x7B529F6,
		0x7DB2AADF,
		0x816D512E,
		0x83BC9AB5,
		0x85D1A6E7,
		0x8D06AD45,
		0x8DB52B0E,
		0x8F814E7C,
		0x9261B7FF,
		0x9698406C,
		0x981FCB83,
		0x9F59C5F7,
		0xA9FE6F40,
		0xB4D27CE0,
		0xB6FCD794,
		0xB8E3F90B,
		0xBAD190E6,
		0xC0C7EB2A,
		0xC21512AF,
		0xC58F3B8,
		0xC9C76891,
		0xCB1596B4,
		0xCC933469,
		0xD8A73FD3,
		0xD8C0B763,
		0xDA310F65,
		0xE456C936,
		0xE695DBB0,
		0xE873ABEA,
		0xE8BAAC7C,
		0xE8D4E02E,
		0xF193F306,
		0xF68F8A60,
		0xF84D0B2E,
		0xF8EF8C6B,
		0xFAC792D4,
	};

	uint32_t beltFemale[] = {
			0x5F71A412,
			0x64264EE8,
			0x67053459,
			0x6759A8F7,
			0x69194F45,
			0x6A5C0FBF,
			0x70EFF064,
			0x717C9DAA,
			0x71B149B1,
			0x72B2EC01,
			0x7420395A,
			0x7805AB12,
			0x786F33A1,
			0x78BB860D,
			0x78E942EC,
			0x7F805944,
			0x80DF4481,
			0x836EED2C,
			0x83D6EF57,
			0x84FF384D,
			0x888D1FA2,
			0x8A96E647,
			0x8CD573EE,
			0x9297B9C5,
			0x92A5680D,
			0x9663BB4F,
			0x970BDC66,
			0x97121FF4,
			0x97672BE0,
			0x9A81C27F,
			0x9B6C8C3E,
			0x9C2BC6DF,
			0x9D504F36,
			0xA183F156,
			0xA4D7BB7F,
			0xA9AB6B28,
			0xAB672C33,
			0xAC71ED79,
			0xADD31E68,
			0xAF9221E6,
			0xB39B9581,
			0xB39D590A,
			0xB9884ECF,
			0xBA97CF72,
			0xBDE8AA1B,
			0xBE510340,
			0xBE6B6460,
			0xBFD3143B,
			0xC05A7284,
			0xC460E442,
			0xC611E188,
			0xC6B2F3B3,
			0xC6B5C871,
			0xC9EAD697,
			0xCDDD8D8A,
			0xCF76B38E,
			0xD0574EF8,
			0xD2DA2C52,
			0xD92E98A6,
			0xD9CB30A3,
			0xDA5B6300,
			0xDB9D2909,
			0xDBACFA1B,
			0xDDD59113,
			0xE05025A,
			0xE2949F6B,
			0xE455DD40,
			0xE57947FF,
			0xE936E0F8,
			0xE97744BD,
			0xECD707F7,
			0xEEAA32BC,
			0xF2AAA81A,
			0xF7026B11,
			0xF731E032,
			0x103F75E6,
			0x1287221A,
			0x154E77B8,
			0x19E84256,
			0x1A289E2,
			0x20106F59,
			0x20CBA7E7,
			0x214BD73B,
			0x2261948E,
			0x261A0DB4,
			0x299459C5,
			0x29B1E1E9,
			0x2E4B59AA,
			0x2F6E6579,
			0x2FEA3A21,
			0x30765097,
			0x30F71CF2,
			0x39784D3D,
			0x3F57F07D,
			0x3F6C0D5D,
			0x420F12,
			0x430D66D0,
			0x433A60C1,
			0x49B3783,
			0x49E910E5,
			0x4A305724,
			0x4A79FB43,
			0x4B5C2B53,
			0x4F41251E,
			0x5733E318,
			0x58729734,
			0x5B82B418,
			0x5E0B965B,
	};

	uint32_t beltBuckleMale[] = {
		0x10443A0F,
		0x139FCC19,
		0x14DCF24E,
		0x16BBC668,
		0x16E62CC9,
		0x17B4FFBC,
		0x18DB3EB3,
		0x18F5C8D7,
		0x19E1847B,
		0x1B301155,
		0x1D958866,
		0x1E07AEEB,
		0x2087F4FB,
		0x24914BD1,
		0x24936C3E,
		0x25409ADF,
		0x28C906B9,
		0x2CB79FF4,
		0x2DD986CC,
		0x30186D1D,
		0x30499162,
		0x316AB24E,
		0x326F7BD5,
		0x330B9DD3,
		0x3358AD46,
		0x3455E4E3,
		0x353C3AD6,
		0x360E88AC,
		0x37BA4228,
		0x3957C220,
		0x3A7A3B79,
		0x3AC6C223,
		0x3B9A6C0E,
		0x3D2CD88E,
		0x3FB1B271,
		0x405C184D,
		0x41AD6860,
		0x41C852FF,
		0x432B0BE0,
		0x4363853F,
		0x44380D26,
		0x458AEE97,
		0x461EEE19,
		0x463678FA,
		0x48467EC9,
		0x49031222,
		0x4B046666,
		0x4D765D54,
		0x4DE76965,
		0x4EB4E9AF,
		0x5027DE3A,
		0x506570F0,
		0x5165EB0B,
		0x51B05675,
		0x53E370A0,
		0x5453DA31,
		0x563A5CD5,
		0x57FBF49B,
		0x580AB728,
		0x5891017F,
		0x5894AC28,
		0x5BA4FBBB,
		0x5E094D54,
		0x5E4D9CBB,
		0x5FAC704B,
		0x5FE96AD9,
		0x6287CF9,
		0x63B38DEB,
		0x64A19AAC,
		0x64D1912B,
		0x650A86E,
		0x6C5B97D6,
		0x6CBFD272,
		0x6CFAC5AB,
		0x6E882D6D,
		0x70F20F7B,
		0x7265FD93,
		0x7367537E,
		0x76FE363B,
		0x7E1A4269,
		0x8074B0D2,
		0x880DD69F,
		0x89871849,
		0x8CF7DA2,
		0x8E758C1E,
		0x9212A72,
		0x92891883,
		0x9558EBEB,
		0x95C77212,
		0x9711F75C,
		0x97B40D6B,
		0x9845E1F6,
		0x99AEAFF,
		0x9DB72A0F,
		0x9DE3B111,
		0x9ECC5DFD,
		0x9EE0C177,
		0x9F724211,
		0xA0649C75,
		0xA1EAC228,
		0xA4369567,
		0xA47988D8,
		0xA5483707,
		0xA5783AB1,
		0xA596F36E,
		0xA59AFA8D,
		0xA7F31A2D,
		0xA80CCD06,
		0xA9786A88,
		0xA9C17D84,
		0xA9E228BA,
		0xAA678E23,
		0xAB518817,
		0xAB7E20D7,
		0xAD4EF0F7,
		0xAFBA657,
		0xB02D9972,
		0xB28BD40A,
		0xB33DEFC,
		0xB53482BF,
		0xB7948388,
		0xB816CE15,
		0xB852563F,
		0xB87690D5,
		0xBAD5E8E5,
		0xBB7F9FF1,
		0xBBAFC746,
		0xBBCBFE8,
		0xBBEF7111,
		0xBC52E7D8,
		0xBC8B43F9,
		0xBFAFCF08,
		0xC0EE069D,
		0xC1C449CC,
		0xC355C4E7,
		0xC36593C9,
		0xC4269D77,
		0xC4670223,
		0xC599CF08,
		0xC667600E,
		0xC9B1BB9F,
		0xC9EE847B,
		0xC9F8E43D,
		0xC9FD59CC,
		0xCA269B17,
		0xCCBA34BA,
		0xCCFE607F,
		0xD0B13749,
		0xD41ECCC6,
		0xDAB72450,
		0xDBE67772,
		0xDC0A4D1E,
		0xDD0F00F4,
		0xDDFA0489,
		0xDF2C68CB,
		0xE1596BF,
		0xE1EFB76B,
		0xE37CA384,
		0xE53DCE12,
		0xE598ABB0,
		0xE60C5916,
		0xE780E835,
		0xE82BEAF8,
		0xE8561CB4,
		0xE9745E17,
		0xEF00E29A,
		0xF1DF3F9C,
		0xF1FF1CFE,
		0xF5111039,
		0xF52F775C,
		0xF99B34CF,
		0xFA0C22EC,
		0xFBD93004,
		0xFE7D89E8,
		0xFF4F42F5,
	};

	uint32_t beltBuckleFemale[] = {
			0x1133A823,
			0x124F10EC,
			0x1447205B,
			0x18AB44CC,
			0x192B0287,
			0x1C736119,
			0x1CE1D203,
			0x1D43574,
			0x1E09C6CC,
			0x238B114E,
			0x247C6E80,
			0x24FA98B4,
			0x270442E4,
			0x271AC864,
			0x285CFC11,
			0x29BBD9A9,
			0x2A768BBF,
			0x2AAC7E07,
			0x2C102FB2,
			0x2E72099,
			0x2F5F76FE,
			0x320FB40F,
			0x322569C2,
			0x3377D815,
			0x36D04011,
			0x37D993E,
			0x38AB7EA6,
			0x39F6A373,
			0x3C4A4108,
			0x3C6C1AD9,
			0x3CE3FD4B,
			0x3F9D2C23,
			0x41971B6D,
			0x42442575,
			0x439E1D0D,
			0x43F01DD6,
			0x4592F159,
			0x465177F6,
			0x46791E8,
			0x46D7381C,
			0x47794DA0,
			0x4839939E,
			0x48E34391,
			0x4A5C672E,
			0x4C80CB7D,
			0x4C9ACEC6,
			0x4D06F865,
			0x4DD258F8,
			0x4E4130A7,
			0x532AD33E,
			0x5354AC98,
			0x5360AC07,
			0x53D91C61,
			0x53D9BFF2,
			0x54558EE2,
			0x5ADADA95,
			0x5C525539,
			0x5E8CD55A,
			0x5F66FA17,
			0x61E470B1,
			0x620B2A4D,
			0x63D915DD,
			0x63E79356,
			0x64926B3C,
			0x65C8F8AF,
			0x6618E470,
			0x669EF29,
			0x66A1C0DD,
			0x67270024,
			0x6745BD2D,
			0x681BE0D,
			0x697AE58F,
			0x6A743CAB,
			0x6E044D29,
			0x6E7CCEF2,
			0x70237495,
			0x7083473D,
			0x71C11DC9,
			0x71D3B94E,
			0x7383DDCE,
			0x73BFEE5A,
			0x744AC084,
			0x74E9392,
			0x7685B653,
			0x785E88FB,
			0x7DEC9A94,
			0x7E8FE356,
			0x7EA2C613,
			0x7FE8B2EA,
			0x80264EA9,
			0x80B791ED,
			0x82B0EE44,
			0x8419942F,
			0x8593CB12,
			0x871764C3,
			0x87489966,
			0x884CD09F,
			0x8D8454B8,
			0x8E196FD4,
			0x8F289D97,
			0x8FB3908B,
			0x8FC6C98C,
			0x90E2A999,
			0x91A858D2,
			0x91C60625,
			0x93C85F18,
			0x9422709B,
			0x958EA1C2,
			0x95DF5D94,
			0x9843C7BB,
			0x985E50C4,
			0x98E6F552,
			0x9A114675,
			0x9A961DE0,
			0x9C279DA9,
			0x9C3F6CCC,
			0x9E59CC88,
			0x9ED6C762,
			0xA00EC847,
			0xA2C0B3FF,
			0xA30373DF,
			0xA4D1FB79,
			0xA4E88EF4,
			0xA7C4F60C,
			0xA8691739,
			0xA9537F0F,
			0xA9BCB9A7,
			0xAA0A7B13,
			0xAA3AD87,
			0xAA6BAFA0,
			0xAA738A50,
			0xAF4DF6D9,
			0xB059E0E8,
			0xB0EA569A,
			0xB16714A3,
			0xB22E80EF,
			0xB2A5E0F6,
			0xB3123850,
			0xB404E0EC,
			0xB60AC627,
			0xB6D024CB,
			0xB6DDD124,
			0xB70CB8FB,
			0xB796B465,
			0xB8CEDAE7,
			0xBA5B63F9,
			0xBBE1E85A,
			0xBC1D49C9,
			0xBD077827,
			0xBDC21AA,
			0xBDF04B6F,
			0xBEF564BF,
			0xBF631C1,
			0xBFC7862C,
			0xC3780D43,
			0xC7315973,
			0xC983BDBD,
			0xCEE6931E,
			0xD1A29F17,
			0xD36A93AC,
			0xD39D3BD7,
			0xD41C3CE3,
			0xD483AC43,
			0xD4900F4D,
			0xD5652B47,
			0xD6536CE5,
			0xDD6292BC,
			0xDD6CF93B,
			0xE0D49C43,
			0xE2E7ABFC,
			0xE56B7C9F,
			0xE619646F,
			0xE6340F43,
			0xE70266D4,
			0xE812CCDF,
			0xE9374F9A,
			0xEA896B1A,
			0xEB06C73F,
			0xEFAA67C,
			0xF014C656,
			0xF1341193,
			0xF237D4C8,
			0xF2DD027,
			0xF38618D8,
			0xF736EFD2,
			0xF82C1AF9,
			0xF9C8AF65,
			0xFA4E1BFD,
			0xFB2B2EBD,
			0xFB32127E,
			0xFD4B3D92,
	};

	uint32_t torsoMale[] = {
		0x16E292A1,
		0x206061DB,
		0x34C3B131,
		0x3825D527,
		0x3B6F503,
		0x465F719A,
		0x4824ED39,
		0x4AEEDD87,
		0x4BD8F4A1,
		0x5A929214,
		0x5C1686B,
		0x5EA984F8,
		0x62FA3A88,
		0x69B6305B,
		0x6BB6BC48,
		0x6D582255,
		0x752C4F33,
		0x7704E29D,
		0x82F14D87,
		0x8C9686C8,
		0x8CC97681,
		0x99E82863,
		0xB0D24F3F,
		0xB4485D23,
		0xBA09D8ED,
		0xBA59624D,
		0xBF787383,
		0xC8EA5978,
		0xCD7F8895,
		0xDF522C3A,
		0xF6496128,
	};

	uint32_t torsoFemale[] = {
			0x1B088705,
			0x2BE27CC4,
			0x2C4FE0C5,
			0x35A7C9FB,
			0x3708268F,
			0x489AFE52,
			0x4BAD90BA,
			0x56617DB6,
			0x58D8EA30,
			0x5B4E1547,
			0x6152BC04,
			0x64181923,
			0x6C25B6F6,
			0x7145337D,
			0x79D35251,
			0x8002D0F8,
			0x80DB09DE,
			0x8223BCC5,
			0x87363366,
			0x8DCF7A49,
			0x928DAD43,
			0x93925FA2,
			0x94778799,
			0x98FEAB5B,
			0xA1AEFBDB,
			0xB1D3B3A,
			0xB2850A03,
			0xBEB8F6CF,
			0xC05A25AD,
			0xC1CF0BC1,
			0xD0C5A9AE,
			0xD878696D,
			0xDC86C81,
			0xE28C4D3B,
			0xE36416C,
	};

	uint32_t offhandHolsterMale[] = {
		0x10285C2F,
		0x1105E694,
		0x1184AC1D,
		0x1C55CDC2,
		0x1DB9FEE8,
		0x25FD15CA,
		0x2E15B9B7,
		0x2E39B36,
		0x3063DB68,
		0x31E43B9C,
		0x331AE0D6,
		0x356AF3E9,
		0x36BB8305,
		0x3A08F9BC,
		0x3E9E41E8,
		0x3F75051C,
		0x3FF3BEE2,
		0x430DCE15,
		0x45B0A0EF,
		0x4D0B5EAE,
		0x52C86D8A,
		0x58557542,
		0x5F1707FD,
		0x6283DA19,
		0x671CD014,
		0x6BF75E20,
		0x6D0954D2,
		0x6FE7950E,
		0x7553D5ED,
		0x7707EFEA,
		0x790449DB,
		0x7C5CF379,
		0x82A9BA92,
		0x835E9C4A,
		0x83A1891D,
		0x85B79905,
		0x895F5C8D,
		0x8AC0ED54,
		0x8C78C30,
		0x8F24B3D6,
		0x9153A481,
		0x927CB28F,
		0x9718F800,
		0x975EC44A,
		0x9C3F11C,
		0x9EE2165E,
		0xA1D67F7D,
		0xA2C40A12,
		0xA5A89513,
		0xA78AAB68,
		0xB57AAF7F,
		0xB5D5C7FE,
		0xB71D7BD0,
		0xB9494B2C,
		0xBE6D38BA,
		0xBE8882BD,
		0xC725975C,
		0xC7FFEC52,
		0xC971ED9,
		0xCAA7A5E3,
		0xCC55A640,
		0xCD5823C1,
		0xCF25BFD6,
		0xD03A2620,
		0xD3E26FBC,
		0xD4C9DEC5,
		0xD704E33B,
		0xDB00F1E1,
		0xDC0A15A9,
		0xDF0387D4,
		0xE07C3B9A,
		0xE0EAD765,
		0xE459A084,
		0xE47090DC,
		0xE9A75CD,
		0xE9CD9824,
		0xEB0ADC25,
		0xEDF8B84F,
		0xF94D78AA,
		0xFC5BD150,
		0xFC803D89,
		0xFDDB90CE,
		0xFE584139,
		0xFF9EDCD2,
	};

	uint32_t offhandHolsterFemale[] = {
			0xF65AE4EA,
			0xF7D6B65D,
			0xFB018D95,
			0x15A5F1FB,
			0x1729430B,
			0x17589C16,
			0x194EEF2B,
			0x1B4BBF0C,
			0x1E93B55B,
			0x209F1B05,
			0x21863B44,
			0x284DE554,
			0x28BB59EB,
			0x2BC9A32,
			0x2BCB1423,
			0x2F79B8BA,
			0x305DD8F3,
			0x3106DA41,
			0x31F25877,
			0x329F6CF9,
			0x32F8BFB4,
			0x34A20748,
			0x354C7DCF,
			0x3D9E37C9,
			0x3EFCF91A,
			0x40AE6741,
			0x42DC3FF2,
			0x43167E60,
			0x4358A4B5,
			0x470F25AF,
			0x49F228A0,
			0x4A19853D,
			0x4DA81651,
			0x50D9290,
			0x52186ADF,
			0x5268C2D5,
			0x55A4C2DA,
			0x5900C6E0,
			0x5B759ECA,
			0x5C17AEF,
			0x5C44A993,
			0x5E35276,
			0x64406011,
			0x6747636D,
			0x688F4C5E,
			0x6A133C05,
			0x6E7E4E06,
			0x70E76E86,
			0x7236DF6E,
			0x76D0E8E1,
			0x7CFC722F,
			0x7DEC63B7,
			0x7FE17AC3,
			0x80488904,
			0x81398B4,
			0x824517BF,
			0x827B19B5,
			0x84236208,
			0x8838982E,
			0x8FFDB330,
			0x90875B47,
			0x93B4BC28,
			0x9EF6C5AA,
			0xA0435564,
			0xA3950152,
			0xA5B7DEA4,
			0xA981CE43,
			0xAE85F1E9,
			0xAFBC72AD,
			0xB07E686B,
			0xB6732CBB,
			0xB6F00BE2,
			0xB93885A9,
			0xBB590B6C,
			0xBEC98609,
			0xC21E003C,
			0xC3DCD42B,
			0xC4CB7A9B,
			0xC6F72126,
			0xC9C8FB6F,
			0xCD82AFBF,
			0xCE3A24EA,
			0xD2127096,
			0xD5DDA3F0,
			0xD64FE6C7,
			0xDB39688,
			0xDBECC04F,
			0xDCBD4CB2,
			0xDE1250DE,
			0xDFAA8BC6,
			0xE1FF808D,
			0xE4C2D141,
			0xE7864741,
			0xEA80E839,
			0xF28DED91,
			0xF4F3B658,
	};

	uint32_t coatsMale[] = {
		0x6999FE05,
		0x69A4BDDF,
		0x6DEF0340,
		0x6ED763B5,
		0x6F7A01E8,
		0x72F4D522,
		0x735679D7,
		0x7446E7C8,
		0x7455DD93,
		0x751454BE,
		0x7521AE42,
		0x7596B65E,
		0x75A612A6,
		0x767C6B03,
		0x7735583E,
		0x77432507,
		0x78268373,
		0x798C957B,
		0x799FB5B0,
		0x79C0D490,
		0x7A9D39E2,
		0x7E124755,
		0x7E504AF,
		0x7F7E43A4,
		0x7FAFCB69,
		0x800235F3,
		0x8028F297,
		0x819B781E,
		0x825331D9,
		0x82DEF053,
		0x83092906,
		0x8350E318,
		0x842DF567,
		0x858C6B03,
		0x862FEEA1,
		0x864CAEFB,
		0x8768B62B,
		0x8817C6B0,
		0x884E5D05,
		0x8C5DF9CA,
		0x8CAEF4A6,
		0x8D490018,
		0x8E32D5B0,
		0x8EA21C7E,
		0x8EDACAE8,
		0x904D6499,
		0x9101571C,
		0x911415FF,
		0x91ED6FE4,
		0x92050D66,
		0x92AD8F2E,
		0x92FBC0C3,
		0x95EBBEFD,
		0x96C72D22,
		0x982EF2CE,
		0x985BD819,
		0x98E18897,
		0x9AFE8206,
		0x9B2BECD8,
		0x9BE2710F,
		0x9C2F4B84,
		0x9C44DB7D,
		0x9D2D5CBC,
		0x9F17A3B5,
		0x9FCD9C11,
		0xA09A6E67,
		0xA0ECA2E7,
		0xA0F12BB5,
		0xA23F68B,
		0xA2BB7A90,
		0xA2D4A206,
		0xA310ED7B,
		0xA58C8463,
		0xA7FD850C,
		0xA8469534,
		0xA84CE50B,
		0xA9F96718,
		0xAA4E9FD9,
		0xAA997C94,
		0xABC91B90,
		0xACB57C5E,
		0xAD2453,
		0xAD41268B,
		0xAD4287C3,
		0xAEF049F7,
		0xB0932C5A,
		0xB0B2547,
		0xB0E14B95,
		0xB18805FA,
		0xB196B7B9,
		0xB220C9C7,
		0xB3842052,
		0xB557E592,
		0xB67B564E,
		0xB6FE5758,
		0xB81C3B74,
		0xBB27679D,
		0xBBABE466,
		0xBC56CF81,
		0xBCB69BCE,
		0xBD2A56CA,
		0xBE65AA09,
		0xBF3204B7,
		0xC0A0ED58,
		0xC27D27F9,
		0xC33E2966,
		0xC3ABD28B,
		0xC3F26D6A,
		0xC4598EBC,
		0xC4CC096E,
		0xC4D6F305,
		0xC53DF3D7,
		0xC545C3D5,
		0xC5D5D820,
		0xC70AF056,
		0xC7A051B4,
		0xC8B2208C,
		0xC8EB3F,
		0x100A0D1D,
		0xCA6B37C9,
		0x10818B9E,
		0xCA8FF195,
		0x1193B64F,
		0xCAB6E0A9,
		0x11C9B2BA,
		0xCB11E4F7,
		0x1279E999,
		0xCBC04553,
		0x15A6A032,
		0xCC565D53,
		0x16D8F2FF,
		0xCCE72CF3,
		0x179F6D87,
		0xCD5DD253,
		0x18C9C0C4,
		0xCE123E85,
		0x18FFB807,
		0xCE947A4,
		0x1A84E2DB,
		0xCFF07BD1,
		0x1AFCB535,
		0xD20C808E,
		0x1C38FAE4,
		0xD2242A51,
		0x1C6E3810,
		0xD2ABC7B8,
		0x1C701B23,
		0xD2FA7128,
		0x1D83DD6F,
		0xD5C058BE,
		0x1DE62579,
		0xD6A9894B,
		0x1E887224,
		0xD70372AD,
		0x1E8C190B,
		0xD869A49,
		0x1EB262EC,
		0xDAC5EED5,
		0x1F3C4D9B,
		0xDAFA6332,
		0x1FB51BD6,
		0xDBFEDAE7,
		0x2019797B,
		0xDDC82DEA,
		0x20698345,
		0xDDF22C2,
		0x20ED22EA,
		0xDF4A9568,
		0x2124AF52,
		0xE0FD61FA,
		0x2181F82B,
		0xE3EC0C7E,
		0x22087A9F,
		0xE5F95B1A,
		0x22997310,
		0xE687471,
		0x243F0DCB,
		0xE6F3AA5C,
		0x2498AA45,
		0xE83F39D9,
		0x2654237A,
		0xE8E42DC0,
		0x26A3702F,
		0xEA4DBF37,
		0x26FFF6A7,
		0xED2A9FAF,
		0x27B6D575,
		0xED987E1A,
		0x28AB5092,
		0xEDFE128B,
		0x292B8B8F,
		0xEE1E9151,
		0x2937230,
		0xEE89466D,
		0x298C899B,
		0xEEEA80CE,
		0x29E0C0CA,
		0xEF0E7141,
		0x2A331823,
		0xF0CD0F78,
		0x2B599AB3,
		0xF198BA04,
		0x2C57CD94,
		0xF3C31CAE,
		0x2C79E816,
		0xF3C9DAD,
		0x2C948E50,
		0xF58FC794,
		0x2CBA00CF,
		0xF654FBD1,
		0x2D25C77,
		0xF6FFB32,
		0x2D4BCF8C,
		0xF70AD7C3,
		0x2D5907E6,
		0xF7F13399,
		0x2D6D08AB,
		0xF80EBC95,
		0x2DA87E49,
		0xF8D853F4,
		0x2E8EBF60,
		0xFB70E03C,
		0x2ECFA8D1,
		0xFB7BBB73,
		0x2F00ED28,
		0xFC6E37E,
		0x30C8BD84,
		0xFC7B3E44,
		0x31EA2646,
		0xFE114013,
		0x320988E5,
		0xFE13AA05,
		0x3290C631,
		0xFEF3A04F,
		0x353631B,
		0x35E871D8,
		0x3694FC5A,
		0x36D74EC2,
		0x37D67131,
		0x3814BA8,
		0x3871635,
		0x3873DB82,
		0x390648DE,
		0x3A0CD00C,
		0x3A582B32,
		0x3AE504F0,
		0x3B066B01,
		0x3B57D2A6,
		0x3E3FE988,
		0x3EA4B110,
		0x3EAFAB30,
		0x3EE9D48B,
		0x3FA46537,
		0x3FE0A71C,
		0x40B490B9,
		0x420CCD57,
		0x42506F3B,
		0x42E24836,
		0x44330E6D,
		0x446E7232,
		0x44B451EF,
		0x44FEACED,
		0x4540EB91,
		0x45D3F49,
		0x466A8C10,
		0x46F251E4,
		0x478E78C9,
		0x483EB37A,
		0x485C9FED,
		0x486A3C25,
		0x49445EFF,
		0x4AC35AD3,
		0x4B1DF87E,
		0x4BC8B9F8,
		0x4C6674BF,
		0x4D997729,
		0x4D9E6089,
		0x4F988173,
		0x50D01688,
		0x5236119,
		0x5263AACE,
		0x53669163,
		0x53A75482,
		0x53B34A63,
		0x5537ECE1,
		0x55B2DA2A,
		0x55EE3B10,
		0x565B99C3,
		0x56FDFA72,
		0x57138F36,
		0x57CC2ED3,
		0x598BF717,
		0x5A17DB8A,
		0x5B8760C,
		0x5C4F6DC5,
		0x5E0EB105,
		0x5E125E48,
		0x5E211313,
		0x5F2074C2,
		0x5FE9047A,
		0x6002C24D,
		0x6091C72A,
		0x616E70AD,
		0x61DE25FE,
		0x6207080D,
		0x62171038,
		0x64F6CFE1,
		0x6517DD5A,
		0x6585EE08,
		0x6680A84A,
		0x6765113B,
		0x68958A76,
		0x69483F9C,
		0x69843CDC,
	};

	uint32_t coatsFemale[] = {
			0xC075BD2F,
			0xC0AE117E,
			0xC17A97E0,
			0x10D35669,
			0xC19A3878,
			0x11C534F5,
			0xC3524803,
			0x11F2D928,
			0xC4423462,
			0x11F694A8,
			0xC4523384,
			0x1202EE98,
			0xC4EC7188,
			0x1216662,
			0xC4F49B55,
			0x12655EF0,
			0xC5588A11,
			0x12B374D,
			0xC63C48BC,
			0x12C15FB8,
			0xC7C4ADDA,
			0x13B3E696,
			0xC808186F,
			0x13B6851A,
			0xC82A746D,
			0x13EC8F83,
			0xC84E0F8B,
			0x14893CB1,
			0xC8DC0DBE,
			0x160AE0F0,
			0xC94D673C,
			0x16425763,
			0xC9BD7DDD,
			0x169CD916,
			0xCA3825DC,
			0x175B3B8F,
			0xCE8E1BFF,
			0x177CC536,
			0xCEF66270,
			0x183887BF,
			0xCFBCDCAF,
			0x188B7EC,
			0xD18C6447,
			0x19350D38,
			0xD2E1B5E5,
			0x1AEB99F2,
			0xD3B9FC41,
			0x1B2B0AFE,
			0xD3EB0BF6,
			0x1B92D463,
			0xD42F554,
			0x1C42BDC3,
			0xD4D17E9B,
			0x1D85581A,
			0xD6BB5948,
			0x1E0250EA,
			0xD8C8DC6D,
			0x1F433A6B,
			0xDB7AE1D1,
			0x1F7DD066,
			0xDBAFA2E9,
			0x1F89F3D6,
			0xDC7F96AD,
			0x2023FA6D,
			0xDCF0EEBD,
			0x21312A0C,
			0xDD5EB9A0,
			0x233D3735,
			0xDD94D74C,
			0x237A4419,
			0xDE57450D,
			0x247FE521,
			0xDEF398B6,
			0x248DFE12,
			0xDF917D7,
			0x253E04B1,
			0xE1425064,
			0x2582BB98,
			0xE27990F2,
			0x25BE61B9,
			0xE2E6641D,
			0x25E14B37,
			0xE31B59D6,
			0x26004FCD,
			0xE38A1BB9,
			0x26C3120C,
			0xE3C60C13,
			0x26C355A8,
			0xE40FD841,
			0x27D67A8B,
			0xE5E2A973,
			0x27DA6CA1,
			0xE9F4711,
			0x288D065C,
			0xEB109047,
			0x2A03AED5,
			0xEB548286,
			0x2CDDAE63,
			0xEBEDE03A,
			0x2D372660,
			0xEC4BBE1,
			0x2FB93524,
			0xEE0B209D,
			0x304115C8,
			0xEF215D25,
			0x311D3739,
			0xF09E3C0B,
			0x32581090,
			0xF22AE177,
			0x3303A03C,
			0xF2CF1A95,
			0x33C84719,
			0xF34D9B76,
			0x3468C39F,
			0xF4B0355F,
			0x3487C5A7,
			0xF58B8804,
			0x353988C6,
			0xF64188A5,
			0x36306985,
			0xF78E7F3E,
			0x37455F1D,
			0xF7C606AD,
			0x375C4C65,
			0xF8D35D30,
			0x39097A34,
			0xF99C9E18,
			0x3916B6B3,
			0xF9CB2FD9,
			0x39495E43,
			0xFA315597,
			0x3BCC146C,
			0xFAF80C2D,
			0x3C5BF49C,
			0xFB2C511B,
			0x3CDEAE87,
			0xFB7D51C9,
			0x3D80B047,
			0xFC390D58,
			0x3DF55092,
			0xFCD233CA,
			0x3F0F9A40,
			0xFD052F4D,
			0x40CE722F,
			0xFD27262B,
			0x4295010E,
			0xFD8658BA,
			0x43489B76,
			0x44D19FE3,
			0x450967BF,
			0x4515F1D5,
			0x461A6702,
			0x468FEAC8,
			0x469686E5,
			0x46FB2C49,
			0x478DFACC,
			0x4815F446,
			0x495C239,
			0x498CCD4E,
			0x4A16B101,
			0x4B0911FA,
			0x4B3C4BBE,
			0x4C39F2C0,
			0x4DBA503E,
			0x4EE0FA59,
			0x4FF61D10,
			0x50DE3DDD,
			0x50E737DB,
			0x521C3A78,
			0x52C522AE,
			0x52DBADD8,
			0x532A16EA,
			0x53B43C4D,
			0x53C18B9D,
			0x54F0A5C5,
			0x560497BD,
			0x5655418F,
			0x56DF036F,
			0x575B423C,
			0x57FA8C8C,
			0x58EB8661,
			0x5A476EC3,
			0x5A6A9C7E,
			0x5B677B54,
			0x5BBD539B,
			0x5C46B475,
			0x5C4C2A8E,
			0x5D2C5098,
			0x5E13D8FB,
			0x5E18D27D,
			0x5F1EF307,
			0x620C1009,
			0x629293F,
			0x629889B6,
			0x62E2820A,
			0x63BE3330,
			0x64037B75,
			0x65A32F60,
			0x67A50B97,
			0x689F38E7,
			0x68F0A792,
			0x691D2ED1,
			0x69F82B3D,
			0x6C59F587,
			0x6C75D60F,
			0x6D82F726,
			0x6E93F367,
			0x6F916F4A,
			0x715C5E9C,
			0x715FD22E,
			0x719F9BD,
			0x7289B99D,
			0x72AF4757,
			0x736B9D80,
			0x740613E3,
			0x74977E13,
			0x749F8612,
			0x74EEB5CE,
			0x769E821E,
			0x76FFA1F8,
			0x779743D5,
			0x77CFB0CF,
			0x79A440F,
			0x79A8AF96,
			0x7A2FCA10,
			0x7AADCCA8,
			0x7BF63439,
			0x7BFCE88F,
			0x7C9CCD8A,
			0x7CD643F,
			0x7D3C2C21,
			0x7DAF83BF,
			0x7DBD6323,
			0x7E4AE849,
			0x7F18532A,
			0x7F37FB93,
			0x7F8ED4CF,
			0x7F91CB14,
			0x7FF85C83,
			0x815CE6D3,
			0x82A253A,
			0x82DE228F,
			0x834FC2EC,
			0x843AB44C,
			0x847C4B63,
			0x85EEE32A,
			0x85F06877,
			0x86E6388B,
			0x872D62E4,
			0x879E0C5F,
			0x879F246D,
			0x8852D52A,
			0x8960E768,
			0x8981B155,
			0x8995545A,
			0x899D26BF,
			0x89D5703D,
			0x8B4C660,
			0x8BD033C8,
			0x8C6E6E8D,
			0x8D1B4F77,
			0x8D85AB32,
			0x8DEB8C6C,
			0x8EEDCF84,
			0x91AAA245,
			0x91BF6F6F,
			0x91E0E521,
			0x92744FC1,
			0x934AAEF5,
			0x938A8AE,
			0x94EE066E,
			0x955466ED,
			0x98E22B7B,
			0x99A5A3E0,
			0x9A4052D2,
			0x9A42694D,
			0x9B5A38C,
			0x9B5BEBF8,
			0x9B8102F6,
			0x9C4079B0,
			0x9F184E57,
			0x9F47196,
			0xA001516B,
			0xA0A282A4,
			0xA0F04A40,
			0xA12F86E3,
			0xA180AAB1,
			0xA199EA7A,
			0xA1CF6F75,
			0xA1D85898,
			0xA28A9A0E,
			0xA3E846C0,
			0xA449D9F4,
			0xA5EBB594,
			0xA95290A4,
			0xA98BE478,
			0xA9C60868,
			0xA9E252A8,
			0xAC282BD2,
			0xAC2CF6AB,
			0xAD33A65B,
			0xAE131D55,
			0xAE8287E1,
			0xAE8558F1,
			0xAF523B36,
			0xB153B7A0,
			0xB16272EB,
			0xB593AC86,
			0xB5B67CD5,
			0xB5CFC041,
			0xB6176B1E,
			0xB649418B,
			0xB6506A38,
			0xB66BD0F0,
			0xB6D50BFB,
			0xB6DCD569,
			0xB79F241A,
			0xB7CC80FD,
			0xB80ACDC4,
			0xB841A57B,
			0xB870BD7A,
			0xB8C3F06B,
			0xB903EF2A,
			0xB9F3DF9A,
			0xBAD51E67,
			0xBDE2B992,
			0xBEBB3F9,
			0xBF0728EA,
	};

	uint32_t coatsMpMale[] = {
		0xEF678D3,
		0xF011039C,
		0xF766172B,
		0xF9917354,
		0xFCB4544F,
		0x105F0147,
		0x12E51663,
		0x1377C4A2,
		0x178CBCFD,
		0x1B164391,
		0x1B4ADEF4,
		0x1F79CDC8,
		0x22A8A5DA,
		0x29057A69,
		0x2ED185FD,
		0x30656E2F,
		0x32C84619,
		0x3B54B33C,
		0x3C532100,
		0x3C59861B,
		0x40E1109A,
		0x41D9A165,
		0x45C9D7C7,
		0x482CCCEC,
		0x4A8C2280,
		0x4D0F7AA7,
		0x4DEB4430,
		0x4E397758,
		0x51C84709,
		0x5304B4E1,
		0x53CE9176,
		0x570BFA4B,
		0x59C6A429,
		0x5C21E09D,
		0x5C615674,
		0x5D4207A,
		0x5DAEC8C1,
		0x5E4D88CE,
		0x61BB496,
		0x61CFD107,
		0x61D4D245,
		0x6656DB85,
		0x6A27767,
		0x6B977AA7,
		0x6E938A8,
		0x7087D0D0,
		0x7386B340,
		0x742C10B1,
		0x7479D98F,
		0x75610E42,
		0x75ECA86B,
		0x7788FC79,
		0x78381A09,
		0x79DFD44F,
		0x7EEE29A9,
		0x80D7252E,
		0x81051FBB,
		0x859A7BD0,
		0x875DB854,
		0x8A9132D3,
		0x8AF324C1,
		0x8B505332,
		0x900490A4,
		0x90E3AF2A,
		0x944F092D,
		0x94CCD332,
		0x99421C60,
		0x9D8BF7A9,
		0x9E454B65,
		0xA926155,
		0xA957F05,
		0xA97E3CD8,
		0xAAAA303C,
		0xAD3BF828,
		0xAD794606,
		0xB2950EC6,
		0xB750D87D,
		0xBBE62168,
		0xC2242F13,
		0xC5E3F5A3,
		0xCE3D65B,
		0xCF20C7DD,
		0xCF8F08F9,
		0xDCCF85D0,
		0xDDC52565,
		0xDE6CAD77,
		0xE1669DB4,
		0xE391A20A,
		0xE4D2570A,
		0xE7C17301,
	};

	uint32_t coatsMpFemale[] = {
			0x9F984079,
			0xA0C1A57D,
			0xA4EECA95,
			0xA7B173C8,
			0xA9A92514,
			0xACE0FE1B,
			0xB02F4E25,
			0xB051E688,
			0xB0B989D3,
			0xB0E68632,
			0xB1B0E2D9,
			0xB60C291D,
			0xB642ECEE,
			0xB73B93D4,
			0xB762C087,
			0xBAC31ADF,
			0xBE69EA9A,
			0xBEFE2261,
			0xC0D9812A,
			0xC0F42741,
			0xC1F389CF,
			0xC386440D,
			0xC719B693,
			0xCF16A415,
			0xD32E25D3,
			0xD4EE17A2,
			0xD50B5276,
			0xDC2EC4D3,
			0xE0996597,
			0xE2380C13,
			0xE2C3B34D,
			0xE314CC11,
			0xE36B83E7,
			0xE3C3C1CE,
			0xE815A12,
			0xE84975EF,
			0xE8E07A20,
			0xEBE50D2A,
			0xEC605837,
			0xEE691AE8,
			0xF1EB20E6,
			0xF4C36F6E,
			0xFD91C3AA,
			0xFD954A20,
			0xFFFBFF6E,
			0x103945D2,
			0x12F06E5,
			0x14511493,
			0x1454CD05,
			0x15B760CE,
			0x16F991F3,
			0x1B67B645,
			0x1FE4C114,
			0x2099FE43,
			0x21FBEC56,
			0x24876E6E,
			0x285EF3C5,
			0x2937366E,
			0x2A051119,
			0x2B9F5885,
			0x2E0985BD,
			0x2FAEA6FF,
			0x2FE1CD88,
			0x3245488A,
			0x32D13493,
			0x331C352D,
			0x34E71F2D,
			0x35001F5B,
			0x357B1055,
			0x35B7EAE5,
			0x35CFECEA,
			0x3DDB4358,
			0x4318BB90,
			0x4335BBC6,
			0x439AF326,
			0x44935817,
			0x44BBED77,
			0x456259B9,
			0x47AD4C69,
			0x49AA6524,
			0x4E5700AD,
			0x506BD636,
			0x53DEADA3,
			0x5636FE35,
			0x56DC91B4,
			0x584BFF88,
			0x588472B5,
			0x5A25033E,
			0x5A89365C,
			0x5ADBE6C7,
			0x5E3C041D,
			0x5EA672AB,
			0x5F18E68B,
			0x5FE0A3C0,
			0x612141B7,
			0x61B03128,
			0x63DC884B,
			0x645D9A82,
			0x67E21BAF,
			0x68E0F720,
			0x6A22D58F,
			0x6A8B121C,
			0x6BC8A685,
			0x6C8CA0BE,
			0x6FF60632,
			0x72DDB782,
			0x778C451,
			0x7C1A1C9A,
			0x7CC91DEC,
			0x7CF8B6F7,
			0x7D86CA01,
			0x7DA5012F,
			0x7EDEFF07,
			0x7F92A782,
			0x7FE8D2B8,
			0x811953F9,
			0x8207A96D,
			0x82B0CD06,
			0x850BEE12,
			0x8587F8D7,
			0x8A68B937,
			0x8A981B19,
			0x8B28DDF2,
			0x8CAB9AA0,
			0x8CED87A2,
			0x8D5A6C7B,
			0x8D724341,
			0x912269E9,
			0x91A4A492,
			0x9655D58A,
			0x98A9373B,
			0x98FC7999,
			0x9ADD2381,
			0x9C4FE0FC,
			0x9E71344,
			0x9F1D0FFC,
	};

	uint32_t ponchosMale[] = {
		0xF6C42909,
		0xFBC2A22C,
		0xFD3A2DA4,
		0x15D9888E,
		0x19A9DDFA,
		0x1EE4DDB5,
		0x253EA438,
		0x27377915,
		0x2FE41B50,
		0x30EF01C9,
		0x312219CA,
		0x4196A318,
		0x44F9B495,
		0x46E94558,
		0x47976C09,
		0x4B71D26B,
		0x4FC94A34,
		0x526244AF,
		0x5EEE01E4,
		0x60BEFD05,
		0x62BB80FE,
		0x656E6AC7,
		0x679BF8AD,
		0x77DD0FA4,
		0x78CDAD22,
		0x7AE2391B,
		0x7F04DAE3,
		0x8892310E,
		0x8CA1F61D,
		0x8E7E5481,
		0x92FE82D6,
		0x9326D0EE,
		0x94696459,
		0x9469FAEA,
		0x94F67F34,
		0x9D875AF8,
		0x9E585592,
		0xA23E2155,
		0xA5390E79,
		0xA94896AC,
		0xB5BE4855,
		0xB61196C7,
		0xB7A73D4,
		0xB7E033C7,
		0xBA8AB930,
		0xBED49D92,
		0xC2BE4983,
		0xC3E23268,
		0xC715C9B1,
		0xCC6DDA7,
		0xD48BED1E,
		0xDE1D8055,
		0xE5BD82FE,
		0xE8948CAA,
		0xE9302F40,
		0xEDF00687,
	};

	uint32_t ponchosFemale[] = {
			0x1100ADAA,
			0x14382312,
			0x2A0F3B63,
			0x2C03E39C,
			0x2C9464D1,
			0x30C95C34,
			0x368567AC,
			0x37925947,
			0x3C40DFC6,
			0x4589F258,
			0x45E475EB,
			0x518C38,
			0x58072B9B,
			0x61AD6074,
			0x665876D,
			0x6A1CCEDA,
			0x72547054,
			0x728F012B,
			0x74068FA7,
			0x779C69D9,
			0x79500FB5,
			0x7CB6E38F,
			0x906A8AF6,
			0x926A0C1B,
			0x92D20F9,
			0x94EEC6F2,
			0x9D5021E7,
			0x9E5EA9D9,
			0x9E75A70C,
			0xA3688C,
			0xA72CEB6E,
			0xAA834FB2,
			0xBBD55EF5,
			0xC0039D23,
			0xC1F96E13,
			0xC224A165,
			0xCA171FD8,
			0xCD6C157B,
			0xD20375B,
			0xD2873448,
			0xD6BCB923,
			0xD7B396AD,
			0xDB10B0C4,
			0xDBF054FC,
			0xDEFA28AE,
			0xE7EC371E,
			0xEAA43F6C,
			0xECDAC3D9,
			0xEDAA7870,
			0xF249703C,
			0xF5A65484,
			0xFB6D60FE,
			0xFD2E8606,
	};

	uint32_t armorMale[] = {
		0x3B01FC24,
		0x61396EA0,
		0x6C235E6A,
		0x7A4EFAC1,
		0x86D593CE,
		0x92F6AC10,
		0xA15448CB,
		0xC95098C3,
		0xE38F0D59,
		0xF89BF759,
	};

	uint32_t armorFemale[] = {
			0x35A189B4,
			0x462C2AC9,
			0x74748761,
			0x9D2DD8D3,
			0xA4BC4E10,
			0xAE789C10,
			0xAFD07E18,
			0xBA92939C,
			0xE79BEDAE,
			0xF14A010A,
	};

	uint32_t eyesMale[] = {
		0x13A24745,
		0x247E612D,
		0x264B6C97,
		0x2C5A58C,
		0x3F7D1C52,
		0x5C89591A,
		0x5CF8D749,
		0x6B3773C6,
		0x6F1CFE41,
		0x766A0A2B,
		0x82D625BB,
		0x9100BA34,
		0x95174A3D,
		0xA34F5ED1,
		0xB6B30598,
		0xB8931134,
		0xED74F31B,
		0xF0390073,
	};

	uint32_t eyesFemale[] = {
			0x25468DBA,
			0x33CD2AC7,
			0x375030AD,
			0x6239867F,
			0x83BECAA9,
			0x877DD107,
			0x921BE763,
			0x9466EAD9,
			0xA9131431,
			0xAD96379C,
			0xB580AE2C,
			0xB7FD4C6A,
			0xB9D4B5B4,
			0xC60AE885,
			0xCDAFDD6A,
			0xDCBE7B87,
			0xE0EE03E6,
			0xEFCDBC06,
	};

	uint32_t eyewearMale[] = {
		0x111AFF82,
		0x14F06EA7,
		0x1A5EDE5B,
		0x24FAF393,
		0x25C51838,
		0x271E132A,
		0x2761A139,
		0x36451407,
		0x36749686,
		0x3766BB7B,
		0x3BA1A0E0,
		0x3F5CC37F,
		0x47AF47AC,
		0x4B6FDBCD,
		0x520C4B95,
		0x58B7F65D,
		0x5C35FD31,
		0x7513919B,
		0x8953AC8,
		0x9A1DFEE,
		0x9B365DE0,
		0xA46C704C,
		0xA66E9989,
		0xA8282DAE,
		0xB23041AE,
		0xB72097D4,
		0xB7DC3C64,
		0xBB0242B0,
		0xCC38E51D,
		0xCE89884F,
		0xD36B8424,
		0xDF6A0B7F,
		0xE1A7209B,
		0xE2B68A34,
		0xF193AFD2,
		0xF198A7F8,
		0xF3F08F5F,
		0xFB45D3D8,
		0xFC33BD56,
	};

	uint32_t eyewearFemale[] = {
			0x1890826,
			0x19C16BCF,
			0x1A0B29B9,
			0x1BE9BCE3,
			0x1D4D2B17,
			0x28FCD709,
			0x32025481,
			0x32E35B69,
			0x37B27474,
			0x40E33A12,
			0x4518FFD4,
			0x49664A,
			0x497397FA,
			0x56AB65A2,
			0x5EBCF4A9,
			0x6185473D,
			0x6D1C5D8,
			0x772E736F,
			0x7F9C840,
			0x8E0A006D,
			0x90C4A69B,
			0x9AF186E,
			0x9C777139,
			0xA4C42DE1,
			0xB1D3D422,
			0xB2FCEDC5,
			0xC01A70AF,
			0xD5C6989F,
			0xD6739D65,
			0xDDB1ABD5,
			0xE27F4A0F,
			0xE2ED3B7E,
			0xE561C067,
			0xE73706BB,
			0xEB3CC6F7,
			0xF473211B,
			0xF4A1437,
			0xF50DA268,
			0xF7A464EC,
			0xF8F8F9C,
			0xF8FD6278,
	};

	uint32_t glovesMale[] = {
		0x7406E1C7,
		0x7679C97,
		0x76CDE5A6,
		0x78177A21,
		0x78B90422,
		0x78D41080,
		0x7ADAD811,
		0x7AFC07AF,
		0x7B60D9EA,
		0x7CFC9C05,
		0x7D0E8654,
		0x80461B24,
		0x8181A24,
		0x82356CC8,
		0x82ADBB6,
		0x847E1F37,
		0x85A08C0,
		0x8767F12B,
		0x88265BAF,
		0x8891892D,
		0x88BB4F1C,
		0x8962A47C,
		0x89E61A24,
		0x8B3F388A,
		0x8D42BC9D,
		0x8D97FD5B,
		0x8DFB3ACE,
		0x917BB0C1,
		0x919FB97A,
		0x91A405A3,
		0x91E1A8C7,
		0x928562B0,
		0x95741345,
		0x97832569,
		0x9A22841D,
		0x9AFA2DFE,
		0x9EAAA73D,
		0x9F54DFB9,
		0x9F6720F9,
		0x9FA06158,
		0xA0DBE2C7,
		0xA1B49D40,
		0xA4613197,
		0xA9068FB2,
		0xAA363CC9,
		0xAC54A881,
		0xAD355274,
		0xADDCE5AF,
		0xADE19AC4,
		0xAEE31BEF,
		0xAF4E5181,
		0xB1D084B0,
		0xB2FA78A4,
		0xB51ECC98,
		0xB71D2BDF,
		0xB85E6EEF,
		0xB9B2DBC2,
		0xB9F73DB1,
		0xBF60F6CB,
		0xBF774EC6,
		0xBF9BA26E,
		0xC2782707,
		0xC2CCE7F4,
		0xC3EFD7B3,
		0xC48D9BD2,
		0xC50EAB2C,
		0xC6140A5A,
		0xC8421587,
		0xC9DAA66C,
		0xCA5F53BF,
		0xCB8354AB,
		0xCB8B9C22,
		0xCE41A18E,
		0xD0D07178,
		0xD3503E98,
		0xD4329873,
		0xD4B727A0,
		0xD52DFA2F,
		0xD7106BC5,
		0xD8508A77,
		0xD872AF1B,
		0xD8B2B668,
		0xE279C325,
		0xE34E11F5,
		0xE4EF88EF,
		0xE5181591,
		0xE5F9A5C9,
		0xE6AC4B8E,
		0xE89620FF,
		0xE97957FD,
		0xEADA5149,
		0xECD46AEA,
		0xED27D258,
		0xF0430BA,
		0xF2A3A457,
		0xF39F4F82,
		0xF3BB414C,
		0xF4063FC8,
		0xF4CB67CC,
		0xF5C6B6EE,
		0xF617F132,
		0xF99A0937,
		0xF99BC30A,
		0xFB267B57,
		0x10BD09BD,
		0x13D8B579,
		0x16DEB1F,
		0x16F937E6,
		0x17241F4,
		0x187C7C51,
		0x18A95C7,
		0x191EC005,
		0x1A2D8F40,
		0x1A4A7FF5,
		0x1C7ACBA7,
		0x1D319438,
		0x1F0B8DED,
		0x1F6D48D2,
		0x225049AA,
		0x24B7D363,
		0x28189F0B,
		0x2920359,
		0x2B8130D7,
		0x2C6BA43B,
		0x2D851A19,
		0x2F55E89F,
		0x3033DA22,
		0x35BD465F,
		0x36BF0F93,
		0x3B94811C,
		0x3CC9875A,
		0x3FF491A1,
		0x4483AB1C,
		0x46CAD525,
		0x48786BD5,
		0x4A8822D7,
		0x4B7A10AE,
		0x4C2AA34C,
		0x4E38AF22,
		0x4F010660,
		0x4FF75D95,
		0x50B78AC9,
		0x51B81B7B,
		0x5229360A,
		0x5428440,
		0x570E2C50,
		0x582DC308,
		0x587AD30A,
		0x5912ECA0,
		0x5994405B,
		0x5A108522,
		0x5A3AF21C,
		0x5B704898,
		0x5C2CB213,
		0x5E781F1C,
		0x5EACA5B7,
		0x5EFD4BC1,
		0x638ABF20,
		0x64308607,
		0x67367081,
		0x698D88A,
		0x6A5DDEAE,
		0x6CAABB81,
		0x6CC3674D,
		0x6DBFED37,
		0x6EF757A8,
	};

	uint32_t glovesFemale[] = {
			0xEF2FBD2D,
			0xEF8B7E01,
			0xF15A70F5,
			0xF1CD8285,
			0xF5623F8A,
			0xF6F17D8B,
			0xF70F50D4,
			0xF7255B04,
			0xF7BC3BD1,
			0xF7F3C74,
			0xF89FBCF2,
			0xF9E4113E,
			0xFE34E293,
			0xFE390F17,
			0xFEC34939,
			0x126DC683,
			0x1328F2AA,
			0x141973E5,
			0x165A4B9E,
			0x1A423C8D,
			0x1D8BDEE4,
			0x1E2087F7,
			0x1EDDE714,
			0x1F0292CA,
			0x20180C98,
			0x21DE98A9,
			0x232BB82B,
			0x24150CAA,
			0x26293510,
			0x263E22E1,
			0x28CE3451,
			0x2A9AF2AB,
			0x2BAA230A,
			0x2C1A603D,
			0x2EBFF2B6,
			0x2FC6ABF5,
			0x31DEF9EA,
			0x3315BB17,
			0x33D44A78,
			0x36F8F702,
			0x378243F0,
			0x39C5974F,
			0x3D3C213B,
			0x3D951CD1,
			0x3F1D5D03,
			0x406A9705,
			0x411270C,
			0x41C30B92,
			0x42BC5A3D,
			0x44973F0F,
			0x4630D817,
			0x467161CE,
			0x477E30A3,
			0x48F6C7CE,
			0x4B0734F7,
			0x4B81BAC7,
			0x4D75607,
			0x4E933356,
			0x50EE76A1,
			0x51475F13,
			0x5313600C,
			0x54323070,
			0x54F69019,
			0x55D71202,
			0x55ED80A3,
			0x57B6654D,
			0x5B004C30,
			0x5B4BDA67,
			0x5D985CD7,
			0x5FBEEB9F,
			0x63A5AD77,
			0x6675D4F7,
			0x67597059,
			0x67FA73B8,
			0x682DB6AF,
			0x68E86F45,
			0x692FE88F,
			0x69AC4547,
			0x6D327E34,
			0x6D58AF9C,
			0x72D91B96,
			0x7555BF86,
			0x76CD75A6,
			0x77B89340,
			0x77E4E1B8,
			0x79BC8313,
			0x7A0AF77,
			0x7A584978,
			0x7AF0186A,
			0x7B2B17FC,
			0x7B46DCB9,
			0x7F601C34,
			0x7FBB5461,
			0x80A51779,
			0x8129E92,
			0x8312528B,
			0x84E72B74,
			0x85912057,
			0x865D7976,
			0x87AF6426,
			0x89147854,
			0x8A1837FF,
			0x8A97297E,
			0x8B338322,
			0x8DAAB8C9,
			0x8DD99C4,
			0x8E72AC7F,
			0x8EB9B3A2,
			0x8F86F3F8,
			0x902E6B49,
			0x921B0046,
			0x93325C48,
			0x94A10BF9,
			0x968DCEC1,
			0x978FFAB,
			0x9AEACC04,
			0x9BEF5472,
			0x9C3FD5F3,
			0x9CA748E8,
			0x9CB59754,
			0xA054E24F,
			0xA1140E82,
			0xA4123A16,
			0xA490FF05,
			0xA7F3A3AD,
			0xAA05717E,
			0xAA1536F8,
			0xAD877043,
			0xADBF4839,
			0xAEC509DE,
			0xAED9AA0D,
			0xAF56E6B8,
			0xAF6C2A8C,
			0xAFA82CBD,
			0xB005C2C2,
			0xB2B5575C,
			0xB2D67546,
			0xB9E3D9F2,
			0xBC262F7,
			0xBC418DBB,
			0xBF9DF12D,
			0xC002ECC0,
			0xC14CD28B,
			0xC2379A9D,
			0xC4C6EBE8,
			0xC64AEF4C,
			0xC6E59D64,
			0xC760840E,
			0xC819F65E,
			0xCA9AB424,
			0xCB17B51A,
			0xCE640EB9,
			0xD01F440C,
			0xD2F492A3,
			0xD4399529,
			0xD4DB29CC,
			0xD51839C9,
			0xD527D5A,
			0xD607FC7C,
			0xD61700F4,
			0xD7C244BC,
			0xDB37A860,
			0xDB7C99AF,
			0xDC92D810,
			0xDCD9D8A2,
			0xDD621992,
			0xDDBD58F1,
			0xE0375017,
			0xE156CAB7,
			0xE1D8A667,
			0xE4849298,
			0xE4FB36B0,
			0xE5AC9BC9,
			0xE9271E01,
			0xE9472777,
			0xE9719F3C,
			0xE9D8C5A2,
			0xE9F2691C,
			0xFB78068C,
	};

	uint32_t mustacheMale[] = {
		0x6356A625,
		0xF920388A,
		0x63ABC8C9,
		0xF9544CFF,
		0x63EE0E91,
		0xF990C40D,
		0x63F19651,
		0xF9AA685,
		0x64E73E9F,
		0xFA2D6FB8,
		0x6561DB76,
		0xFA8E41E0,
		0x658C1E78,
		0xFAE7A902,
		0x65BA34AA,
		0xFB3B14FB,
		0x66232AFF,
		0xFC610F55,
		0x66444150,
		0xFCADB51E,
		0x665B0044,
		0xFCEAE99D,
		0x6667F141,
		0xFD381DF,
		0x66F2F267,
		0xFD6B44B8,
		0x67F25354,
		0xFD7CD49C,
		0x694CC670,
		0x6A38238,
		0x6A50055D,
		0x6A60D2DB,
		0x6A88FFD,
		0x6A9544B1,
		0x6B28CB91,
		0x6B6B0475,
		0x6B8893D5,
		0x6BBC2B80,
		0x6BBCEB4B,
		0x6BC07839,
		0x6BC118A3,
		0x6C5D69E0,
		0x6C80C0E0,
		0x6EA0286C,
		0x6EC1A6D0,
		0x6EC89281,
		0x6F2671D3,
		0x702B0069,
		0x70300C47,
		0x70418318,
		0x7068AC12,
		0x70A1EC5D,
		0x71064624,
		0x714D5377,
		0x71A711F4,
		0x727C942C,
		0x746B99C6,
		0x74A9224C,
		0x74C1AA7,
		0x7586218E,
		0x771B5397,
		0x777E114A,
		0x782E9447,
		0x7915B812,
		0x79176B35,
		0x796FB436,
		0x79BEB6C8,
		0x7A7CC6DD,
		0x7A958CAE,
		0x7BD3C250,
		0x7C3B59E1,
		0x7C928C23,
		0x7D6E77A9,
		0x7DCB328D,
		0x7E107DEC,
		0x7EBF2382,
		0x7F7DB0CA,
		0x7FC252B,
		0x7FC3943E,
		0x80164A16,
		0x81185864,
		0x8153BE53,
		0x81D5903A,
		0x82025AD7,
		0x82E4ED65,
		0x82F81C68,
		0x83B62F20,
		0x83BBB9BD,
		0x84991A7C,
		0x8543ABF3,
		0x858E6F90,
		0x86593E1A,
		0x8737193B,
		0x87B7030F,
		0x8A10E2AB,
		0x8A7979C,
		0x8AAA02A6,
		0x8B0CBAE,
		0x8B42D52,
		0x8B7285C6,
		0x8BE5A57A,
		0x8D0A00BD,
		0x8DB2E35F,
		0x8EEDACC9,
		0x8FEE1C15,
		0x8FFAF420,
		0x90C587E5,
		0x90E74D17,
		0x92841CF9,
		0x941BAFCE,
		0x979E4FFA,
		0x97F9B2FE,
		0x98D68DD9,
		0x9A3FE780,
		0x9A803734,
		0x9CDD7B4,
		0x9D4C01AF,
		0x9E366841,
		0x9E727670,
		0x9EC1FD33,
		0x9EDCDDA,
		0x9F2BCAEF,
		0x9F5BBF93,
		0x9F5C0094,
		0x9F721AFC,
		0x9FB612CD,
		0xA0B4DC0D,
		0xA0CB1A81,
		0xA13EC0FD,
		0xA158533C,
		0xA25A1BC6,
		0x10404A83,
		0xA2F3913D,
		0x10CFCE8B,
		0xA3834871,
		0x10D6AC7,
		0xA53192F0,
		0x11C91AF5,
		0xA60ACF06,
		0x12478B89,
		0xA750E46,
		0x124F4527,
		0xA7DAE935,
		0x1277833,
		0xA8F9A2ED,
		0x12D0FBC4,
		0xA90BB6C5,
		0x1305E1B6,
		0xA933AD49,
		0x134FA09F,
		0xA9599CBD,
		0x14C1A758,
		0xAA5C677C,
		0x14FA1FBA,
		0xAA84829A,
		0x1527EA91,
		0xAB0470AA,
		0x16BEBD6E,
		0xAB0D0F95,
		0x16CE3B8D,
		0xABFEF07,
		0x1748A66C,
		0xAC5B7E9F,
		0x1948F990,
		0xACAAE719,
		0x1B0F486D,
		0xAD2780FA,
		0x1CAD58D1,
		0xAE79DDCB,
		0x1CE2C24C,
		0xAEA23808,
		0x1DF42094,
		0xAF158A8E,
		0x1E2932FC,
		0xAF4C6A5F,
		0x1E4CDA6F,
		0xB0962BA,
		0x1EC41FF7,
		0xB12D2E1C,
		0x1EE7B875,
		0xB13806F2,
		0x1F93EE0E,
		0xB19EED14,
		0x20BA0828,
		0xB2E1B4FD,
		0x211701BF,
		0xB2EF77F1,
		0x21683359,
		0xB3709099,
		0x21A96C0F,
		0xB3C6AF29,
		0x23040271,
		0xB79C31A0,
		0x23DE41A5,
		0xB8E43AB4,
		0x23FE6513,
		0xB92CFE5B,
		0x2419842A,
		0xBA758E13,
		0x2477D2D3,
		0xBA93F53F,
		0x2579BDD,
		0xBAF9985E,
		0x259D6827,
		0xBC957CFF,
		0x2608D192,
		0xBCEC439F,
		0x26BD9E99,
		0xBCF620EF,
		0x276668A5,
		0xBD2A2EB1,
		0x28C35B3C,
		0xBD5C7B8E,
		0x28C4049B,
		0xBDE5C06,
		0x2D1F6EF8,
		0xBE02010F,
		0x2DA87931,
		0xBEBDE602,
		0x2DACD51A,
		0xBEDBEB55,
		0x2DC75496,
		0xBEDDD774,
		0x2E21395E,
		0xBF8EA64E,
		0x2EC16D9C,
		0xC024C486,
		0x2ED65550,
		0xC072BDCD,
		0x310CD148,
		0xC1D6D311,
		0x317C827E,
		0xC26DFB4B,
		0x320F5E94,
		0xC281BBE6,
		0x322F8AB1,
		0xC2F67A0A,
		0x326FC605,
		0xC3282061,
		0x32C2AAB8,
		0xC3874C24,
		0x358F20EC,
		0xC469929E,
		0x36ADE109,
		0xC7F15EF7,
		0x37B3E87E,
		0xC83F3AF4,
		0x387BCDE,
		0xC845864E,
		0x38850876,
		0xC88EF081,
		0x389A8659,
		0xC908D25A,
		0x3958734D,
		0xC9F93B7E,
		0x3A9BB75C,
		0xCB8BA882,
		0x3B1118F2,
		0xCC3A855B,
		0x3DC2A524,
		0xCC596EAA,
		0x3DD77CCF,
		0xCDE4E201,
		0x3E95D701,
		0xCDF1E55F,
		0x3F5EE75E,
		0xCE64CC6B,
		0x3FDA5848,
		0xCEBB57FC,
		0x3FE6067B,
		0xCF5AF180,
		0x3FFFA7AC,
		0xD01A2A0D,
		0x402BADD7,
		0xD026E81F,
		0x408825BF,
		0xD04413CE,
		0x40C97234,
		0xD05FC174,
		0x4117D9DA,
		0xD0923E1B,
		0x4140E7AF,
		0xD1840191,
		0x41E35B6E,
		0xD1E1946B,
		0x42739020,
		0xD2EEBDF7,
		0x42B6B530,
		0xD46834FF,
		0x42D44DB8,
		0xD4B85059,
		0x43113D33,
		0xD62FEDA6,
		0x43349F67,
		0xD6FBE84B,
		0x455B1B3D,
		0xD85533E,
		0x470E994A,
		0xD8902333,
		0x476EC03,
		0xDA7C957A,
		0x47ABC5A,
		0xDACAFAA5,
		0x47C95FE1,
		0xDB3B2430,
		0x47F0563A,
		0xDB421A12,
		0x48216B01,
		0xDCECB1C0,
		0x4850F111,
		0xDD2F33A,
		0x4974CB39,
		0xDD92E126,
		0x49E10CA8,
		0xDDC102AE,
		0x4A333882,
		0xDDC32A1E,
		0x4AF609F1,
		0xDF3A3A43,
		0x4B3AA6DE,
		0xDF86B1B2,
		0x4B62E1DD,
		0xDF8A03F7,
		0x4BA94F53,
		0xDFFE37D6,
		0x4BBA4438,
		0xE180CD60,
		0x4C345282,
		0xE1CED376,
		0x4E314424,
		0xE27703A1,
		0x504495E2,
		0xE2D428CC,
		0x508954D4,
		0xE2D7FC1A,
		0x51CBF923,
		0xE32B5A1D,
		0x5200E9E3,
		0xE55E3999,
		0x5212E44F,
		0xE5A49A86,
		0x52B2B34D,
		0xE5D10525,
		0x52D55C52,
		0xE7F839BB,
		0x5379A2F3,
		0xE7FA7337,
		0x53A013F7,
		0xE98B2796,
		0x5459084D,
		0xEA0FFB42,
		0x548F8AAE,
		0xEA26EED0,
		0x54C79E6F,
		0xEACA7B10,
		0x55AC8751,
		0xEC3A7374,
		0x567C8F21,
		0xEC5E06EA,
		0x56E3BF6A,
		0xEC78D099,
		0x58EA7C2F,
		0xED30825,
		0x5932E857,
		0xEE1CFA1E,
		0x59B5C832,
		0xEE8AAD73,
		0x59EBCFAB,
		0xEEC97D83,
		0x5A74F7EE,
		0xEF329360,
		0x5AC31CB6,
		0xF02ACC05,
		0x5B2721B5,
		0xF046B09E,
		0x5B48C6E,
		0xF09F0C3B,
		0x5B9022AD,
		0xF10F1E0,
		0x5BBBDF3,
		0xF17BB435,
		0x5C6541B8,
		0xF1AB180E,
		0x5C8DD3CC,
		0xF2403C5F,
		0x5D02BD6E,
		0xF2F61F31,
		0x5D15744B,
		0xF31F4ACD,
		0x5F365B6F,
		0xF3AE3C66,
		0x6092BA6E,
		0xF4124FEF,
		0x6096A621,
		0xF4805D5E,
		0x60C1A1D8,
		0xF4FD54CA,
		0x60EAA7FB,
		0xF5840E64,
		0x623428E7,
		0xF5AA5E6,
		0x62D50DFB,
		0xF608E1D1,
		0x62DDFEE4,
		0xF65DF36D,
		0x62E355D0,
		0xF81D687F,
		0x633D5874,
		0xF90585D1,
	};

	scrollStruct<int> clearTypes[] = {
		"Cosmetics", 0,
		"Headwear", 1,
		"Upper", 2,
		"Lower", 3
	};

	static std::vector<std::pair<int32_t, std::vector<uint32_t>>> categories = {
		{ 0, { 0x378AD10C,0x864B03AE,0xF8016BCA,0x96EDAE5C,0xB3966C9,0xEA24B45E,0x823687F5 } },
		{ 1, { 0x9925C067,0x7505EF42,0x5FC29285,0x5E47CA6  } },
		{ 2, { 0x2026C46D, 0x485EE834, 0x3C1A74CD, 0xE06D30CE, 0x662AC34, 0xAF14310B, 0x72E6EF74, 0x83887E88, 0xEABE0032, 0x3F7F3587, 0x7A6BBD0B, 0xF16A1D23, 0x7BC10759, 0x91CE9B20, 0x7A96FACA, 0x877A2CF7, 0x94504D26, 0x79D7DF96 } },
		{ 3, { 0xA0E3AB7F, 0x1D4C528A, 0x18729F39, 0x3107499B, 0x514ADCEA, 0x777EC6EF, 0xF1542D11, 0x9B2C8B89, 0xA6D134C6, 0xFAE9107F, 0xB6B6122D } }
	};

	void clearPedComponent(Ped ped, uint32_t category) {
		native::clearPedComponentCategory(menu::getLocalPlayer().ped, category);
		native::setPedComponentEnabled(menu::getLocalPlayer().ped, 0x0, 1, 1, 1);
	}

	void clearCategories(Ped ped, std::vector<uint32_t> categories) {
		std::for_each(categories.begin(), categories.end(), [&](uint32_t& cat) {
			clearPedComponent(ped, cat);
		});
	}

	void saveOutfit(const char* name, Ped ped) {
		bool dupe = false;
		int newDupe = 1;

		if (utils::getConfig()->doesFileExist(utils::va::va("%s%s.json", utils::getConfig()->getOutfitsPath(), name))) {
			for (int i = 1; i < 10; i++) {
				if (utils::getConfig()->doesFileExist(utils::va::va("%s%s (%i).json", utils::getConfig()->getOutfitsPath(), name, i))) {
					newDupe = i + 1;
				} else {
					if (i != 1) {
						dupe = true;
						break;
					}
				}
			}
		}

		std::ofstream output;
		if (dupe) output = std::ofstream(utils::va::va("%s%s (%i).json", utils::getConfig()->getOutfitsPath(), name, newDupe));
		else output = std::ofstream(utils::va::va("%s%s.json", utils::getConfig()->getOutfitsPath(), name));

		nlohmann::json temp;
		uint64_t unk[0x30];
		uint64_t unk1[0x30];

		temp["compatibility"]["gender"] = (bool)native::isPedMale(ped);

		for (std::size_t i = 0; i < 40; i++) {
			temp["components"][i] = native::getComponentAtIndex(ped, (int)i, 1, &unk[0], &unk1[1]);
		}

		output << temp.dump(4);
		output.close();

		wardrobeMenu::getInstance()->update();
	}

	void loadOutfit(const char* name, Ped ped) {
		std::ifstream file(name);
		if (file.good()) {
			nlohmann::json temp;
			file >> temp;
			file.close();
			if (temp["compatibility"]["gender"].get<bool>() == (bool)native::isPedMale(ped)) {
				std::for_each(categories.begin(), categories.end(), [&](std::pair<int32_t, std::vector<uint32_t>>& cat) {
					clearCategories(menu::getLocalPlayer().ped, cat.second);
				});
				for (std::size_t i = 0; i < 40; i++) {
					native::setPedComponentEnabled(ped, temp["components"][i].get<uint32_t>(), 1, 1, 1);
				}
			} else {
				menu::getNotify()->right(std::string("Component '" + std::string(name) + "' is ~e~not~q~ compatible with your gender"));
			}
		}
	}

	void toggleComponent(Ped ped, uint32_t component, uint32_t category, std::string type) {
		static uint32_t cachedComp = 0;
		if (cachedComp != component) {
			native::setPedComponentEnabled(ped, component, 1, 1, 1);
			cachedComp = component;
		} else {
			clearPedComponent(ped, category);
			cachedComp = 0x0;
			menu::getNotify()->right(std::string("~e~Cleared~q~ component [" + type + "]"));
		}
	}

	void setSavedOutfitLoop() {
		static int cachedOutfit = -1;
		static std::vector<int32_t> outfit;
		if (cachedOutfit != vars.currentSavedOutfit) {
			wardrobeMenu::getInstance()->update();
			loadOutfit(utils::va::va("%s%s.json", utils::getConfig()->getOutfitsPath(), vars.savedOutfits[vars.currentSavedOutfit].name.c_str()), menu::getLocalPlayer().ped);
			uint64_t unk[0x30];
			uint64_t unk1[0x30];
			outfit.clear();
			for (std::size_t i = 0; i < 40; i++) {
				outfit.push_back(native::getComponentAtIndex(menu::getLocalPlayer().ped, (int)i, 1, &unk[0], &unk1[1]));
			}
			cachedOutfit = vars.currentSavedOutfit;
		}
		static int applyTimer;
		if (native::isPlayerPlaying(menu::getLocalPlayer().id) && native::networkIsInSession() && !native::isPlayerDead(menu::getLocalPlayer().id)) {
			menu::util::getTimers()->runTimedFunction(&applyTimer, 5000, [&] {
				printf("setting outfit");
				std::for_each(categories.begin(), categories.end(), [&](std::pair<int32_t, std::vector<uint32_t>>& cat) {
					clearCategories(menu::getLocalPlayer().ped, cat.second);
				});
				std::for_each(outfit.begin(), outfit.end(), [](int32_t& data) {
					native::setPedComponentEnabled(menu::getLocalPlayer().ped, data, 1, 1, 1);
				});
			});
		}
	}
}

void wardrobeMenu::init() {
	setName("Wardrobe");
	setParentSubmenu<appearanceMenu>();
	addString("Load");
	addString("Auto Apply Outfit");
}

/*Called while in submenu*/
void wardrobeMenu::update() {
	static int current = 0;
	current = 0;
	std::vector<std::string> outfits = utils::getConfig()->getFilesInDirectory(utils::getConfig()->getOutfitsPath(), ".json");
	if (!outfits.empty()) {
		std::for_each(outfits.begin(), outfits.end(), [&](std::string& name) {
			vars.savedOutfits[current++].name = name;
		});
	} else {
		vars.savedOutfits[0].name = "No Saved Outfits";
	}

	vars.savedOutfitsSize = current;
}

/*Called once on submenu open*/
void wardrobeMenu::updateOnce() {
	update();
	vars.isPedMale = native::isPedMale(menu::getLocalPlayer().ped);
	clearOptionsOffset(0);
	addOption(buttonOption("Save")
		.addKeyboard("Enter theme name", 30, [=](const char* name) {
			if (name) saveOutfit(name, menu::getLocalPlayer().ped);
			updateOnce();
			})
		.addTooltip("Save your current outfit!"));

	addOption(scrollOption<int>(SCROLLSELECT, getString("Load"))
		.addTranslation()
		.addScroll(vars.currentSavedOutfit, 0, vars.savedOutfitsSize, vars.savedOutfits)
		.addOnClick([] { loadOutfit(utils::va::va("%s%s.json", utils::getConfig()->getOutfitsPath(), vars.savedOutfits[vars.currentSavedOutfit].name.c_str()), menu::getLocalPlayer().ped); })
		.canBeSaved(getString("Load")));

	//addOption(toggleOption(getString("Auto Apply Outfit"))
	//	.addTranslation()
	//	.addToggle(vars.autoApplyOutfit)
	//	.canBeSaved(getString("Auto Apply Outfit"))
	//	.addTooltip("Current selected saved outfit will be applied always"));

	addOption(scrollOption<int>(SCROLLSELECT, "Clear")
		.addScroll(vars.clear, 0, NUMOF(clearTypes), clearTypes)
		.addOnClick([] { clearCategories(menu::getLocalPlayer().ped, categories[vars.clear].second); })
		.addTooltip("Clears category off your ped of your selection"));

	addOption(buttonOption("~e~Clear")
		.addOnClick([] {
			std::for_each(categories.begin(), categories.end(), [&](std::pair<int32_t, std::vector<uint32_t>>& cat) {
				clearCategories(menu::getLocalPlayer().ped, cat.second);
			});
		})
	.addTooltip("Clear all ped components"));

	addOption(breakOption("Cosmetics")
		.addTranslation());

	addOption(numberOption<int>(SCROLLSELECT, "Head")
		.addNumber(vars.head, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(headMale) : NUMOF(headFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? headMale[vars.head] : headFemale[vars.head], 0x378AD10C, "Head"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Hair")
		.addNumber(vars.hair, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(hairMale) : NUMOF(hairFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? hairMale[vars.hair] : hairFemale[vars.hair], 0x864B03AE, "Hair");  }));

	if (vars.isPedMale) {
		addOption(numberOption<int>(SCROLLSELECT, "Facial Hair")
			.addNumber(vars.mustache, "%i", 1).addMin(0).addMax(NUMOF(mustacheMale))
			.addOnClick([] {  toggleComponent(menu::getLocalPlayer().ped, mustacheMale[vars.mustache], 0xF8016BCA, "Facial hair"); }));
	}

	addOption(numberOption<int>(SCROLLSELECT, "Teeth")
		.addNumber(vars.teeth, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(teethMale) : NUMOF(teethFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? teethMale[vars.teeth] : teethFemale[vars.teeth], 0x96EDAE5C, "Teeth"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Torso")
		.addNumber(vars.torso, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(torsoMale) : NUMOF(torsoFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? torsoMale[vars.torso] : torsoFemale[vars.torso], 0xB3966C9, "Torso"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Eyes")
		.addNumber(vars.eyes, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(eyesMale) : NUMOF(eyesFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? eyesMale[vars.eyes] : eyesFemale[vars.eyes], 0xEA24B45E, "Eyes"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Legs")
		.addNumber(vars.legs, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(legsMale) : NUMOF(legsFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? legsMale[vars.legs] : legsFemale[vars.legs], 0x823687F5, "Legs"); }));

	addOption(breakOption("Headwear"));

	addOption(numberOption<int>(SCROLLSELECT, "Hats")
		.addNumber(vars.hats, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(hatsMale) : NUMOF(hatsFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? hatsMale[vars.hats] : hatsFemale[vars.hats], 0x9925C067, "Hats"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Mask")
		.addNumber(vars.masks, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(maskMale) : NUMOF(maskFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? maskMale[vars.masks] : maskFemale[vars.masks], 0x7505EF42, "Mask"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Neckwear")
		.addNumber(vars.neckwear, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(neckwearMale) : NUMOF(neckwearFemale))
		.addOnClick([] {  toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? neckwearMale[vars.neckwear] : neckwearFemale[vars.neckwear], 0x5FC29285, "Neckwear"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Eyewear")
		.addNumber(vars.eyewear, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(eyewearMale) : NUMOF(eyewearFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? eyewearMale[vars.eyewear] : eyewearFemale[vars.eyewear], 0x5E47CA6, "Eyewear"); }));

	addOption(breakOption("Upper"));

	addOption(numberOption<int>(SCROLLSELECT, "Shirts")
		.addNumber(vars.shirts, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(shirtsMale) : NUMOF(shirtsFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? shirtsMale[vars.shirts] : shirtsFemale[vars.shirts], 0x2026C46D, "Shirt"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Vests")
		.addNumber(vars.vests, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(vestsMale) : NUMOF(vestsFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? vestsMale[vars.vests] : vestsFemale[vars.vests], 0x485EE834, "Vest"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Cloaks")
		.addNumber(vars.cloak, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(cloakMale) : NUMOF(cloakFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? cloakMale[vars.cloak] : cloakFemale[vars.cloak], 0x3C1A74CD, "Cloak"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Coats")
		.addNumber(vars.coats, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(coatsMale) : NUMOF(coatsFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? coatsMale[vars.coats] : coatsFemale[vars.coats], 0xE06D30CE, "Coat"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Coats (MP)")
		.addNumber(vars.coatsMp, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(coatsMpMale) : NUMOF(coatsMpFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? coatsMpMale[vars.coatsMp] : coatsMpFemale[vars.coatsMp], 0x662AC34, "Coat (MP)"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Ponchos")
		.addNumber(vars.ponchos, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(ponchosMale) : NUMOF(ponchosFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? ponchosMale[vars.ponchos] : ponchosFemale[vars.ponchos], 0xAF14310B, "Poncho"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Armor")
		.addNumber(vars.armor, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(armorMale) : NUMOF(armorFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? armorMale[vars.armor] : armorFemale[vars.armor], 0x72E6EF74, "Armor"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Loadouts")
		.addNumber(vars.loadouts, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(loadoutsMale) : NUMOF(loadoutsFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? loadoutsMale[vars.loadouts] : loadoutsFemale[vars.loadouts], 0x83887E88, "Loadout"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Gloves")
		.addNumber(vars.gloves, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(glovesMale) : NUMOF(glovesFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? glovesMale[vars.gloves] : glovesFemale[vars.gloves], 0xEABE0032, "Gloves"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Badge")
		.addNumber(vars.badge, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(badgeMale) : NUMOF(badgeFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? badgeMale[vars.badge] : badgeFemale[vars.badge], 0x3F7F3587, "Badge"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Rings Right Hand")
		.addNumber(vars.ringsRight, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(ringsRightMale) : NUMOF(ringsRightFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? ringsRightMale[vars.ringsRight] : ringsRightFemale[vars.ringsRight], 0x7A6BBD0B, "Right Hand Rings"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Rings Left Hand")
		.addNumber(vars.ringsleft, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(ringsLeftMale) : NUMOF(ringsLeftFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? ringsLeftMale[vars.ringsleft] : ringsLeftFemale[vars.ringsleft], 0xF16A1D23, "Left Hand Rings"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Bracelet")
		.addNumber(vars.bracelet, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(braceletMale) : NUMOF(braceletFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? braceletMale[vars.bracelet] : braceletFemale[vars.bracelet], 0x7BC10759, "Bracelet"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Guantlets")
		.addNumber(vars.guantlets, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(guantletsMale) : NUMOF(guantletsFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? guantletsMale[vars.guantlets] : guantletsFemale[vars.guantlets], 0x91CE9B20, "Guantlets"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Necktie")
		.addNumber(vars.necktie, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(necktieMale) : NUMOF(necktieFemale))
		.addOnClick([] {  toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? necktieMale[vars.necktie] : necktieFemale[vars.necktie], 0x7A96FACA, "Necktie"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Suspenders")
		.addNumber(vars.suspenders, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(suspendersMale) : NUMOF(suspendersFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? suspendersMale[vars.suspenders] : suspendersFemale[vars.suspenders], 0x877A2CF7, "Suspenders"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Satchel")
		.addNumber(vars.satchel, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(satchelMale) : NUMOF(satchelFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? satchelMale[vars.satchel] : satchelFemale[vars.satchel], 0x94504D26, "Satchel"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Accessories")
		.addNumber(vars.accessories, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(accessoriesMale) : NUMOF(accessoriesFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? accessoriesMale[vars.accessories] : accessoriesFemale[vars.accessories], 0x79D7DF96, "Accessories"); }));

	addOption(breakOption("Lower"));

	if (!vars.isPedMale) {
		addOption(numberOption<int>(SCROLLSELECT, "Skirt")
			.addNumber(vars.skirts, "%i", 1).addMin(0).addMax(NUMOF(skirtsFemale))
			.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, skirtsFemale[vars.skirts], 0xA0E3AB7F, "Skirt"); }));
	}

	addOption(numberOption<int>(SCROLLSELECT, "Pants")
		.addNumber(vars.pants, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(pantsMale) : NUMOF(pantsFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? pantsMale[vars.pants] : pantsFemale[vars.pants], 0x1D4C528A, "Pants"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Spurs")
		.addNumber(vars.spurs, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(spursMale) : NUMOF(spursFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? spursMale[vars.spurs] : spursFemale[vars.spurs], 0x18729F39, "Spurs"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Chaps")
		.addNumber(vars.chaps, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(chapsMale) : NUMOF(chapsFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? chapsMale[vars.chaps] : chapsFemale [vars.chaps], 0x3107499B, "Chaps"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Spats")
		.addNumber(vars.spats, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(spatsMale) : NUMOF(spatsFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? spatsMale[vars.spats] : spatsFemale[vars.spats], 0x514ADCEA, "Spats"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Boots")
		.addNumber(vars.boots, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(bootsMale) : NUMOF(bootsFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? bootsMale[vars.boots] : bootsFemale[vars.boots], 0x777EC6EF, "Boots"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Leg Accessories")
		.addNumber(vars.legAccessories, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(legAccessoriesMale) : NUMOF(legAccessoriesFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? legAccessoriesMale[vars.legAccessories] : legAccessoriesFemale[vars.legAccessories], 0xF1542D11, "Leg Accessories"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Gunbelts")
		.addNumber(vars.gunbelt, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(gunbeltMale) : NUMOF(gunbeltFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? gunbeltMale[vars.gunbelt] : gunbeltFemale[vars.gunbelt], 0x9B2C8B89, "Gunbelt"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Belts")
		.addNumber(vars.belt, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(beltMale) : NUMOF(beltFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? beltMale[vars.belt] : beltFemale[vars.belt], 0xA6D134C6, "Belt"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Belt Buckles")
		.addNumber(vars.beltBuckle, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(beltBuckleMale) : NUMOF(beltBuckleFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? beltBuckleFemale[vars.beltBuckle] : beltBuckleFemale[vars.beltBuckle], 0xFAE9107F, "Belt Buckle"); }));

	addOption(numberOption<int>(SCROLLSELECT, "Offhand Holsters")
		.addNumber(vars.offhandHolster, "%i", 1).addMin(0).addMax(vars.isPedMale ? NUMOF(offhandHolsterMale) : NUMOF(offhandHolsterFemale))
		.addOnClick([] { toggleComponent(menu::getLocalPlayer().ped, vars.isPedMale ? offhandHolsterMale[vars.offhandHolster] : offhandHolsterFemale[vars.offhandHolster], 0xB6B6122D, "Offhand Holster"); }));
}

/*Called always*/
void wardrobeMenu::featureUpdate() {
	if (vars.autoApplyOutfit) {
		setSavedOutfitLoop();
	}
}

wardrobeMenu* _instance;
wardrobeMenu* wardrobeMenu::getInstance() {
	if (_instance == nullptr) {
		_instance = new wardrobeMenu();
		_instance->init();
		menu::getSubmenuHandler()->addSubmenu(_instance);
	}

	return _instance;
}

wardrobeMenu::~wardrobeMenu() { delete _instance; }