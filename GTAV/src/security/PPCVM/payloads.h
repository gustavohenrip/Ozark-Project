#pragma once
#include "stdafx.h"

namespace security::vm::payloads {
	static uint8_t payload_init[] = {
		0x7D, 0x88, 0x02, 0xA6, 0x91, 0x81, 0xFF, 0xF8, 0x94, 0x21, 0xFF, 0x00,
		0x38, 0x00, 0x00, 0x07, 0x44, 0x00, 0x00, 0x02, 0x2E, 0x03, 0x00, 0x00,
		0x38, 0x60, 0x00, 0x01, 0x41, 0x92, 0x00, 0x08, 0x38, 0x60, 0x05, 0x39,
		0x38, 0x21, 0x01, 0x00, 0x81, 0x81, 0xFF, 0xF8, 0x7D, 0x88, 0x03, 0xA6,
		0x4E, 0x80, 0x00, 0x20
	};

	static uint8_t payload_rc4[] = {
		0x7D, 0x88, 0x02, 0xA6, 0x91, 0x81, 0xFF, 0xF8, 0x94, 0x21, 0xFF, 0x00,
		0x7C, 0x68, 0x1B, 0x78, 0xE8, 0x68, 0x00, 0x00, 0x80, 0x88, 0x00, 0x08,
		0xE8, 0xA8, 0x00, 0x0C, 0x80, 0xC8, 0x00, 0x14, 0x80, 0xE8, 0x00, 0x18,
		0x38, 0x00, 0x00, 0x0B, 0x44, 0x00, 0x00, 0x02, 0x38, 0x21, 0x01, 0x00,
		0x81, 0x81, 0xFF, 0xF8, 0x7D, 0x88, 0x03, 0xA6, 0x4E, 0x80, 0x00, 0x20
	};

	static uint8_t payload_rc4_modified[] = {
		0x7D, 0x88, 0x02, 0xA6, 0x91, 0x81, 0xFF, 0xF8, 0x94, 0x21, 0xFF, 0x00,
		0x7C, 0x68, 0x1B, 0x78, 0xE8, 0x68, 0x00, 0x00, 0x80, 0x88, 0x00, 0x08,
		0xE8, 0xA8, 0x00, 0x0C, 0x80, 0xC8, 0x00, 0x14, 0x80, 0xE8, 0x00, 0x18,
		0x38, 0x00, 0x00, 0x0C, 0x44, 0x00, 0x00, 0x02, 0x38, 0x21, 0x01, 0x00,
		0x81, 0x81, 0xFF, 0xF8, 0x7D, 0x88, 0x03, 0xA6, 0x4E, 0x80, 0x00, 0x20
	};
}

/*
	- RC4 -

	mflr %r12
	stw %r12, -0x8(%r1)
	stwu %r1, -0x100(%r1)

	mr %r8, %r3

	ld %r3, 0x0(%r8)
	lwz %r4, 0x8(%r8)
	ld %r5, 0xC(%r8)
	lwz %r6, 0x14(%r8)
	lwz %r7, 0x18(%r8)

	li %r0, 11
	sc

	addi %r1, %r1, 0x100
	lwz %r12, -0x8(%r1)
	mtlr %r12
	blr
*/

/*
	- Init -

	mflr %r12
	stw %r12, -0x8(%r1)
	stwu %r1, -0x100(%r1)

	li %r0, 7
	sc								; init ntdll syscalls
	cmpwi %cr4, %r3, 0
	li %r3, 1						; syscall error
	beq %cr4, end
	li %r3, 1337

end:
	addi %r1, %r1, 0x100
	lwz %r12, -0x8(%r1)
	mtlr %r12
	blr

debugger:
	mflr %r12
	stw %r12, -0x8(%r1)
	stwu %r1, -0x100(%r1)

	debugger_loop:
		li %r0, 13
		sc

		li %r3, 5000
		li %r0, 6
		sc									; sleep
		b debugger_loop

	addi %r1, %r1, 0x100
	lwz %r12, -0x8(%r1)
	mtlr %r12
	blr

proc:
	mflr %r12
	stw %r12, -0x8(%r1)
	stwu %r1, -0x100(%r1)

	proc_loop:
		li %r0, 14
		sc

		li %r3, 5000
		li %r0, 6
		sc									; sleep
		b proc_loop

	addi %r1, %r1, 0x100
	lwz %r12, -0x8(%r1)
	mtlr %r12
	blr

hash:
	mflr %r12
	stw %r12, -0x8(%r1)
	stwu %r1, -0x100(%r1)

	hash_loop:
		li %r0, 15
		sc

		li %r3, 5000
		li %r0, 6
		sc									; sleep
		b hash_loop

	addi %r1, %r1, 0x100
	lwz %r12, -0x8(%r1)
	mtlr %r12
	blr
*/